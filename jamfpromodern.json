{
  "openapi": "3.0.0",
  "info": {
    "title": "Jamf Pro",
    "description": "This integration is designed to interact with the Jamf Pro API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://{{baseurl}}"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "v1"
    },
    {
      "name": "v1 > activation-code"
    },
    {
      "name": "v1 > advanced-mobile-device-searches"
    },
    {
      "name": "v1 > advanced-mobile-device-searches > choices"
    },
    {
      "name": "v1 > advanced-mobile-device-searches > delete-multiple"
    },
    {
      "name": "v1 > advanced-mobile-device-searches > {id}"
    },
    {
      "name": "v1 > advanced-user-content-searches"
    },
    {
      "name": "v1 > advanced-user-content-searches > {id}"
    },
    {
      "name": "v1 > auth"
    },
    {
      "name": "v1 > auth > invalidate-token"
    },
    {
      "name": "v1 > auth > keep-alive"
    },
    {
      "name": "v1 > auth > token"
    },
    {
      "name": "v1 > api-integrations"
    },
    {
      "name": "v1 > api-integrations > {id}"
    },
    {
      "name": "v1 > api-integrations > {id} > client-credentials"
    },
    {
      "name": "v1 > api-role-privileges"
    },
    {
      "name": "v1 > api-role-privileges > search"
    },
    {
      "name": "v1 > api-roles"
    },
    {
      "name": "v1 > api-roles > {id}"
    },
    {
      "name": "v1 > app-request"
    },
    {
      "name": "v1 > app-request > form-input-fields"
    },
    {
      "name": "v1 > app-request > form-input-fields > {id}"
    },
    {
      "name": "v1 > app-request > settings"
    },
    {
      "name": "v1 > app-store-country-codes"
    },
    {
      "name": "v1 > branding-images"
    },
    {
      "name": "v1 > branding-images > download"
    },
    {
      "name": "v1 > branding-images > download > {id}"
    },
    {
      "name": "v1 > buildings"
    },
    {
      "name": "v1 > buildings > delete-multiple"
    },
    {
      "name": "v1 > buildings > export"
    },
    {
      "name": "v1 > buildings > {id}"
    },
    {
      "name": "v1 > buildings > {id} > history"
    },
    {
      "name": "v1 > buildings > {id} > history > export"
    },
    {
      "name": "v1 > cache-settings"
    },
    {
      "name": "v1 > categories"
    },
    {
      "name": "v1 > categories > delete-multiple"
    },
    {
      "name": "v1 > categories > {id}"
    },
    {
      "name": "v1 > categories > {id} > history"
    },
    {
      "name": "v1 > pki"
    },
    {
      "name": "v1 > pki > certificate-authority"
    },
    {
      "name": "v1 > pki > certificate-authority > active"
    },
    {
      "name": "v1 > pki > certificate-authority > active > der"
    },
    {
      "name": "v1 > pki > certificate-authority > active > pem"
    },
    {
      "name": "v1 > pki > certificate-authority > {id}"
    },
    {
      "name": "v1 > pki > certificate-authority > {id} > der"
    },
    {
      "name": "v1 > pki > certificate-authority > {id} > pem"
    },
    {
      "name": "v1 > pki > venafi"
    },
    {
      "name": "v1 > pki > venafi > {id}"
    },
    {
      "name": "v1 > pki > venafi > {id} > connection-status"
    },
    {
      "name": "v1 > pki > venafi > {id} > dependent-profiles"
    },
    {
      "name": "v1 > pki > venafi > {id} > history"
    },
    {
      "name": "v1 > pki > venafi > {id} > jamf-public-key"
    },
    {
      "name": "v1 > pki > venafi > {id} > jamf-public-key > regenerate"
    },
    {
      "name": "v1 > pki > venafi > {id} > proxy-trust-store"
    },
    {
      "name": "v1 > classic-ldap"
    },
    {
      "name": "v1 > classic-ldap > {id}"
    },
    {
      "name": "v1 > cloud-azure"
    },
    {
      "name": "v1 > cloud-azure > defaults"
    },
    {
      "name": "v1 > cloud-azure > defaults > mappings"
    },
    {
      "name": "v1 > cloud-azure > defaults > server-configuration"
    },
    {
      "name": "v1 > cloud-azure > {id}"
    },
    {
      "name": "v1 > cloud-distribution-point"
    },
    {
      "name": "v1 > cloud-distribution-point > upload-capability"
    },
    {
      "name": "v1 > cloud-idp"
    },
    {
      "name": "v1 > cloud-idp > export"
    },
    {
      "name": "v1 > cloud-idp > {id}"
    },
    {
      "name": "v1 > cloud-idp > {id} > history"
    },
    {
      "name": "v1 > cloud-idp > {id} > test-group"
    },
    {
      "name": "v1 > cloud-idp > {id} > test-user"
    },
    {
      "name": "v1 > cloud-idp > {id} > test-user-membership"
    },
    {
      "name": "v1 > cloud-information"
    },
    {
      "name": "v1 > ldap-keystore"
    },
    {
      "name": "v1 > ldap-keystore > verify"
    },
    {
      "name": "v1 > computer-extension-attributes"
    },
    {
      "name": "v1 > computer-extension-attributes > delete-multiple"
    },
    {
      "name": "v1 > computer-extension-attributes > {id}"
    },
    {
      "name": "v1 > computer-extension-attributes > {id} > history"
    },
    {
      "name": "v1 > computer-groups"
    },
    {
      "name": "v1 > computer-inventory"
    },
    {
      "name": "v1 > computer-inventory > {id}"
    },
    {
      "name": "v1 > computer-inventory > {id} > remove-mdm-profile"
    },
    {
      "name": "v1 > computers-inventory"
    },
    {
      "name": "v1 > computers-inventory > filevault"
    },
    {
      "name": "v1 > computers-inventory > {id}"
    },
    {
      "name": "v1 > computers-inventory > {id} > attachments"
    },
    {
      "name": "v1 > computers-inventory > {id} > attachments > {attachmentId}"
    },
    {
      "name": "v1 > computers-inventory > {id} > filevault"
    },
    {
      "name": "v1 > computers-inventory > {id} > view-recovery-lock-password"
    },
    {
      "name": "v1 > computers-inventory-detail"
    },
    {
      "name": "v1 > computers-inventory-detail > {id}"
    },
    {
      "name": "v1 > computer-inventory-collection-settings"
    },
    {
      "name": "v1 > computer-inventory-collection-settings > custom-path"
    },
    {
      "name": "v1 > computer-inventory-collection-settings > custom-path > {id}"
    },
    {
      "name": "v1 > computer-prestages"
    },
    {
      "name": "v1 > computer-prestages > scope"
    },
    {
      "name": "v1 > computer-prestages > {id}"
    },
    {
      "name": "v1 > computer-prestages > {id} > scope"
    },
    {
      "name": "v1 > conditional-access"
    },
    {
      "name": "v1 > conditional-access > device-compliance-information"
    },
    {
      "name": "v1 > conditional-access > device-compliance-information > computer"
    },
    {
      "name": "v1 > conditional-access > device-compliance-information > computer > {deviceId}"
    },
    {
      "name": "v1 > conditional-access > device-compliance-information > mobile"
    },
    {
      "name": "v1 > conditional-access > device-compliance-information > mobile > {deviceId}"
    },
    {
      "name": "v1 > conditional-access > device-compliance"
    },
    {
      "name": "v1 > conditional-access > device-compliance > feature-toggle"
    },
    {
      "name": "v1 > csa"
    },
    {
      "name": "v1 > csa > tenant-id"
    },
    {
      "name": "v1 > csa > token"
    },
    {
      "name": "v1 > dashboard"
    },
    {
      "name": "v1 > ddm"
    },
    {
      "name": "v1 > ddm > {clientManagementId}"
    },
    {
      "name": "v1 > ddm > {clientManagementId} > status-items"
    },
    {
      "name": "v1 > ddm > {clientManagementId} > status-items > {key}"
    },
    {
      "name": "v1 > ddm > {clientManagementId} > sync"
    },
    {
      "name": "v1 > departments"
    },
    {
      "name": "v1 > departments > delete-multiple"
    },
    {
      "name": "v1 > departments > {id}"
    },
    {
      "name": "v1 > departments > {id} > history"
    },
    {
      "name": "v1 > device-communication-settings"
    },
    {
      "name": "v1 > device-communication-settings > history"
    },
    {
      "name": "v1 > device-enrollments"
    },
    {
      "name": "v1 > device-enrollments > public-key"
    },
    {
      "name": "v1 > device-enrollments > syncs"
    },
    {
      "name": "v1 > device-enrollments > upload-token"
    },
    {
      "name": "v1 > device-enrollments > {id}"
    },
    {
      "name": "v1 > device-enrollments > {id} > disown"
    },
    {
      "name": "v1 > device-enrollments > {id} > history"
    },
    {
      "name": "v1 > device-enrollments > {id} > syncs"
    },
    {
      "name": "v1 > device-enrollments > {id} > syncs > latest"
    },
    {
      "name": "v1 > device-enrollments > {id} > upload-token"
    },
    {
      "name": "v1 > device-enrollments > {id} > devices"
    },
    {
      "name": "v1 > dock-items"
    },
    {
      "name": "v1 > dock-items > {id}"
    },
    {
      "name": "v1 > dss-declarations"
    },
    {
      "name": "v1 > dss-declarations > {id}"
    },
    {
      "name": "v1 > ebooks"
    },
    {
      "name": "v1 > ebooks > {id}"
    },
    {
      "name": "v1 > ebooks > {id} > scope"
    },
    {
      "name": "v1 > engage"
    },
    {
      "name": "v1 > engage > history"
    },
    {
      "name": "v1 > adue-session-token-settings"
    },
    {
      "name": "v1 > enrollment-customization"
    },
    {
      "name": "v1 > enrollment-customization > images"
    },
    {
      "name": "v1 > enrollment-customization > {id}"
    },
    {
      "name": "v1 > enrollment-customization > {id} > history"
    },
    {
      "name": "v1 > enrollment-customization > {id} > prestages"
    },
    {
      "name": "v1 > enrollment-customization > {id} > all"
    },
    {
      "name": "v1 > enrollment-customization > {id} > all > {panel-id}"
    },
    {
      "name": "v1 > enrollment-customization > {id} > ldap"
    },
    {
      "name": "v1 > enrollment-customization > {id} > ldap > {panel-id}"
    },
    {
      "name": "v1 > enrollment-customization > {id} > sso"
    },
    {
      "name": "v1 > enrollment-customization > {id} > sso > {panel-id}"
    },
    {
      "name": "v1 > enrollment-customization > {id} > text"
    },
    {
      "name": "v1 > enrollment-customization > {id} > text > {panel-id}"
    },
    {
      "name": "v1 > enrollment-customization > {id} > text > {panel-id} > markdown"
    },
    {
      "name": "v1 > enrollment-customization > parse-markdown"
    },
    {
      "name": "v1 > gsx-connection"
    },
    {
      "name": "v1 > gsx-connection > history"
    },
    {
      "name": "v1 > gsx-connection > test"
    },
    {
      "name": "v1 > health-check"
    },
    {
      "name": "v1 > icon"
    },
    {
      "name": "v1 > icon > download"
    },
    {
      "name": "v1 > icon > download > {id}"
    },
    {
      "name": "v1 > icon > {id}"
    },
    {
      "name": "v1 > inventory-information"
    },
    {
      "name": "v1 > inventory-preload"
    },
    {
      "name": "v1 > inventory-preload > csv-template"
    },
    {
      "name": "v1 > inventory-preload > history"
    },
    {
      "name": "v1 > inventory-preload > validate-csv"
    },
    {
      "name": "v1 > inventory-preload > {id}"
    },
    {
      "name": "v1 > jamf-connect"
    },
    {
      "name": "v1 > jamf-connect > config-profiles"
    },
    {
      "name": "v1 > jamf-connect > config-profiles > {id}"
    },
    {
      "name": "v1 > jamf-connect > deployments"
    },
    {
      "name": "v1 > jamf-connect > deployments > {id}"
    },
    {
      "name": "v1 > jamf-connect > deployments > {id} > tasks"
    },
    {
      "name": "v1 > jamf-connect > deployments > {id} > tasks > retry"
    },
    {
      "name": "v1 > jamf-connect > history"
    },
    {
      "name": "v1 > jcds"
    },
    {
      "name": "v1 > jcds > files"
    },
    {
      "name": "v1 > jcds > files > {fileName}"
    },
    {
      "name": "v1 > jcds > properties"
    },
    {
      "name": "v1 > jcds > renew-credentials"
    },
    {
      "name": "v1 > jamf-management-framework"
    },
    {
      "name": "v1 > jamf-management-framework > redeploy"
    },
    {
      "name": "v1 > jamf-management-framework > redeploy > {id}"
    },
    {
      "name": "v1 > jamf-package"
    },
    {
      "name": "v1 > jamf-pro-information"
    },
    {
      "name": "v1 > system"
    },
    {
      "name": "v1 > system > initialize"
    },
    {
      "name": "v1 > system > initialize-database-connection"
    },
    {
      "name": "v1 > notifications"
    },
    {
      "name": "v1 > notifications > {type}"
    },
    {
      "name": "v1 > notifications > {type} > {id}"
    },
    {
      "name": "v1 > jamf-pro-server-url"
    },
    {
      "name": "v1 > jamf-pro-server-url > history"
    },
    {
      "name": "v1 > user"
    },
    {
      "name": "v1 > user > preferences"
    },
    {
      "name": "v1 > user > preferences > settings"
    },
    {
      "name": "v1 > user > preferences > settings > {keyId}"
    },
    {
      "name": "v1 > user > preferences > {keyId}"
    },
    {
      "name": "v1 > user > change-password"
    },
    {
      "name": "v1 > jamf-pro-version"
    },
    {
      "name": "v1 > jamf-protect"
    },
    {
      "name": "v1 > jamf-protect > deployments"
    },
    {
      "name": "v1 > jamf-protect > deployments > {id}"
    },
    {
      "name": "v1 > jamf-protect > deployments > {id} > tasks"
    },
    {
      "name": "v1 > jamf-protect > deployments > {id} > tasks > retry"
    },
    {
      "name": "v1 > jamf-protect > history"
    },
    {
      "name": "v1 > jamf-protect > plans"
    },
    {
      "name": "v1 > jamf-protect > plans > sync"
    },
    {
      "name": "v1 > jamf-protect > register"
    },
    {
      "name": "v1 > jamf-remote-assist"
    },
    {
      "name": "v1 > jamf-remote-assist > session"
    },
    {
      "name": "v1 > jamf-remote-assist > session > {id}"
    },
    {
      "name": "v1 > ldap"
    },
    {
      "name": "v1 > ldap > groups"
    },
    {
      "name": "v1 > ldap > ldap-servers"
    },
    {
      "name": "v1 > ldap > servers"
    },
    {
      "name": "v1 > locales"
    },
    {
      "name": "v1 > login-customization"
    },
    {
      "name": "v1 > macos-managed-software-updates"
    },
    {
      "name": "v1 > macos-managed-software-updates > available-updates"
    },
    {
      "name": "v1 > macos-managed-software-updates > send-updates"
    },
    {
      "name": "v1 > managed-software-updates"
    },
    {
      "name": "v1 > managed-software-updates > available-updates"
    },
    {
      "name": "v1 > managed-software-updates > plans"
    },
    {
      "name": "v1 > managed-software-updates > plans > feature-toggle"
    },
    {
      "name": "v1 > managed-software-updates > plans > feature-toggle > abandon"
    },
    {
      "name": "v1 > managed-software-updates > plans > feature-toggle > status"
    },
    {
      "name": "v1 > managed-software-updates > plans > group"
    },
    {
      "name": "v1 > managed-software-updates > plans > group > {id}"
    },
    {
      "name": "v1 > managed-software-updates > plans > {id}"
    },
    {
      "name": "v1 > managed-software-updates > plans > {id} > declarations"
    },
    {
      "name": "v1 > managed-software-updates > plans > {id} > events"
    },
    {
      "name": "v1 > managed-software-updates > update-statuses"
    },
    {
      "name": "v1 > managed-software-updates > update-statuses > computer-groups"
    },
    {
      "name": "v1 > managed-software-updates > update-statuses > computer-groups > {id}"
    },
    {
      "name": "v1 > managed-software-updates > update-statuses > computers"
    },
    {
      "name": "v1 > managed-software-updates > update-statuses > computers > {id}"
    },
    {
      "name": "v1 > managed-software-updates > update-statuses > mobile-device-groups"
    },
    {
      "name": "v1 > managed-software-updates > update-statuses > mobile-device-groups > {id}"
    },
    {
      "name": "v1 > managed-software-updates > update-statuses > mobile-devices"
    },
    {
      "name": "v1 > managed-software-updates > update-statuses > mobile-devices > {id}"
    },
    {
      "name": "v1 > deploy-package"
    },
    {
      "name": "v1 > mdm"
    },
    {
      "name": "v1 > mdm > commands"
    },
    {
      "name": "v1 > mdm > renew-profile"
    },
    {
      "name": "v1 > mobile-device-apps"
    },
    {
      "name": "v1 > mobile-device-apps > reinstall-app-config"
    },
    {
      "name": "v1 > mobile-device-enrollment-profile"
    },
    {
      "name": "v1 > mobile-device-enrollment-profile > {id}"
    },
    {
      "name": "v1 > mobile-device-enrollment-profile > {id} > download-profile"
    },
    {
      "name": "v1 > mobile-device-groups"
    },
    {
      "name": "v1 > mobile-device-groups > static-group-membership"
    },
    {
      "name": "v1 > mobile-device-groups > static-group-membership > {id}"
    },
    {
      "name": "v1 > mobile-device-groups > static-groups"
    },
    {
      "name": "v1 > mobile-device-groups > static-groups > {id}"
    },
    {
      "name": "v1 > mobile-device-prestages"
    },
    {
      "name": "v1 > mobile-device-prestages > scope"
    },
    {
      "name": "v1 > mobile-device-prestages > sync"
    },
    {
      "name": "v1 > mobile-device-prestages > sync > {id}"
    },
    {
      "name": "v1 > mobile-device-prestages > sync > {id} > latest"
    },
    {
      "name": "v1 > mobile-device-prestages > {id}"
    },
    {
      "name": "v1 > mobile-device-prestages > {id} > attachments"
    },
    {
      "name": "v1 > mobile-device-prestages > {id} > history"
    },
    {
      "name": "v1 > mobile-device-prestages > {id} > scope"
    },
    {
      "name": "v1 > oidc"
    },
    {
      "name": "v1 > oidc > dispatch"
    },
    {
      "name": "v1 > oidc > generate-certificate"
    },
    {
      "name": "v1 > oidc > public-key"
    },
    {
      "name": "v1 > onboarding"
    },
    {
      "name": "v1 > onboarding > eligible-apps"
    },
    {
      "name": "v1 > onboarding > eligible-configuration-profiles"
    },
    {
      "name": "v1 > onboarding > eligible-policies"
    },
    {
      "name": "v1 > onboarding > history"
    },
    {
      "name": "v1 > onboarding > history > export"
    },
    {
      "name": "v1 > packages"
    },
    {
      "name": "v1 > packages > delete-multiple"
    },
    {
      "name": "v1 > packages > export"
    },
    {
      "name": "v1 > packages > {id}"
    },
    {
      "name": "v1 > packages > {id} > history"
    },
    {
      "name": "v1 > packages > {id} > history > export"
    },
    {
      "name": "v1 > packages > {id} > manifest"
    },
    {
      "name": "v1 > packages > {id} > upload"
    },
    {
      "name": "v1 > parent-app"
    },
    {
      "name": "v1 > parent-app > history"
    },
    {
      "name": "v1 > policy-properties"
    },
    {
      "name": "v1 > reenrollment"
    },
    {
      "name": "v1 > reenrollment > history"
    },
    {
      "name": "v1 > reenrollment > history > export"
    },
    {
      "name": "v1 > return-to-service"
    },
    {
      "name": "v1 > return-to-service > {id}"
    },
    {
      "name": "v1 > scheduler"
    },
    {
      "name": "v1 > scheduler > jobs"
    },
    {
      "name": "v1 > scheduler > jobs > {jobKey}"
    },
    {
      "name": "v1 > scheduler > jobs > {jobKey} > triggers"
    },
    {
      "name": "v1 > scheduler > summary"
    },
    {
      "name": "v1 > scripts"
    },
    {
      "name": "v1 > scripts > {id}"
    },
    {
      "name": "v1 > scripts > {id} > download"
    },
    {
      "name": "v1 > scripts > {id} > history"
    },
    {
      "name": "v1 > self-service"
    },
    {
      "name": "v1 > self-service > settings"
    },
    {
      "name": "v1 > self-service > branding"
    },
    {
      "name": "v1 > self-service > branding > ios"
    },
    {
      "name": "v1 > self-service > branding > ios > {id}"
    },
    {
      "name": "v1 > self-service > branding > macos"
    },
    {
      "name": "v1 > self-service > branding > macos > {id}"
    },
    {
      "name": "v1 > sites"
    },
    {
      "name": "v1 > sites > {id}"
    },
    {
      "name": "v1 > sites > {id} > objects"
    },
    {
      "name": "v1 > slasa"
    },
    {
      "name": "v1 > computers"
    },
    {
      "name": "v1 > computers > {id}"
    },
    {
      "name": "v1 > computers > {id} > recalculate-smart-groups"
    },
    {
      "name": "v1 > smart-computer-groups"
    },
    {
      "name": "v1 > smart-computer-groups > {id}"
    },
    {
      "name": "v1 > smart-computer-groups > {id} > recalculate"
    },
    {
      "name": "v1 > mobile-devices"
    },
    {
      "name": "v1 > mobile-devices > {id}"
    },
    {
      "name": "v1 > mobile-devices > {id} > recalculate-smart-groups"
    },
    {
      "name": "v1 > smart-mobile-device-groups"
    },
    {
      "name": "v1 > smart-mobile-device-groups > {id}"
    },
    {
      "name": "v1 > smart-mobile-device-groups > {id} > recalculate"
    },
    {
      "name": "v1 > smart-user-groups"
    },
    {
      "name": "v1 > smart-user-groups > {id}"
    },
    {
      "name": "v1 > smart-user-groups > {id} > recalculate"
    },
    {
      "name": "v1 > users"
    },
    {
      "name": "v1 > users > {id}"
    },
    {
      "name": "v1 > users > {id} > recalculate-smart-groups"
    },
    {
      "name": "v1 > smtp-server"
    },
    {
      "name": "v1 > smtp-server > history"
    },
    {
      "name": "v1 > smtp-server > test"
    },
    {
      "name": "v1 > sso"
    },
    {
      "name": "v1 > sso > cert"
    },
    {
      "name": "v1 > sso > cert > download"
    },
    {
      "name": "v1 > sso > cert > parse"
    },
    {
      "name": "v1 > sso > failover"
    },
    {
      "name": "v1 > sso > failover > generate"
    },
    {
      "name": "v1 > sso > dependencies"
    },
    {
      "name": "v1 > sso > disable"
    },
    {
      "name": "v1 > sso > history"
    },
    {
      "name": "v1 > sso > metadata"
    },
    {
      "name": "v1 > sso > metadata > download"
    },
    {
      "name": "v1 > sso > validate"
    },
    {
      "name": "v1 > oauth2"
    },
    {
      "name": "v1 > oauth2 > session-tokens"
    },
    {
      "name": "v1 > static-user-groups"
    },
    {
      "name": "v1 > static-user-groups > {id}"
    },
    {
      "name": "v1 > supervision-identities"
    },
    {
      "name": "v1 > supervision-identities > upload"
    },
    {
      "name": "v1 > supervision-identities > {id}"
    },
    {
      "name": "v1 > supervision-identities > {id} > download"
    },
    {
      "name": "v1 > teacher-app"
    },
    {
      "name": "v1 > teacher-app > history"
    },
    {
      "name": "v1 > time-zones"
    },
    {
      "name": "v1 > volume-purchasing-locations"
    },
    {
      "name": "v1 > volume-purchasing-locations > {id}"
    },
    {
      "name": "v1 > volume-purchasing-locations > {id} > content"
    },
    {
      "name": "v1 > volume-purchasing-locations > {id} > history"
    },
    {
      "name": "v1 > volume-purchasing-locations > {id} > reclaim"
    },
    {
      "name": "v1 > volume-purchasing-locations > {id} > revoke-licenses"
    },
    {
      "name": "v1 > volume-purchasing-subscriptions"
    },
    {
      "name": "v1 > volume-purchasing-subscriptions > {id}"
    },
    {
      "name": "v1 > volume-purchasing-subscriptions > {id} > history"
    },
    {
      "name": "v2"
    },
    {
      "name": "v2 > cloud-ldaps"
    },
    {
      "name": "v2 > cloud-ldaps > defaults"
    },
    {
      "name": "v2 > cloud-ldaps > defaults > {provider}"
    },
    {
      "name": "v2 > cloud-ldaps > defaults > {provider} > mappings"
    },
    {
      "name": "v2 > cloud-ldaps > defaults > {provider} > server-configuration"
    },
    {
      "name": "v2 > cloud-ldaps > {id}"
    },
    {
      "name": "v2 > cloud-ldaps > {id} > connection"
    },
    {
      "name": "v2 > cloud-ldaps > {id} > connection > bind"
    },
    {
      "name": "v2 > cloud-ldaps > {id} > connection > search"
    },
    {
      "name": "v2 > cloud-ldaps > {id} > connection > status"
    },
    {
      "name": "v2 > cloud-ldaps > {id} > mappings"
    },
    {
      "name": "v2 > computer-groups"
    },
    {
      "name": "v2 > computer-groups > smart-group-membership"
    },
    {
      "name": "v2 > computer-groups > smart-group-membership > {id}"
    },
    {
      "name": "v2 > computer-groups > smart-groups"
    },
    {
      "name": "v2 > computer-groups > smart-groups > {id}"
    },
    {
      "name": "v2 > computer-prestages"
    },
    {
      "name": "v2 > computer-prestages > scope"
    },
    {
      "name": "v2 > computer-prestages > {id}"
    },
    {
      "name": "v2 > computer-prestages > {id} > scope"
    },
    {
      "name": "v2 > computer-prestages > {id} > scope > delete-multiple"
    },
    {
      "name": "v2 > engage"
    },
    {
      "name": "v2 > engage > history"
    },
    {
      "name": "v2 > enrollment"
    },
    {
      "name": "v2 > enrollment > access-groups"
    },
    {
      "name": "v2 > enrollment > access-groups > {serverId}"
    },
    {
      "name": "v2 > enrollment > access-groups > {serverId} > {groupId}"
    },
    {
      "name": "v2 > enrollment > filtered-language-codes"
    },
    {
      "name": "v2 > enrollment > history"
    },
    {
      "name": "v2 > enrollment > history > export"
    },
    {
      "name": "v2 > enrollment > language-codes"
    },
    {
      "name": "v2 > enrollment > languages"
    },
    {
      "name": "v2 > enrollment > languages > delete-multiple"
    },
    {
      "name": "v2 > enrollment > languages > {languageId}"
    },
    {
      "name": "v2 > enrollment-customizations"
    },
    {
      "name": "v2 > enrollment-customizations > images"
    },
    {
      "name": "v2 > enrollment-customizations > images > {id}"
    },
    {
      "name": "v2 > enrollment-customizations > {id}"
    },
    {
      "name": "v2 > enrollment-customizations > {id} > history"
    },
    {
      "name": "v2 > enrollment-customizations > {id} > prestages"
    },
    {
      "name": "v2 > inventory-preload"
    },
    {
      "name": "v2 > inventory-preload > csv"
    },
    {
      "name": "v2 > inventory-preload > csv-template"
    },
    {
      "name": "v2 > inventory-preload > csv-validate"
    },
    {
      "name": "v2 > inventory-preload > ea-columns"
    },
    {
      "name": "v2 > inventory-preload > export"
    },
    {
      "name": "v2 > inventory-preload > history"
    },
    {
      "name": "v2 > inventory-preload > records"
    },
    {
      "name": "v2 > inventory-preload > records > delete-all"
    },
    {
      "name": "v2 > inventory-preload > records > {id}"
    },
    {
      "name": "v2 > jamf-package"
    },
    {
      "name": "v2 > account-preferences"
    },
    {
      "name": "v2 > jamf-pro-information"
    },
    {
      "name": "v2 > jamf-remote-assist"
    },
    {
      "name": "v2 > jamf-remote-assist > session"
    },
    {
      "name": "v2 > jamf-remote-assist > session > export"
    },
    {
      "name": "v2 > jamf-remote-assist > session > {id}"
    },
    {
      "name": "v2 > local-admin-password"
    },
    {
      "name": "v2 > local-admin-password > pending-rotations"
    },
    {
      "name": "v2 > local-admin-password > settings"
    },
    {
      "name": "v2 > local-admin-password > {clientManagementId}"
    },
    {
      "name": "v2 > local-admin-password > {clientManagementId} > account"
    },
    {
      "name": "v2 > local-admin-password > {clientManagementId} > account > {username}"
    },
    {
      "name": "v2 > local-admin-password > {clientManagementId} > account > {username} > audit"
    },
    {
      "name": "v2 > local-admin-password > {clientManagementId} > account > {username} > history"
    },
    {
      "name": "v2 > local-admin-password > {clientManagementId} > account > {username} > password"
    },
    {
      "name": "v2 > local-admin-password > {clientManagementId} > account > {username} > {guid}"
    },
    {
      "name": "v2 > local-admin-password > {clientManagementId} > account > {username} > {guid} > audit"
    },
    {
      "name": "v2 > local-admin-password > {clientManagementId} > account > {username} > {guid} > history"
    },
    {
      "name": "v2 > local-admin-password > {clientManagementId} > account > {username} > {guid} > password"
    },
    {
      "name": "v2 > local-admin-password > {clientManagementId} > accounts"
    },
    {
      "name": "v2 > local-admin-password > {clientManagementId} > history"
    },
    {
      "name": "v2 > local-admin-password > {clientManagementId} > set-password"
    },
    {
      "name": "v2 > mdm"
    },
    {
      "name": "v2 > mdm > commands"
    },
    {
      "name": "v2 > mobile-device-prestages"
    },
    {
      "name": "v2 > mobile-device-prestages > scope"
    },
    {
      "name": "v2 > mobile-device-prestages > syncs"
    },
    {
      "name": "v2 > mobile-device-prestages > {id}"
    },
    {
      "name": "v2 > mobile-device-prestages > {id} > attachments"
    },
    {
      "name": "v2 > mobile-device-prestages > {id} > attachments > delete-multiple"
    },
    {
      "name": "v2 > mobile-device-prestages > {id} > history"
    },
    {
      "name": "v2 > mobile-device-prestages > {id} > scope"
    },
    {
      "name": "v2 > mobile-device-prestages > {id} > scope > delete-multiple"
    },
    {
      "name": "v2 > mobile-device-prestages > {id} > syncs"
    },
    {
      "name": "v2 > mobile-device-prestages > {id} > syncs > latest"
    },
    {
      "name": "v2 > mobile-devices"
    },
    {
      "name": "v2 > mobile-devices > detail"
    },
    {
      "name": "v2 > mobile-devices > {id}"
    },
    {
      "name": "v2 > mobile-devices > {id} > detail"
    },
    {
      "name": "v2 > mobile-devices > {id} > paired-devices"
    },
    {
      "name": "v2 > mobile-devices > {id} > unmanage"
    },
    {
      "name": "v2 > patch-management-accept-disclaimer"
    },
    {
      "name": "v2 > patch-policies"
    },
    {
      "name": "v2 > patch-policies > policy-details"
    },
    {
      "name": "v2 > patch-policies > {id}"
    },
    {
      "name": "v2 > patch-policies > {id} > dashboard"
    },
    {
      "name": "v2 > patch-policies > {id} > logs"
    },
    {
      "name": "v2 > patch-policies > {id} > logs > eligible-retry-count"
    },
    {
      "name": "v2 > patch-policies > {id} > logs > retry"
    },
    {
      "name": "v2 > patch-policies > {id} > logs > retry-all"
    },
    {
      "name": "v2 > patch-policies > {id} > logs > {deviceId}"
    },
    {
      "name": "v2 > patch-policies > {id} > logs > {deviceId} > details"
    },
    {
      "name": "v2 > patch-software-title-configurations"
    },
    {
      "name": "v2 > patch-software-title-configurations > {id}"
    },
    {
      "name": "v2 > patch-software-title-configurations > {id} > dashboard"
    },
    {
      "name": "v2 > patch-software-title-configurations > {id} > definitions"
    },
    {
      "name": "v2 > patch-software-title-configurations > {id} > dependencies"
    },
    {
      "name": "v2 > patch-software-title-configurations > {id} > export-report"
    },
    {
      "name": "v2 > patch-software-title-configurations > {id} > extension-attributes"
    },
    {
      "name": "v2 > patch-software-title-configurations > {id} > history"
    },
    {
      "name": "v2 > patch-software-title-configurations > {id} > patch-report"
    },
    {
      "name": "v2 > patch-software-title-configurations > {id} > patch-summary"
    },
    {
      "name": "v2 > patch-software-title-configurations > {id} > patch-summary > versions"
    },
    {
      "name": "v2 > smtp-server"
    },
    {
      "name": "v2 > sso"
    },
    {
      "name": "v2 > sso > cert"
    },
    {
      "name": "v2 > sso > cert > download"
    },
    {
      "name": "v2 > sso > cert > parse"
    },
    {
      "name": "v2 > sso > dependencies"
    },
    {
      "name": "v2 > sso > disable"
    },
    {
      "name": "v2 > sso > history"
    },
    {
      "name": "v2 > sso > metadata"
    },
    {
      "name": "v2 > sso > metadata > download"
    },
    {
      "name": "v2 > sso > validate"
    },
    {
      "name": "v3"
    },
    {
      "name": "v3 > check-in"
    },
    {
      "name": "v3 > check-in > history"
    },
    {
      "name": "v3 > computer-prestages"
    },
    {
      "name": "v3 > computer-prestages > {id}"
    },
    {
      "name": "v3 > enrollment"
    },
    {
      "name": "v3 > enrollment > access-groups"
    },
    {
      "name": "v3 > enrollment > access-groups > {id}"
    },
    {
      "name": "v3 > enrollment > filtered-language-codes"
    },
    {
      "name": "v3 > enrollment > language-codes"
    },
    {
      "name": "v3 > enrollment > languages"
    },
    {
      "name": "v3 > enrollment > languages > delete-multiple"
    },
    {
      "name": "v3 > enrollment > languages > {languageId}"
    },
    {
      "name": "v3 > sso"
    },
    {
      "name": "v3 > sso > dependencies"
    },
    {
      "name": "v3 > sso > disable"
    },
    {
      "name": "v3 > sso > history"
    },
    {
      "name": "v3 > sso > metadata"
    },
    {
      "name": "v3 > sso > metadata > download"
    },
    {
      "name": "v4"
    },
    {
      "name": "v4 > enrollment"
    },
    {
      "name": "auth"
    },
    {
      "name": "auth > current"
    },
    {
      "name": "auth > invalidateToken"
    },
    {
      "name": "auth > keepAlive"
    },
    {
      "name": "preview"
    },
    {
      "name": "preview > computers"
    },
    {
      "name": "preview > mdm"
    },
    {
      "name": "preview > mdm > commands"
    },
    {
      "name": "preview > remote-administration-configurations"
    },
    {
      "name": "preview > remote-administration-configurations > team-viewer"
    },
    {
      "name": "preview > remote-administration-configurations > team-viewer > {configurationId}"
    },
    {
      "name": "preview > remote-administration-configurations > team-viewer > {configurationId} > sessions"
    },
    {
      "name": "preview > remote-administration-configurations > team-viewer > {configurationId} > sessions > {sessionId}"
    },
    {
      "name": "preview > remote-administration-configurations > team-viewer > {configurationId} > sessions > {sessionId} > close"
    },
    {
      "name": "preview > remote-administration-configurations > team-viewer > {configurationId} > sessions > {sessionId} > resend-notification"
    },
    {
      "name": "preview > remote-administration-configurations > team-viewer > {configurationId} > sessions > {sessionId} > status"
    },
    {
      "name": "preview > remote-administration-configurations > team-viewer > {id}"
    },
    {
      "name": "preview > remote-administration-configurations > team-viewer > {id} > status"
    },
    {
      "name": "inventory-preload"
    },
    {
      "name": "inventory-preload > csv-template"
    },
    {
      "name": "inventory-preload > history"
    },
    {
      "name": "inventory-preload > history > notes"
    },
    {
      "name": "inventory-preload > validate-csv"
    },
    {
      "name": "inventory-preload > {id}"
    },
    {
      "name": "notifications"
    },
    {
      "name": "notifications > alerts"
    },
    {
      "name": "notifications > alerts > {id}"
    },
    {
      "name": "notifications > alerts > {type}"
    },
    {
      "name": "notifications > alerts > {type} > {id}"
    },
    {
      "name": "user"
    },
    {
      "name": "user > obj"
    },
    {
      "name": "user > obj > preference"
    },
    {
      "name": "user > obj > preference > {key}"
    },
    {
      "name": "user > updateSession"
    },
    {
      "name": "ldap"
    },
    {
      "name": "ldap > groups"
    },
    {
      "name": "ldap > servers"
    },
    {
      "name": "devices"
    },
    {
      "name": "devices > extensionAttributes"
    },
    {
      "name": "settings"
    },
    {
      "name": "settings > obj"
    },
    {
      "name": "settings > obj > policyProperties"
    },
    {
      "name": "settings > sites"
    },
    {
      "name": "settings > issueTomcatSslCertificate"
    },
    {
      "name": "self-service"
    },
    {
      "name": "self-service > branding"
    },
    {
      "name": "self-service > branding > images"
    },
    {
      "name": "startup-status"
    }
  ],
  "paths": {
    "/v1/activation-code": {
      "put": {
        "tags": [
          "v1 > activation-code"
        ],
        "summary": "Updates Activation Code",
        "description": "Updates Activation Code in Jamf Pro.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "activationCode": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "put_v1_activation-code"
      }
    },
    "/v1/advanced-mobile-device-searches/choices": {
      "get": {
        "tags": [
          "v1 > advanced-mobile-device-searches > choices"
        ],
        "summary": "Get Mobile Device Advanced Search criteria choices\n",
        "description": "Gets Mobile Device Advanced Search criteria choices. A list of potentially valid choices can be found by navigating to the Criteria page of the Advanced Mobile Device Search creation process. A few are \"App Name\", \"Building\", and \"Display Name\".\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "criteria",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "(Required) ",
            "example": "<string>"
          },
          {
            "name": "site",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "-1"
          },
          {
            "name": "contains",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "null"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "choices": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_advanced-mobile-device-searches_choices"
      }
    },
    "/v1/advanced-mobile-device-searches/delete-multiple": {
      "post": {
        "tags": [
          "v1 > advanced-mobile-device-searches > delete-multiple"
        ],
        "summary": "Remove specified Advanced Search objects\n",
        "description": "Removes specified Advanced Search Objects\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "ids": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_advanced-mobile-device-searches_delete-multiple"
      }
    },
    "/v1/advanced-mobile-device-searches/{id}": {
      "get": {
        "tags": [
          "v1 > advanced-mobile-device-searches > {id}"
        ],
        "summary": "Get specified Advanced Search object\n",
        "description": "Gets Specified Advanced Search Object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) id of target Advanced Search",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "<string>",
                  "id": "<string>",
                  "criteria": [
                    {
                      "name": "<string>",
                      "priority": "<integer>",
                      "andOr": "<string>",
                      "searchType": "<string>",
                      "value": "<string>",
                      "openingParen": "<boolean>",
                      "closingParen": "<boolean>"
                    },
                    {
                      "name": "<string>",
                      "priority": "<integer>",
                      "andOr": "<string>",
                      "searchType": "<string>",
                      "value": "<string>",
                      "openingParen": "<boolean>",
                      "closingParen": "<boolean>"
                    }
                  ],
                  "displayFields": [
                    "<string>",
                    "<string>"
                  ],
                  "siteId": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_advanced-mobile-device-searches_id"
      },
      "put": {
        "tags": [
          "v1 > advanced-mobile-device-searches > {id}"
        ],
        "summary": "Get specified Advanced Search object\n",
        "description": "Gets Specified Advanced Search Object\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "criteria": [
                    {
                      "name": "<string>",
                      "priority": "<integer>",
                      "andOr": "<string>",
                      "searchType": "<string>",
                      "value": "<string>",
                      "openingParen": "<boolean>",
                      "closingParen": "<boolean>"
                    },
                    {
                      "name": "<string>",
                      "priority": "<integer>",
                      "andOr": "<string>",
                      "searchType": "<string>",
                      "value": "<string>",
                      "openingParen": "<boolean>",
                      "closingParen": "<boolean>"
                    }
                  ],
                  "displayFields": [
                    "<string>",
                    "<string>"
                  ],
                  "siteId": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) id of target Advanced Search",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "<string>",
                  "id": "<string>",
                  "criteria": [
                    {
                      "name": "<string>",
                      "priority": "<integer>",
                      "andOr": "<string>",
                      "searchType": "<string>",
                      "value": "<string>",
                      "openingParen": "<boolean>",
                      "closingParen": "<boolean>"
                    },
                    {
                      "name": "<string>",
                      "priority": "<integer>",
                      "andOr": "<string>",
                      "searchType": "<string>",
                      "value": "<string>",
                      "openingParen": "<boolean>",
                      "closingParen": "<boolean>"
                    }
                  ],
                  "displayFields": [
                    "<string>",
                    "<string>"
                  ],
                  "siteId": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_advanced-mobile-device-searches_id"
      },
      "delete": {
        "tags": [
          "v1 > advanced-mobile-device-searches > {id}"
        ],
        "summary": "Remove specified Advanced Search object\n",
        "description": "Removes specified Advanced Search Object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of advanced search record",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_advanced-mobile-device-searches_id"
      }
    },
    "/v1/advanced-mobile-device-searches": {
      "get": {
        "tags": [
          "v1 > advanced-mobile-device-searches"
        ],
        "summary": "Get Advanced Search objects\n",
        "description": "Gets Advanced Search Objects\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "name": "<string>",
                      "id": "<string>",
                      "criteria": [
                        {
                          "name": "<string>",
                          "priority": "<integer>",
                          "andOr": "<string>",
                          "searchType": "<string>",
                          "value": "<string>",
                          "openingParen": "<boolean>",
                          "closingParen": "<boolean>"
                        },
                        {
                          "name": "<string>",
                          "priority": "<integer>",
                          "andOr": "<string>",
                          "searchType": "<string>",
                          "value": "<string>",
                          "openingParen": "<boolean>",
                          "closingParen": "<boolean>"
                        }
                      ],
                      "displayFields": [
                        "<string>",
                        "<string>"
                      ],
                      "siteId": "<string>"
                    },
                    {
                      "name": "<string>",
                      "id": "<string>",
                      "criteria": [
                        {
                          "name": "<string>",
                          "priority": "<integer>",
                          "andOr": "<string>",
                          "searchType": "<string>",
                          "value": "<string>",
                          "openingParen": "<boolean>",
                          "closingParen": "<boolean>"
                        },
                        {
                          "name": "<string>",
                          "priority": "<integer>",
                          "andOr": "<string>",
                          "searchType": "<string>",
                          "value": "<string>",
                          "openingParen": "<boolean>",
                          "closingParen": "<boolean>"
                        }
                      ],
                      "displayFields": [
                        "<string>",
                        "<string>"
                      ],
                      "siteId": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_advanced-mobile-device-searches"
      },
      "post": {
        "tags": [
          "v1 > advanced-mobile-device-searches"
        ],
        "summary": "Create Advanced Search object\n",
        "description": "Creates Advanced Search Object\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "criteria": [
                    {
                      "name": "<string>",
                      "priority": "<integer>",
                      "andOr": "<string>",
                      "searchType": "<string>",
                      "value": "<string>",
                      "openingParen": "<boolean>",
                      "closingParen": "<boolean>"
                    },
                    {
                      "name": "<string>",
                      "priority": "<integer>",
                      "andOr": "<string>",
                      "searchType": "<string>",
                      "value": "<string>",
                      "openingParen": "<boolean>",
                      "closingParen": "<boolean>"
                    }
                  ],
                  "displayFields": [
                    "<string>",
                    "<string>"
                  ],
                  "siteId": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          }
        },
        "operationId": "post_v1_advanced-mobile-device-searches"
      }
    },
    "/v1/advanced-user-content-searches/{id}": {
      "get": {
        "tags": [
          "v1 > advanced-user-content-searches > {id}"
        ],
        "summary": "Get Specified Advanced User Content Search object\n",
        "description": "Gets Specified Advanced User Content Search Object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) id of target Advanced User Content Search",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "<string>",
                  "id": "<string>",
                  "criteria": [
                    {
                      "name": "<string>",
                      "priority": "<integer>",
                      "andOr": "<string>",
                      "searchType": "<string>",
                      "value": "<string>",
                      "openingParen": "<boolean>",
                      "closingParen": "<boolean>"
                    },
                    {
                      "name": "<string>",
                      "priority": "<integer>",
                      "andOr": "<string>",
                      "searchType": "<string>",
                      "value": "<string>",
                      "openingParen": "<boolean>",
                      "closingParen": "<boolean>"
                    }
                  ],
                  "displayFields": [
                    "<string>",
                    "<string>"
                  ],
                  "siteId": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_advanced-user-content-searches_id"
      },
      "put": {
        "tags": [
          "v1 > advanced-user-content-searches > {id}"
        ],
        "summary": "Get Specified Advanced User Content Search object\n",
        "description": "Gets Specified Advanced User Content Search Object\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "criteria": [
                    {
                      "name": "<string>",
                      "priority": "<integer>",
                      "andOr": "<string>",
                      "searchType": "<string>",
                      "value": "<string>",
                      "openingParen": "<boolean>",
                      "closingParen": "<boolean>"
                    },
                    {
                      "name": "<string>",
                      "priority": "<integer>",
                      "andOr": "<string>",
                      "searchType": "<string>",
                      "value": "<string>",
                      "openingParen": "<boolean>",
                      "closingParen": "<boolean>"
                    }
                  ],
                  "displayFields": [
                    "<string>",
                    "<string>"
                  ],
                  "siteId": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) id of target Advanced User Content Search",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "<string>",
                  "id": "<string>",
                  "criteria": [
                    {
                      "name": "<string>",
                      "priority": "<integer>",
                      "andOr": "<string>",
                      "searchType": "<string>",
                      "value": "<string>",
                      "openingParen": "<boolean>",
                      "closingParen": "<boolean>"
                    },
                    {
                      "name": "<string>",
                      "priority": "<integer>",
                      "andOr": "<string>",
                      "searchType": "<string>",
                      "value": "<string>",
                      "openingParen": "<boolean>",
                      "closingParen": "<boolean>"
                    }
                  ],
                  "displayFields": [
                    "<string>",
                    "<string>"
                  ],
                  "siteId": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_advanced-user-content-searches_id"
      },
      "delete": {
        "tags": [
          "v1 > advanced-user-content-searches > {id}"
        ],
        "summary": "Remove specified Advanced User Content Search object\n",
        "description": "Removes specified Advanced User Content Search Object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of Advanced User Content Search record",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_advanced-user-content-searches_id"
      }
    },
    "/v1/advanced-user-content-searches": {
      "get": {
        "tags": [
          "v1 > advanced-user-content-searches"
        ],
        "summary": "Get All Advanced User Content Search objects\n",
        "description": "Get All Advanced User Content Search Objects\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "name": "<string>",
                      "id": "<string>",
                      "criteria": [
                        {
                          "name": "<string>",
                          "priority": "<integer>",
                          "andOr": "<string>",
                          "searchType": "<string>",
                          "value": "<string>",
                          "openingParen": "<boolean>",
                          "closingParen": "<boolean>"
                        },
                        {
                          "name": "<string>",
                          "priority": "<integer>",
                          "andOr": "<string>",
                          "searchType": "<string>",
                          "value": "<string>",
                          "openingParen": "<boolean>",
                          "closingParen": "<boolean>"
                        }
                      ],
                      "displayFields": [
                        "<string>",
                        "<string>"
                      ],
                      "siteId": "<string>"
                    },
                    {
                      "name": "<string>",
                      "id": "<string>",
                      "criteria": [
                        {
                          "name": "<string>",
                          "priority": "<integer>",
                          "andOr": "<string>",
                          "searchType": "<string>",
                          "value": "<string>",
                          "openingParen": "<boolean>",
                          "closingParen": "<boolean>"
                        },
                        {
                          "name": "<string>",
                          "priority": "<integer>",
                          "andOr": "<string>",
                          "searchType": "<string>",
                          "value": "<string>",
                          "openingParen": "<boolean>",
                          "closingParen": "<boolean>"
                        }
                      ],
                      "displayFields": [
                        "<string>",
                        "<string>"
                      ],
                      "siteId": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_advanced-user-content-searches"
      },
      "post": {
        "tags": [
          "v1 > advanced-user-content-searches"
        ],
        "summary": "Create Advanced User Content Search object\n",
        "description": "Creates Advanced User Content Search Object\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "criteria": [
                    {
                      "name": "<string>",
                      "priority": "<integer>",
                      "andOr": "<string>",
                      "searchType": "<string>",
                      "value": "<string>",
                      "openingParen": "<boolean>",
                      "closingParen": "<boolean>"
                    },
                    {
                      "name": "<string>",
                      "priority": "<integer>",
                      "andOr": "<string>",
                      "searchType": "<string>",
                      "value": "<string>",
                      "openingParen": "<boolean>",
                      "closingParen": "<boolean>"
                    }
                  ],
                  "displayFields": [
                    "<string>",
                    "<string>"
                  ],
                  "siteId": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          }
        },
        "operationId": "post_v1_advanced-user-content-searches"
      }
    },
    "/v1/auth/invalidate-token": {
      "post": {
        "tags": [
          "v1 > auth > invalidate-token"
        ],
        "summary": "Invalidate current token\n",
        "description": "Invalidates current token",
        "requestBody": {
          "content": {}
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "post_v1_auth_invalidate-token"
      }
    },
    "/v1/auth/keep-alive": {
      "post": {
        "tags": [
          "v1 > auth > keep-alive"
        ],
        "summary": "Invalidate existing token and generates new token\n",
        "description": "Invalidates existing token and generates new token with extended expiration based on existing token credentials.",
        "requestBody": {
          "content": {}
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "token": "<string>",
                  "expires": "<string>"
                }
              }
            }
          }
        },
        "operationId": "post_v1_auth_keep-alive"
      }
    },
    "/v1/auth/token": {
      "post": {
        "tags": [
          "v1 > auth > token"
        ],
        "summary": "Create a token based on other authentication details (basic, etc.)",
        "description": "Create a token based on other authentication details (basic, etc.).\n",
        "requestBody": {
          "content": {}
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "token": "<string>",
                  "expires": "<string>"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_auth_token"
      }
    },
    "/v1/auth": {
      "get": {
        "tags": [
          "v1 > auth"
        ],
        "summary": "Get all the Authorization details associated with the current api\n",
        "description": "Get all the authorization details associated with the current api token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "account": {
                    "id": "<string>",
                    "username": "<string>",
                    "realName": "<string>",
                    "email": "<string>",
                    "preferences": {
                      "language": "<string>",
                      "dateFormat": "<string>",
                      "region": "<string>",
                      "timezone": "<string>",
                      "disableRelativeDates": "<boolean>"
                    },
                    "multiSiteAdmin": "<boolean>",
                    "accessLevel": "FullAccess",
                    "privilegeSet": "ENROLLMENT",
                    "privilegesBySite": {
                      "mollit_2": [
                        "<string>",
                        "<string>"
                      ],
                      "velit_0": [
                        "<string>",
                        "<string>"
                      ],
                      "minim_b": [
                        "<string>",
                        "<string>"
                      ],
                      "Duis0": [
                        "<string>",
                        "<string>"
                      ]
                    },
                    "groupIds": [
                      "<string>",
                      "<string>"
                    ],
                    "currentSiteId": "<string>"
                  },
                  "accountGroups": [
                    {
                      "accessLevel": "GroupBasedAccess",
                      "privilegeSet": "AUDITOR",
                      "siteId": "<integer>",
                      "privileges": [
                        "<string>",
                        "<string>"
                      ],
                      "memberUserIds": [
                        "<integer>",
                        "<integer>"
                      ]
                    },
                    {
                      "accessLevel": "FullAccess",
                      "privilegeSet": "ENROLLMENT",
                      "siteId": "<integer>",
                      "privileges": [
                        "<string>",
                        "<string>"
                      ],
                      "memberUserIds": [
                        "<integer>",
                        "<integer>"
                      ]
                    }
                  ],
                  "sites": [
                    {
                      "id": "<string>",
                      "name": "<string>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>"
                    }
                  ],
                  "authenticationType": "SYSTEM_ACCOUNT"
                }
              }
            }
          }
        },
        "operationId": "get_v1_auth"
      }
    },
    "/v1/api-integrations/{id}/client-credentials": {
      "post": {
        "tags": [
          "v1 > api-integrations > {id} > client-credentials"
        ],
        "summary": "Create client credentials for specified API integration",
        "description": "Create client credentials for specified API integration",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of api integration object",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "clientId": "<string>",
                  "clientSecret": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_api-integrations_id_client-credentials"
      }
    },
    "/v1/api-integrations/{id}": {
      "get": {
        "tags": [
          "v1 > api-integrations > {id}"
        ],
        "summary": "Get specified API integration object",
        "description": "Gets specified API integration object",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of api integration object",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "appType": "NONE",
                  "authorizationScopes": [
                    "<string>",
                    "<string>"
                  ],
                  "clientId": "<string>",
                  "displayName": "<string>",
                  "enabled": "<boolean>",
                  "id": "<integer>",
                  "accessTokenLifetimeSeconds": "<integer>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_api-integrations_id"
      },
      "put": {
        "tags": [
          "v1 > api-integrations > {id}"
        ],
        "summary": "Update specified API integration object",
        "description": "Update specified API integration object",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "authorizationScopes": [
                    "<string>",
                    "<string>"
                  ],
                  "displayName": "<string>",
                  "enabled": "<boolean>",
                  "accessTokenLifetimeSeconds": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of api integration object",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "appType": "NONE",
                  "authorizationScopes": [
                    "<string>",
                    "<string>"
                  ],
                  "clientId": "<string>",
                  "displayName": "<string>",
                  "enabled": "<boolean>",
                  "id": "<integer>",
                  "accessTokenLifetimeSeconds": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_api-integrations_id"
      },
      "delete": {
        "tags": [
          "v1 > api-integrations > {id}"
        ],
        "summary": "Remove specified API integration",
        "description": "Removes specified API integration",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of api integration object",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_api-integrations_id"
      }
    },
    "/v1/api-integrations": {
      "get": {
        "tags": [
          "v1 > api-integrations"
        ],
        "summary": "Get the current API Integrations",
        "description": "Get Jamf|Pro API Integrations with Search Criteria",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Fields allowed in the query: id, displayName. Example: sort=displayName:desc",
            "example": "id:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter app titles collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, displayName. Example: displayName==\"*IntegrationName*\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "results": [
                    {
                      "appType": "NONE",
                      "authorizationScopes": [
                        "<string>",
                        "<string>"
                      ],
                      "clientId": "<string>",
                      "displayName": "<string>",
                      "enabled": "<boolean>",
                      "id": "<integer>",
                      "accessTokenLifetimeSeconds": "<integer>"
                    },
                    {
                      "appType": "CLIENT_CREDENTIALS",
                      "authorizationScopes": [
                        "<string>",
                        "<string>"
                      ],
                      "clientId": "<string>",
                      "displayName": "<string>",
                      "enabled": "<boolean>",
                      "id": "<integer>",
                      "accessTokenLifetimeSeconds": "<integer>"
                    }
                  ],
                  "totalCount": "<integer>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_api-integrations"
      },
      "post": {
        "tags": [
          "v1 > api-integrations"
        ],
        "summary": "Create API integration object",
        "description": "Create API integration object",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "authorizationScopes": [
                    "<string>",
                    "<string>"
                  ],
                  "displayName": "<string>",
                  "enabled": "<boolean>",
                  "accessTokenLifetimeSeconds": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "appType": "NONE",
                  "authorizationScopes": [
                    "<string>",
                    "<string>"
                  ],
                  "clientId": "<string>",
                  "displayName": "<string>",
                  "enabled": "<boolean>",
                  "id": "<integer>",
                  "accessTokenLifetimeSeconds": "<integer>"
                }
              }
            }
          }
        },
        "operationId": "post_v1_api-integrations"
      }
    },
    "/v1/api-role-privileges/search": {
      "get": {
        "tags": [
          "v1 > api-role-privileges > search"
        ],
        "summary": "Search the current Jamf API Role Privileges",
        "description": "Search role privileges",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The partial or complete privilege name we are searching for",
            "example": "<string>"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Limit the query results, defaults to 15",
            "example": "15"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "privileges": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_api-role-privileges_search"
      }
    },
    "/v1/api-role-privileges": {
      "get": {
        "tags": [
          "v1 > api-role-privileges"
        ],
        "summary": "Get the current Jamf API Role Privileges",
        "description": "Get role privileges",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "privileges": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_api-role-privileges"
      }
    },
    "/v1/api-roles/{id}": {
      "get": {
        "tags": [
          "v1 > api-roles > {id}"
        ],
        "summary": "Get the specific Jamf API Role",
        "description": "Get specific Role",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of API role",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "displayName": "<string>",
                  "id": "<string>",
                  "privileges": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_api-roles_id"
      },
      "put": {
        "tags": [
          "v1 > api-roles > {id}"
        ],
        "summary": "Update API Integrations Role",
        "description": "Update specific Role",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "displayName": "<string>",
                  "privileges": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of API role",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "displayName": "<string>",
                  "id": "<string>",
                  "privileges": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_api-roles_id"
      },
      "delete": {
        "tags": [
          "v1 > api-roles > {id}"
        ],
        "summary": "Delete API Integrations Role",
        "description": "Delete specific Role",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of API role",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_api-roles_id"
      }
    },
    "/v1/api-roles": {
      "get": {
        "tags": [
          "v1 > api-roles"
        ],
        "summary": "Get the current Jamf API Roles",
        "description": "Get roles with Search Criteria",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Fields allowed in the query: id, displayName. Example: sort=displayName:desc",
            "example": "id:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter app titles collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, displayName. Example: displayName==\"*myRole*\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "results": [
                    {
                      "displayName": "<string>",
                      "id": "<string>",
                      "privileges": [
                        "<string>",
                        "<string>"
                      ]
                    },
                    {
                      "displayName": "<string>",
                      "id": "<string>",
                      "privileges": [
                        "<string>",
                        "<string>"
                      ]
                    }
                  ],
                  "totalCount": "<integer>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_api-roles"
      },
      "post": {
        "tags": [
          "v1 > api-roles"
        ],
        "summary": "Create a new API role",
        "description": "Post to create new Role",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "displayName": "<string>",
                  "privileges": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "displayName": "<string>",
                  "id": "<string>",
                  "privileges": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_api-roles"
      }
    },
    "/v1/app-request/form-input-fields/{id}": {
      "get": {
        "tags": [
          "v1 > app-request > form-input-fields > {id}"
        ],
        "summary": "Get specified Form Input Field object\n",
        "description": "Gets specified form input field object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Instance id of form input field record",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "priority": "<integer>",
                  "title": "<string>",
                  "id": "<integer>",
                  "description": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_app-request_form-input-fields_id"
      },
      "put": {
        "tags": [
          "v1 > app-request > form-input-fields > {id}"
        ],
        "summary": "Update specified Form Input Field object\n",
        "description": "Update specified form input field object\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "priority": "<integer>",
                  "title": "<string>",
                  "description": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Instance id of form input field record",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "priority": "<integer>",
                  "title": "<string>",
                  "id": "<integer>",
                  "description": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_app-request_form-input-fields_id"
      },
      "delete": {
        "tags": [
          "v1 > app-request > form-input-fields > {id}"
        ],
        "summary": "Remove specified Form Input Field record\n",
        "description": "Removes specified form input field record\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Instance id of form input field record",
            "example": "<integer>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_app-request_form-input-fields_id"
      }
    },
    "/v1/app-request/form-input-fields": {
      "get": {
        "tags": [
          "v1 > app-request > form-input-fields"
        ],
        "summary": "Search for Form Input Fields\n",
        "description": "Search for form input fields",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "priority": "<integer>",
                      "title": "<string>",
                      "id": "<integer>",
                      "description": "<string>"
                    },
                    {
                      "priority": "<integer>",
                      "title": "<string>",
                      "id": "<integer>",
                      "description": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_app-request_form-input-fields"
      },
      "put": {
        "tags": [
          "v1 > app-request > form-input-fields"
        ],
        "summary": "Replace all Form Input Fields\n",
        "description": "Replace all form input fields. Will delete, update, and create all input fields accordingly.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": [
                  {
                    "priority": "<integer>",
                    "title": "<string>",
                    "description": "<string>"
                  },
                  {
                    "priority": "<integer>",
                    "title": "<string>",
                    "description": "<string>"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "priority": "<integer>",
                    "title": "<string>",
                    "id": "<integer>",
                    "description": "<string>"
                  },
                  {
                    "priority": "<integer>",
                    "title": "<string>",
                    "id": "<integer>",
                    "description": "<string>"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_app-request_form-input-fields"
      },
      "post": {
        "tags": [
          "v1 > app-request > form-input-fields"
        ],
        "summary": "Create Form Input Field record\n",
        "description": "Create form input field record\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "priority": "<integer>",
                  "title": "<string>",
                  "description": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "priority": "<integer>",
                  "title": "<string>",
                  "id": "<integer>",
                  "description": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_app-request_form-input-fields"
      }
    },
    "/v1/app-request/settings": {
      "get": {
        "tags": [
          "v1 > app-request > settings"
        ],
        "summary": "Get Applicastion Request Settings\n",
        "description": "Get app request settings\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "isEnabled": "<boolean>",
                  "appStoreLocale": "<string>",
                  "requesterUserGroupId": "<integer>",
                  "approverEmails": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_app-request_settings"
      },
      "put": {
        "tags": [
          "v1 > app-request > settings"
        ],
        "summary": "Update Application Request Settings\n",
        "description": "Update app request settings\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "isEnabled": "<boolean>",
                  "appStoreLocale": "<string>",
                  "requesterUserGroupId": "<integer>",
                  "approverEmails": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "isEnabled": "<boolean>",
                  "appStoreLocale": "<string>",
                  "requesterUserGroupId": "<integer>",
                  "approverEmails": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_app-request_settings"
      }
    },
    "/v1/app-store-country-codes": {
      "get": {
        "tags": [
          "v1 > app-store-country-codes"
        ],
        "summary": "Return a list of Countries and the associated Codes\n",
        "description": "Returns a list of countries and the associated codes that can be use for the App Store locale\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "countryCodes": [
                    {
                      "code": "<string>",
                      "name": "<string>"
                    },
                    {
                      "code": "<string>",
                      "name": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_app-store-country-codes"
      }
    },
    "/v1/branding-images/download/{id}": {
      "get": {
        "tags": [
          "v1 > branding-images > download > {id}"
        ],
        "summary": "Download a self service branding image\n",
        "description": "Download a self service branding image",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "image/*"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) id of the self service branding image",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "image/*"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<binary>"
              }
            }
          }
        },
        "operationId": "get_v1_branding-images_download_id"
      }
    },
    "/v1/buildings/delete-multiple": {
      "post": {
        "tags": [
          "v1 > buildings > delete-multiple"
        ],
        "summary": "Delete multiple Buildings by their ids\n",
        "description": "multiple many Buildings by their ids",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "ids": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_buildings_delete-multiple"
      }
    },
    "/v1/buildings/export": {
      "post": {
        "tags": [
          "v1 > buildings > export"
        ],
        "summary": "Export Buildings collection\n",
        "description": "Export Buildings collection\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "page": 0,
                  "pageSize": 100,
                  "sort": [
                    "id:desc"
                  ],
                  "filter": "<string>",
                  "fields": [
                    {
                      "fieldName": "<string>",
                      "fieldLabelOverride": "<string>"
                    },
                    {
                      "fieldName": "<string>",
                      "fieldLabelOverride": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/csv"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is id:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=id:desc,name:asc ",
            "example": "id:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name. This param can be combined with paging and sorting. Example: name==\"*buildings*\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/csv"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n  \"format\": \"binary\",\n  \"example\": \"id,name\\n1,Marketing\\n2,Accounting\\n\"\n}"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_buildings_export"
      }
    },
    "/v1/buildings/{id}/history/export": {
      "post": {
        "tags": [
          "v1 > buildings > {id} > history > export"
        ],
        "summary": "Export history object collection in specified format for specified Buildings\n",
        "description": "Export history object collection in specified format for specified Buildings\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "page": 0,
                  "pageSize": 100,
                  "sort": [
                    "id:desc"
                  ],
                  "filter": "<string>",
                  "fields": [
                    {
                      "fieldName": "<string>",
                      "fieldLabelOverride": "<string>"
                    },
                    {
                      "fieldName": "<string>",
                      "fieldLabelOverride": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/csv"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "date:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of buildings",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/csv"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n  \"format\": \"binary\",\n  \"example\": \"id,username,date,note,details\\n1,admin,2019-02-04 21:09:31,Buildings update,Some details\\n\"\n}"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_buildings_id_history_export"
      }
    },
    "/v1/buildings/{id}/history": {
      "get": {
        "tags": [
          "v1 > buildings > {id} > history"
        ],
        "summary": "Get specified Building History object\n",
        "description": "Gets specified Building history object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "date:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of building history record",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_buildings_id_history"
      },
      "post": {
        "tags": [
          "v1 > buildings > {id} > history"
        ],
        "summary": "Add specified Building history object notes\n",
        "description": "Adds specified Building history object notes\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of building history record",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<integer>",
                  "username": "<string>",
                  "date": "<string>",
                  "note": "<string>",
                  "details": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_buildings_id_history"
      }
    },
    "/v1/buildings/{id}": {
      "get": {
        "tags": [
          "v1 > buildings > {id}"
        ],
        "summary": "Get specified Building object\n",
        "description": "Gets specified Building object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of building record",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "<string>",
                  "id": "<string>",
                  "streetAddress1": "<string>",
                  "streetAddress2": "<string>",
                  "city": "<string>",
                  "stateProvince": "<string>",
                  "zipPostalCode": "<string>",
                  "country": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_buildings_id"
      },
      "put": {
        "tags": [
          "v1 > buildings > {id}"
        ],
        "summary": "Update specified Building object\n",
        "description": "Update specified building object\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "streetAddress1": "<string>",
                  "streetAddress2": "<string>",
                  "city": "<string>",
                  "stateProvince": "<string>",
                  "zipPostalCode": "<string>",
                  "country": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of building record",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "<string>",
                  "id": "<string>",
                  "streetAddress1": "<string>",
                  "streetAddress2": "<string>",
                  "city": "<string>",
                  "stateProvince": "<string>",
                  "zipPostalCode": "<string>",
                  "country": "<string>"
                }
              }
            }
          }
        },
        "operationId": "put_v1_buildings_id"
      },
      "delete": {
        "tags": [
          "v1 > buildings > {id}"
        ],
        "summary": "Remove specified Building record\n",
        "description": "Removes specified building record\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of building record",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v1_buildings_id"
      }
    },
    "/v1/buildings": {
      "get": {
        "tags": [
          "v1 > buildings"
        ],
        "summary": "Search for sorted and paged Buildings\n",
        "description": "Search for sorted and paged buildings",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "id:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter buildings collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: name, streetAddress1, streetAddress2, city, stateProvince, zipPostalCode, country. This param can be combined with paging and sorting. Example: filter=city==\"Chicago\" and name==\"*build*\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "name": "<string>",
                      "id": "<string>",
                      "streetAddress1": "<string>",
                      "streetAddress2": "<string>",
                      "city": "<string>",
                      "stateProvince": "<string>",
                      "zipPostalCode": "<string>",
                      "country": "<string>"
                    },
                    {
                      "name": "<string>",
                      "id": "<string>",
                      "streetAddress1": "<string>",
                      "streetAddress2": "<string>",
                      "city": "<string>",
                      "stateProvince": "<string>",
                      "zipPostalCode": "<string>",
                      "country": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_buildings"
      },
      "post": {
        "tags": [
          "v1 > buildings"
        ],
        "summary": "Create Building record\n",
        "description": "Create building record\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "streetAddress1": "<string>",
                  "streetAddress2": "<string>",
                  "city": "<string>",
                  "stateProvince": "<string>",
                  "zipPostalCode": "<string>",
                  "country": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          }
        },
        "operationId": "post_v1_buildings"
      }
    },
    "/v1/cache-settings": {
      "get": {
        "tags": [
          "v1 > cache-settings"
        ],
        "summary": "Get Cache Settings\n",
        "description": "gets cache settings",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "cacheType": "<string>",
                  "cacheUniqueId": "<string>",
                  "memcachedEndpoints": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "hostName": "<string>",
                      "port": "<integer>",
                      "enabled": "<boolean>",
                      "jssCacheConfigurationId": "<integer>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "hostName": "<string>",
                      "port": "<integer>",
                      "enabled": "<boolean>",
                      "jssCacheConfigurationId": "<integer>"
                    }
                  ],
                  "timeToLiveSeconds": "<integer>",
                  "id": "0",
                  "name": "cache configuration",
                  "timeToIdleSeconds": "<integer>",
                  "directoryTimeToLiveSeconds": "<integer>",
                  "ehcacheMaxBytesLocalHeap": "null",
                  "elasticache": false
                }
              }
            }
          }
        },
        "operationId": "get_v1_cache-settings"
      },
      "put": {
        "tags": [
          "v1 > cache-settings"
        ],
        "summary": "Update Cache Settings\n",
        "description": "updates cache settings\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "cacheType": "<string>",
                  "cacheUniqueId": "<string>",
                  "memcachedEndpoints": [
                    {
                      "name": "<string>",
                      "hostName": "<string>",
                      "port": "<integer>",
                      "enabled": "<boolean>",
                      "jssCacheConfigurationId": "<integer>"
                    },
                    {
                      "name": "<string>",
                      "hostName": "<string>",
                      "port": "<integer>",
                      "enabled": "<boolean>",
                      "jssCacheConfigurationId": "<integer>"
                    }
                  ],
                  "timeToLiveSeconds": "<integer>",
                  "name": "cache configuration",
                  "timeToIdleSeconds": "<integer>",
                  "directoryTimeToLiveSeconds": "<integer>",
                  "ehcacheMaxBytesLocalHeap": "null",
                  "elasticache": false
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "cacheType": "<string>",
                  "cacheUniqueId": "<string>",
                  "memcachedEndpoints": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "hostName": "<string>",
                      "port": "<integer>",
                      "enabled": "<boolean>",
                      "jssCacheConfigurationId": "<integer>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "hostName": "<string>",
                      "port": "<integer>",
                      "enabled": "<boolean>",
                      "jssCacheConfigurationId": "<integer>"
                    }
                  ],
                  "timeToLiveSeconds": "<integer>",
                  "id": "0",
                  "name": "cache configuration",
                  "timeToIdleSeconds": "<integer>",
                  "directoryTimeToLiveSeconds": "<integer>",
                  "ehcacheMaxBytesLocalHeap": "null",
                  "elasticache": false
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_cache-settings"
      }
    },
    "/v1/categories/delete-multiple": {
      "post": {
        "tags": [
          "v1 > categories > delete-multiple"
        ],
        "summary": "Delete multiple Categories by their IDs\n",
        "description": "Delete multiple Categories by their IDs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "ids": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_categories_delete-multiple"
      }
    },
    "/v1/categories/{id}/history": {
      "get": {
        "tags": [
          "v1 > categories > {id} > history"
        ],
        "summary": "Get specified Category history object\n",
        "description": "Gets specified Category history object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "date:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of category history record",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_categories_id_history"
      },
      "post": {
        "tags": [
          "v1 > categories > {id} > history"
        ],
        "summary": "Add specified Category history object notes\n",
        "description": "Adds specified Category history object notes\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of category history record",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<integer>",
                  "username": "<string>",
                  "date": "<string>",
                  "note": "<string>",
                  "details": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_categories_id_history"
      }
    },
    "/v1/categories/{id}": {
      "get": {
        "tags": [
          "v1 > categories > {id}"
        ],
        "summary": "Get specified Category object\n",
        "description": "Gets specified Category object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of category record",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "<string>",
                  "priority": "<integer>",
                  "id": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_categories_id"
      },
      "put": {
        "tags": [
          "v1 > categories > {id}"
        ],
        "summary": "Update specified Category object\n",
        "description": "Update specified category object\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "priority": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of category record",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "<string>",
                  "priority": "<integer>",
                  "id": "<string>"
                }
              }
            }
          }
        },
        "operationId": "put_v1_categories_id"
      },
      "delete": {
        "tags": [
          "v1 > categories > {id}"
        ],
        "summary": "Remove specified Category record\n",
        "description": "Removes specified category record\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of category record",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v1_categories_id"
      }
    },
    "/v1/categories": {
      "get": {
        "tags": [
          "v1 > categories"
        ],
        "summary": "Get Category objects\n",
        "description": "Gets `Category` objects.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "id:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter categories collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: name, priority. This param can be combined with paging and sorting. Example: filter=name==\"Apps*\" and priority>=5"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "name": "<string>",
                      "priority": "<integer>",
                      "id": "<string>"
                    },
                    {
                      "name": "<string>",
                      "priority": "<integer>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_categories"
      },
      "post": {
        "tags": [
          "v1 > categories"
        ],
        "summary": "Create Category record\n",
        "description": "Create category record\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "priority": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          }
        },
        "operationId": "post_v1_categories"
      }
    },
    "/v1/pki/certificate-authority/active/der": {
      "get": {
        "tags": [
          "v1 > pki > certificate-authority > active > der"
        ],
        "summary": "Returns X.509 of active Certificate Authority (CA) in DER format",
        "description": "Returns X.509 of active Certificate Authority (CA) in DER format",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/pkix-cert"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/pkix-cert"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<binary>"
              }
            }
          }
        },
        "operationId": "get_v1_pki_certificate-authority_active_der"
      }
    },
    "/v1/pki/certificate-authority/active/pem": {
      "get": {
        "tags": [
          "v1 > pki > certificate-authority > active > pem"
        ],
        "summary": "Returns active Certificate Authority (CA) in PEM format",
        "description": "Returns active Certificate Authority (CA) in PEM format",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/pem-certificate-chain"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/pem-certificate-chain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<binary>"
              }
            }
          }
        },
        "operationId": "get_v1_pki_certificate-authority_active_pem"
      }
    },
    "/v1/pki/certificate-authority/active": {
      "get": {
        "tags": [
          "v1 > pki > certificate-authority > active"
        ],
        "summary": "Returns X.509 details of the active Certificate Authority (CA)",
        "description": "Returns X.509 details of the active Certificate Authority (CA)",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "subjectX500Principal": "<string>",
                  "issuerX500Principal": "<string>",
                  "serialNumber": "<string>",
                  "version": "<integer>",
                  "notAfter": "<integer>",
                  "notBefore": "<integer>",
                  "signature": {
                    "algorithm": "<string>",
                    "algorithmOid": "<string>",
                    "value": "<string>"
                  },
                  "keyUsage": [
                    "<string>",
                    "<string>"
                  ],
                  "keyUsageExtended": [
                    "<string>",
                    "<string>"
                  ],
                  "sha1Fingerprint": "<string>",
                  "sha256Fingerprint": "<string>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_pki_certificate-authority_active"
      }
    },
    "/v1/pki/certificate-authority/{id}/der": {
      "get": {
        "tags": [
          "v1 > pki > certificate-authority > {id} > der"
        ],
        "summary": "Returns X.509 current Certificate Authority (CA) with provided ID in DER format",
        "description": "Returns X.509 current Certificate Authority (CA) with provided ID in DER format",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/pkix-cert"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) UUID of the Certificate Authority (CA)",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/pkix-cert"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<binary>"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_pki_certificate-authority_id_der"
      }
    },
    "/v1/pki/certificate-authority/{id}/pem": {
      "get": {
        "tags": [
          "v1 > pki > certificate-authority > {id} > pem"
        ],
        "summary": "Returns current Certificate Authority (CA) with provided ID in PEM format",
        "description": "Returns current Certificate Authority (CA) with provided ID in PEM format",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/pem-certificate-chain"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) UUID of the Certificate Authority (CA)",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/pem-certificate-chain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<binary>"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_pki_certificate-authority_id_pem"
      }
    },
    "/v1/pki/certificate-authority/{id}": {
      "get": {
        "tags": [
          "v1 > pki > certificate-authority > {id}"
        ],
        "summary": "Returns X.509 details of Certificate Authority (CA) with provided ID",
        "description": "Returns X.509 details of Certificate Authority (CA) with provided ID",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) UUID of the Certificate Authority (CA)",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "subjectX500Principal": "<string>",
                  "issuerX500Principal": "<string>",
                  "serialNumber": "<string>",
                  "version": "<integer>",
                  "notAfter": "<integer>",
                  "notBefore": "<integer>",
                  "signature": {
                    "algorithm": "<string>",
                    "algorithmOid": "<string>",
                    "value": "<string>"
                  },
                  "keyUsage": [
                    "<string>",
                    "<string>"
                  ],
                  "keyUsageExtended": [
                    "<string>",
                    "<string>"
                  ],
                  "sha1Fingerprint": "<string>",
                  "sha256Fingerprint": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_pki_certificate-authority_id"
      }
    },
    "/v1/pki/venafi/{id}/connection-status": {
      "get": {
        "tags": [
          "v1 > pki > venafi > {id} > connection-status"
        ],
        "summary": "Tests the communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
        "description": "Tests the communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Venafi configuration",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "status": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_pki_venafi_id_connection-status"
      }
    },
    "/v1/pki/venafi/{id}/dependent-profiles": {
      "get": {
        "tags": [
          "v1 > pki > venafi > {id} > dependent-profiles"
        ],
        "summary": "Get configuration profile data using specified Venafi CA object\n",
        "description": "Get configuration profile data using specified Venafi CA object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Venafi configuration",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "urlPath": "<string>",
                      "name": "<string>"
                    },
                    {
                      "urlPath": "<string>",
                      "name": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_pki_venafi_id_dependent-profiles"
      }
    },
    "/v1/pki/venafi/{id}/history": {
      "get": {
        "tags": [
          "v1 > pki > venafi > {id} > history"
        ],
        "summary": "Get specified Venafi CA history object\n",
        "description": "Get specified Venafi CA history object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "date:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Venafi configuration",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_pki_venafi_id_history"
      },
      "post": {
        "tags": [
          "v1 > pki > venafi > {id} > history"
        ],
        "summary": "Add specified Venafi CA Object Note\n",
        "description": "Adds specified Venafi CA Object Note\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of Venafi CA history record",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_pki_venafi_id_history"
      }
    },
    "/v1/pki/venafi/{id}/jamf-public-key/regenerate": {
      "post": {
        "tags": [
          "v1 > pki > venafi > {id} > jamf-public-key > regenerate"
        ],
        "summary": "Regenerates a certificate used to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
        "description": "Regenerates a certificate for an existing Venafi configuration that can be used to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Venafi configuration",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_pki_venafi_id_jamf-public-key_regenerate"
      }
    },
    "/v1/pki/venafi/{id}/jamf-public-key": {
      "get": {
        "tags": [
          "v1 > pki > venafi > {id} > jamf-public-key"
        ],
        "summary": "Downloads a certificate used to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
        "description": "Downloads a certificate for an existing Venafi configuration that can be used to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/pem-certificate-chain"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Venafi configuration",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/pem-certificate-chain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<binary>"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_pki_venafi_id_jamf-public-key"
      }
    },
    "/v1/pki/venafi/{id}/proxy-trust-store": {
      "get": {
        "tags": [
          "v1 > pki > venafi > {id} > proxy-trust-store"
        ],
        "summary": "Downloads the PKI Proxy Server public key to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
        "description": "Downloads the uploaded PKI Proxy Server public key to do basic TLS certificate validation between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/pem-certificate-chain"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Venafi configuration",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/pem-certificate-chain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<binary>"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_pki_venafi_id_proxy-trust-store"
      },
      "post": {
        "tags": [
          "v1 > pki > venafi > {id} > proxy-trust-store"
        ],
        "summary": "Uploads the PKI Proxy Server public key to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
        "description": "Uploads the PKI Proxy Server public key to do basic TLS certificate validation between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
        "requestBody": {
          "content": {
            "text/plain": {}
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/pem-certificate-chain"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Venafi configuration",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_pki_venafi_id_proxy-trust-store"
      },
      "delete": {
        "tags": [
          "v1 > pki > venafi > {id} > proxy-trust-store"
        ],
        "summary": "Removes the PKI Proxy Server public key used to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
        "description": "Removes the uploaded PKI Proxy Server public key to do basic TLS certificate validation between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Venafi configuration",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_pki_venafi_id_proxy-trust-store"
      }
    },
    "/v1/pki/venafi/{id}": {
      "get": {
        "tags": [
          "v1 > pki > venafi > {id}"
        ],
        "summary": "Retrieve a Venafi PKI configuration from Jamf Pro\n",
        "description": "Retrieve a Venafi PKI configuration from Jamf Pro\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Venafi configuration",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "<string>",
                  "id": "<integer>",
                  "proxyAddress": "<string>",
                  "revocationEnabled": "<boolean>",
                  "clientId": "<string>",
                  "refreshTokenConfigured": "<boolean>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_pki_venafi_id"
      },
      "delete": {
        "tags": [
          "v1 > pki > venafi > {id}"
        ],
        "summary": "Delete a Venafi PKI configuration from Jamf Pro\n",
        "description": "Delete a Venafi PKI configuration from Jamf Pro\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Venafi configuration",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_pki_venafi_id"
      },
      "patch": {
        "tags": [
          "v1 > pki > venafi > {id}"
        ],
        "summary": "Update a Venafi PKI configuration in Jamf Pro\n",
        "description": "Update a Venafi PKI configuration in Jamf Pro\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "proxyAddress": "<string>",
                  "revocationEnabled": "<boolean>",
                  "clientId": "<string>",
                  "refreshToken": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Venafi configuration",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "<string>",
                  "id": "<integer>",
                  "proxyAddress": "<string>",
                  "revocationEnabled": "<boolean>",
                  "clientId": "<string>",
                  "refreshTokenConfigured": "<boolean>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "patch_v1_pki_venafi_id"
      }
    },
    "/v1/pki/venafi": {
      "post": {
        "tags": [
          "v1 > pki > venafi"
        ],
        "summary": "Create a PKI configuration in Jamf Pro for Venafi\n",
        "description": "Creates a Venafi PKI configuration in Jamf Pro, which can be used to issue certificates\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "proxyAddress": "<string>",
                  "revocationEnabled": "<boolean>",
                  "clientId": "<string>",
                  "refreshToken": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_pki_venafi"
      }
    },
    "/v1/classic-ldap/{id}": {
      "get": {
        "tags": [
          "v1 > classic-ldap > {id}"
        ],
        "summary": "Get mappings for OnPrem Ldap configuration with given id.",
        "description": "Get mappings for OnPrem Ldap configuration with given id.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) OnPrem Ldap identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "userGroupObjectMapGroupNameTo": "<string>",
                  "userGroupObjectMapIdTo": "<string>",
                  "userGroupObjectMapUuidTo": "<string>",
                  "userObjectMapBuildingTo": "",
                  "userObjectMapDepartmentTo": "<string>",
                  "userObjectMapEmailTo": "<string>",
                  "userObjectMapIdTo": "<string>",
                  "userObjectMapPhoneTo": "",
                  "userObjectMapPositionTo": "<string>",
                  "userObjectMapRealNameTo": "<string>",
                  "userObjectMapRoomTo": "",
                  "userObjectMapUsernameTo": "<string>",
                  "userObjectMapUuidTo": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_classic-ldap_id"
      }
    },
    "/v1/cloud-azure/defaults/mappings": {
      "get": {
        "tags": [
          "v1 > cloud-azure > defaults > mappings"
        ],
        "summary": "Get default mappings",
        "description": "This is the default set of attributes that allows you to return the data you need from Azure AD. Some fields may be empty and may be edited when creating a new configuration.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "building": "<string>",
                  "department": "<string>",
                  "email": "<string>",
                  "groupId": "<string>",
                  "groupName": "<string>",
                  "phone": "<string>",
                  "position": "<string>",
                  "realName": "<string>",
                  "room": "<string>",
                  "userId": "<string>",
                  "userName": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_cloud-azure_defaults_mappings"
      }
    },
    "/v1/cloud-azure/defaults/server-configuration": {
      "get": {
        "tags": [
          "v1 > cloud-azure > defaults > server-configuration"
        ],
        "summary": "Get default server configuration",
        "description": "This is the default set of attributes that allows you to return the data you need from Azure AD. Some fields may be empty and may be edited when creating a new configuration.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "deprecatedConsent": "<boolean>",
                  "enabled": "<boolean>",
                  "id": "<string>",
                  "mappings": {
                    "building": "<string>",
                    "department": "<string>",
                    "email": "<string>",
                    "groupId": "<string>",
                    "groupName": "<string>",
                    "phone": "<string>",
                    "position": "<string>",
                    "realName": "<string>",
                    "room": "<string>",
                    "userId": "<string>",
                    "userName": "<string>"
                  },
                  "migrated": "<boolean>",
                  "searchTimeout": "<integer>",
                  "tenantId": "<string>",
                  "transitiveDirectoryMembershipEnabled": "<boolean>",
                  "transitiveMembershipEnabled": "<boolean>",
                  "transitiveMembershipUserField": "<string>",
                  "membershipCalculationOptimizationEnabled": "<boolean>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_cloud-azure_defaults_server-configuration"
      }
    },
    "/v1/cloud-azure/{id}": {
      "get": {
        "tags": [
          "v1 > cloud-azure > {id}"
        ],
        "summary": "Get Azure Cloud Identity Provider configuration with given ID.",
        "description": "Get Azure Cloud Identity Provider configuration with given ID.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Cloud Identity Provider identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "cloudIdPCommon": {
                    "displayName": "<string>",
                    "id": "<string>",
                    "providerName": "GOOGLE"
                  },
                  "server": {
                    "deprecatedConsent": "<boolean>",
                    "enabled": "<boolean>",
                    "id": "<string>",
                    "mappings": {
                      "building": "<string>",
                      "department": "<string>",
                      "email": "<string>",
                      "groupId": "<string>",
                      "groupName": "<string>",
                      "phone": "<string>",
                      "position": "<string>",
                      "realName": "<string>",
                      "room": "<string>",
                      "userId": "<string>",
                      "userName": "<string>"
                    },
                    "migrated": "<boolean>",
                    "searchTimeout": "<integer>",
                    "tenantId": "<string>",
                    "transitiveDirectoryMembershipEnabled": "<boolean>",
                    "transitiveMembershipEnabled": "<boolean>",
                    "transitiveMembershipUserField": "<string>",
                    "membershipCalculationOptimizationEnabled": "<boolean>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_cloud-azure_id"
      },
      "put": {
        "tags": [
          "v1 > cloud-azure > {id}"
        ],
        "summary": "Update Azure Cloud Identity Provider configuration",
        "description": "Update Azure Cloud Identity Provider configuration. Cannot be used for partial updates, all content body must be sent.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "cloudIdPCommon": {
                    "displayName": "<string>",
                    "id": "<string>",
                    "providerName": "AZURE"
                  },
                  "server": {
                    "enabled": "<boolean>",
                    "id": "<string>",
                    "mappings": {
                      "building": "<string>",
                      "department": "<string>",
                      "email": "<string>",
                      "groupId": "<string>",
                      "groupName": "<string>",
                      "phone": "<string>",
                      "position": "<string>",
                      "realName": "<string>",
                      "room": "<string>",
                      "userId": "<string>",
                      "userName": "<string>"
                    },
                    "searchTimeout": "<integer>",
                    "transitiveDirectoryMembershipEnabled": "<boolean>",
                    "transitiveMembershipEnabled": "<boolean>",
                    "transitiveMembershipUserField": "<string>",
                    "membershipCalculationOptimizationEnabled": "<boolean>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Cloud Identity Provider identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "cloudIdPCommon": {
                    "displayName": "<string>",
                    "id": "<string>",
                    "providerName": "GOOGLE"
                  },
                  "server": {
                    "deprecatedConsent": "<boolean>",
                    "enabled": "<boolean>",
                    "id": "<string>",
                    "mappings": {
                      "building": "<string>",
                      "department": "<string>",
                      "email": "<string>",
                      "groupId": "<string>",
                      "groupName": "<string>",
                      "phone": "<string>",
                      "position": "<string>",
                      "realName": "<string>",
                      "room": "<string>",
                      "userId": "<string>",
                      "userName": "<string>"
                    },
                    "migrated": "<boolean>",
                    "searchTimeout": "<integer>",
                    "tenantId": "<string>",
                    "transitiveDirectoryMembershipEnabled": "<boolean>",
                    "transitiveMembershipEnabled": "<boolean>",
                    "transitiveMembershipUserField": "<string>",
                    "membershipCalculationOptimizationEnabled": "<boolean>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_cloud-azure_id"
      },
      "delete": {
        "tags": [
          "v1 > cloud-azure > {id}"
        ],
        "summary": "Delete Cloud Identity Provider configuration.",
        "description": "Delete Cloud Identity Provider configuration.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Cloud Identity Provider identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_cloud-azure_id"
      }
    },
    "/v1/cloud-azure": {
      "post": {
        "tags": [
          "v1 > cloud-azure"
        ],
        "summary": "Create Azure Cloud Identity Provider configuration",
        "description": "Create new Azure Cloud Identity Provider configuration with unique display name.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "cloudIdPCommon": {
                    "displayName": "<string>",
                    "providerName": "GOOGLE"
                  },
                  "server": {
                    "code": "<string>",
                    "enabled": "<boolean>",
                    "mappings": {
                      "building": "<string>",
                      "department": "<string>",
                      "email": "<string>",
                      "groupId": "<string>",
                      "groupName": "<string>",
                      "phone": "<string>",
                      "position": "<string>",
                      "realName": "<string>",
                      "room": "<string>",
                      "userId": "<string>",
                      "userName": "<string>"
                    },
                    "searchTimeout": "<integer>",
                    "tenantId": "<string>",
                    "transitiveDirectoryMembershipEnabled": "<boolean>",
                    "transitiveMembershipEnabled": "<boolean>",
                    "transitiveMembershipUserField": "<string>",
                    "membershipCalculationOptimizationEnabled": "<boolean>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_cloud-azure"
      }
    },
    "/v1/cloud-distribution-point/upload-capability": {
      "get": {
        "tags": [
          "v1 > cloud-distribution-point > upload-capability"
        ],
        "summary": "Finds specific information for the currently configured Cloud Distribution Point.\n",
        "description": "Finds a variety of values based on the currently configured Cloud Distribution Point.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "principalDistributionTechnology": false,
                  "directUploadCapable": false
                }
              }
            }
          }
        },
        "operationId": "get_v1_cloud-distribution-point_upload-capability"
      }
    },
    "/v1/cloud-idp/export": {
      "post": {
        "tags": [
          "v1 > cloud-idp > export"
        ],
        "summary": "Export Cloud Identity Providers collection\n",
        "description": "Export Cloud Identity Providers collection\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "page": 0,
                  "pageSize": 100,
                  "sort": [
                    "id:desc"
                  ],
                  "filter": "<string>",
                  "fields": [
                    {
                      "fieldName": "<string>",
                      "fieldLabelOverride": "<string>"
                    },
                    {
                      "fieldName": "<string>",
                      "fieldLabelOverride": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/csv"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is id:desc. Multiple sort criteria are supported and must be seperated with a comma. Example: sort=id:desc,name:asc",
            "example": "id:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name. This param can be combined with paging and sorting. Example: name==\"*department*\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/csv"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n  \"format\": \"binary\",\n  \"example\": \"Name,\\\"Provider Name\\\",Status\\n\\\"Google LDAP\\\",GOOGLE,true\\n\\\"Azure LDAP\\\",AZURE,true\\n\"\n}"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_cloud-idp_export"
      }
    },
    "/v1/cloud-idp/{id}/history": {
      "get": {
        "tags": [
          "v1 > cloud-idp > {id} > history"
        ],
        "summary": "Get Cloud Identity Provider history",
        "description": "Gets specified Cloud Identity Provider object history",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "date:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Cloud Identity Provider identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_cloud-idp_id_history"
      },
      "post": {
        "tags": [
          "v1 > cloud-idp > {id} > history"
        ],
        "summary": "Add Cloud Identity Provider history note",
        "description": "Adds specified Cloud Identity Provider object history notes\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Cloud Identity Provider identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<integer>",
                  "username": "<string>",
                  "date": "<string>",
                  "note": "<string>",
                  "details": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_cloud-idp_id_history"
      }
    },
    "/v1/cloud-idp/{id}/test-group": {
      "post": {
        "tags": [
          "v1 > cloud-idp > {id} > test-group"
        ],
        "summary": "Get group test search",
        "description": "Do test search to ensure about configuration and mappings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "groupname": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Cloud Identity Provider identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "distinguishedName": "<string>",
                      "id": "<string>",
                      "uuid": "<string>",
                      "serverId": "<string>",
                      "name": "<string>"
                    },
                    {
                      "distinguishedName": "<string>",
                      "id": "<string>",
                      "uuid": "<string>",
                      "serverId": "<string>",
                      "name": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_cloud-idp_id_test-group"
      }
    },
    "/v1/cloud-idp/{id}/test-user": {
      "post": {
        "tags": [
          "v1 > cloud-idp > {id} > test-user"
        ],
        "summary": "Get user test search",
        "description": "Do test search to ensure about configuration and mappings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "username": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Cloud Identity Provider identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "distinguishedName": "<string>",
                      "id": "<string>",
                      "uuid": "<string>",
                      "serverId": "<string>",
                      "name": "<string>",
                      "attributes": {
                        "fullName": "<string>",
                        "emailAddress": "<string>",
                        "phoneNumber": "<string>",
                        "position": "<string>",
                        "room": "<string>",
                        "buildingName": "<string>",
                        "departmentName": "<string>"
                      }
                    },
                    {
                      "distinguishedName": "<string>",
                      "id": "<string>",
                      "uuid": "<string>",
                      "serverId": "<string>",
                      "name": "<string>",
                      "attributes": {
                        "fullName": "<string>",
                        "emailAddress": "<string>",
                        "phoneNumber": "<string>",
                        "position": "<string>",
                        "room": "<string>",
                        "buildingName": "<string>",
                        "departmentName": "<string>"
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_cloud-idp_id_test-user"
      }
    },
    "/v1/cloud-idp/{id}/test-user-membership": {
      "post": {
        "tags": [
          "v1 > cloud-idp > {id} > test-user-membership"
        ],
        "summary": "Get membership test search",
        "description": "Do test search to ensure about configuration and mappings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "groupname": "<string>",
                  "username": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Cloud Identity Provider identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "username": "<string>",
                  "isMember": "<boolean>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_cloud-idp_id_test-user-membership"
      }
    },
    "/v1/cloud-idp/{id}": {
      "get": {
        "tags": [
          "v1 > cloud-idp > {id}"
        ],
        "summary": "Get Cloud Identity Provider configuration with given ID.",
        "description": "Get Cloud Identity Provider configuration with given ID.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Cloud Identity Provider identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "displayName": "<string>",
                  "id": "<string>",
                  "providerName": "AZURE"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_cloud-idp_id"
      }
    },
    "/v1/cloud-idp": {
      "get": {
        "tags": [
          "v1 > cloud-idp"
        ],
        "summary": "Get information about all Cloud Identity Providers configurations.",
        "description": "Returns basic informations about all configured Cloud Identity Provider.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "id:desc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<string>",
                      "displayName": "<string>",
                      "enabled": "<boolean>",
                      "providerName": "GOOGLE"
                    },
                    {
                      "id": "<string>",
                      "displayName": "<string>",
                      "enabled": "<boolean>",
                      "providerName": "AZURE"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_cloud-idp"
      }
    },
    "/v1/cloud-information": {
      "get": {
        "tags": [
          "v1 > cloud-information"
        ],
        "summary": "Retrieve information related to cloud setup.\n",
        "description": "Retrieve information related to cloud setup.\nRetrieves information related to cloud setup. Provides details about cloud instance configuration.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "cloudInstance": "<boolean>",
                  "rampInstance": "<boolean>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_cloud-information"
      }
    },
    "/v1/ldap-keystore/verify": {
      "post": {
        "tags": [
          "v1 > ldap-keystore > verify"
        ],
        "summary": "Validate keystore for Cloud Identity Provider secure connection",
        "description": "Validate keystore for Cloud Identity Provider secure connection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "fileBytes": "B6T2JTyVJhEF3lBq01WXaWvZ0Q+bR0AbRyy=",
                  "fileName": "<string>",
                  "password": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "type": "<string>",
                  "expirationDate": "<dateTime>",
                  "subject": "<string>",
                  "fileName": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_ldap-keystore_verify"
      }
    },
    "/v1/computer-extension-attributes/delete-multiple": {
      "post": {
        "tags": [
          "v1 > computer-extension-attributes > delete-multiple"
        ],
        "summary": "Delete multiple Computer Extension Attribute at once.",
        "description": "IDs of the Computer Extension Attribute to be deleted.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "ids": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_computer-extension-attributes_delete-multiple"
      }
    },
    "/v1/computer-extension-attributes/{id}/history": {
      "get": {
        "tags": [
          "v1 > computer-extension-attributes > {id} > history"
        ],
        "summary": "Get specified Computer Extension Attribute History object",
        "description": "Get specified Computer Extension Attribute history object",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorts results by one or more criteria, following the format property:asc/desc. Default sort is ID:asc. If using multiple criteria, separate with commas.",
            "example": "id:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filters results. Use RSQL format for query. Allows for many fields, including ID, name, etc. Can be combined with paging and sorting. Default filter is an empty query and returns all results from the requested page."
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Instance ID of Computer Extension Attribute history",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_computer-extension-attributes_id_history"
      },
      "post": {
        "tags": [
          "v1 > computer-extension-attributes > {id} > history"
        ],
        "summary": "Add specified Computer Extension Attribute history object notes",
        "description": "Add specified Computer Extension Attribute history object notes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Instance ID of Computer Extension Attribute history",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<integer>",
                  "username": "<string>",
                  "date": "<string>",
                  "note": "<string>",
                  "details": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_computer-extension-attributes_id_history"
      }
    },
    "/v1/computer-extension-attributes/{id}": {
      "get": {
        "tags": [
          "v1 > computer-extension-attributes > {id}"
        ],
        "summary": "Get specified Computer Extension Attribute object.",
        "description": "Gets specified Computer Extension Attribute object.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Unique ID of Computer Extension Attribute.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "dataType": "STRING",
                  "inputType": "TEXT",
                  "inventoryDisplayType": "GENERAL",
                  "name": "<string>",
                  "id": "<string>",
                  "description": "<string>",
                  "enabled": true,
                  "scriptContents": "<string>",
                  "popupMenuChoices": [
                    "<string>",
                    "<string>"
                  ],
                  "ldapAttributeMapping": "<string>",
                  "ldapExtensionAttributeAllowed": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_computer-extension-attributes_id"
      },
      "put": {
        "tags": [
          "v1 > computer-extension-attributes > {id}"
        ],
        "summary": "Update specified Computer Extension Attribute object.",
        "description": "Update specified Computer Extension Attribute object.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "dataType": "STRING",
                  "inputType": "TEXT",
                  "inventoryDisplayType": "GENERAL",
                  "name": "<string>",
                  "description": "<string>",
                  "enabled": true,
                  "scriptContents": "<string>",
                  "popupMenuChoices": [
                    "<string>",
                    "<string>"
                  ],
                  "ldapAttributeMapping": "<string>",
                  "ldapExtensionAttributeAllowed": false
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Unique ID of Computer Extension Attribute.",
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "dataType": "STRING",
                  "inputType": "TEXT",
                  "inventoryDisplayType": "GENERAL",
                  "name": "<string>",
                  "id": "<string>",
                  "description": "<string>",
                  "enabled": true,
                  "scriptContents": "<string>",
                  "popupMenuChoices": [
                    "<string>",
                    "<string>"
                  ],
                  "ldapAttributeMapping": "<string>",
                  "ldapExtensionAttributeAllowed": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_computer-extension-attributes_id"
      },
      "delete": {
        "tags": [
          "v1 > computer-extension-attributes > {id}"
        ],
        "summary": "Remove specified Computer Extension Attribute.",
        "description": "ID of the Computer Extension Attribute to be deleted.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Unique ID of Computer Extension Attribute.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v1_computer-extension-attributes_id"
      }
    },
    "/v1/computer-extension-attributes": {
      "get": {
        "tags": [
          "v1 > computer-extension-attributes"
        ],
        "summary": "Retrieve Computer Extension Attributes.",
        "description": "Retrieves All Computer Extension Attributes Configuration.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorts results by one or more criteria, following the format property:asc/desc.<br/> Default sort is name:asc.<br/> If using multiple criteria, separate with commas. Allows sort for id and name.",
            "example": "name.asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filters results. Use RSQL format for query. Allows for many fields, including ID, name, etc.<br/> Can be combined with paging and sorting.<br/> Fields allowed in the query: id, name <br/> Default filter is an empty query and returns all results from the requested page."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "dataType": "STRING",
                      "inputType": "TEXT",
                      "inventoryDisplayType": "GENERAL",
                      "name": "<string>",
                      "id": "<string>",
                      "description": "<string>",
                      "enabled": true,
                      "scriptContents": "<string>",
                      "popupMenuChoices": [
                        "<string>",
                        "<string>"
                      ],
                      "ldapAttributeMapping": "<string>",
                      "ldapExtensionAttributeAllowed": false
                    },
                    {
                      "dataType": "STRING",
                      "inputType": "TEXT",
                      "inventoryDisplayType": "GENERAL",
                      "name": "<string>",
                      "id": "<string>",
                      "description": "<string>",
                      "enabled": true,
                      "scriptContents": "<string>",
                      "popupMenuChoices": [
                        "<string>",
                        "<string>"
                      ],
                      "ldapAttributeMapping": "<string>",
                      "ldapExtensionAttributeAllowed": false
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_computer-extension-attributes"
      },
      "post": {
        "tags": [
          "v1 > computer-extension-attributes"
        ],
        "summary": "Create Computer Extension Attribute.",
        "description": "Create Computer Extension Attribute to collect extra inventory information.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "dataType": "STRING",
                  "inputType": "TEXT",
                  "inventoryDisplayType": "GENERAL",
                  "name": "<string>",
                  "description": "<string>",
                  "enabled": true,
                  "scriptContents": "<string>",
                  "popupMenuChoices": [
                    "<string>",
                    "<string>"
                  ],
                  "ldapAttributeMapping": "<string>",
                  "ldapExtensionAttributeAllowed": false
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_computer-extension-attributes"
      }
    },
    "/v1/computer-groups": {
      "get": {
        "tags": [
          "v1 > computer-groups"
        ],
        "summary": "Returns the list of all computer groups\n",
        "description": "Use it to get the list of all computer groups.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "id": "<string>",
                    "name": "<string>",
                    "smartGroup": "<boolean>"
                  },
                  {
                    "id": "<string>",
                    "name": "<string>",
                    "smartGroup": "<boolean>"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v1_computer-groups"
      }
    },
    "/v1/computer-inventory/{id}/remove-mdm-profile": {
      "post": {
        "tags": [
          "v1 > computer-inventory > {id} > remove-mdm-profile"
        ],
        "summary": "Remove a computer's MDM profile\n",
        "description": "Remove a computer's MDM profile",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Id of the computer to remove the MDM profile from",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "deviceId": "<string>",
                  "commandUuid": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_computer-inventory_id_remove-mdm-profile"
      }
    },
    "/v1/computers-inventory/filevault": {
      "get": {
        "tags": [
          "v1 > computers-inventory > filevault"
        ],
        "summary": "Return paginated FileVault information for all computers",
        "description": "Return paginated FileVault information for all computers",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "computerId": "<string>",
                      "name": "<string>",
                      "personalRecoveryKey": "<string>",
                      "bootPartitionEncryptionDetails": {
                        "partitionName": "<string>",
                        "partitionFileVault2State": "DECRYPTING_PAUSED",
                        "partitionFileVault2Percent": "<integer>"
                      },
                      "individualRecoveryKeyValidityStatus": "UNKNOWN",
                      "institutionalRecoveryKeyPresent": "<boolean>",
                      "diskEncryptionConfigurationName": "<string>"
                    },
                    {
                      "computerId": "<string>",
                      "name": "<string>",
                      "personalRecoveryKey": "<string>",
                      "bootPartitionEncryptionDetails": {
                        "partitionName": "<string>",
                        "partitionFileVault2State": "OPTIMIZING",
                        "partitionFileVault2Percent": "<integer>"
                      },
                      "individualRecoveryKeyValidityStatus": "NOT_APPLICABLE",
                      "institutionalRecoveryKeyPresent": "<boolean>",
                      "diskEncryptionConfigurationName": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_computers-inventory_filevault"
      }
    },
    "/v1/computers-inventory/{id}/attachments/{attachmentId}": {
      "get": {
        "tags": [
          "v1 > computers-inventory > {id} > attachments > {attachmentId}"
        ],
        "summary": "Download attachment file",
        "description": "Download attachment file",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/plain"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of computer record",
            "example": "<string>"
          },
          {
            "name": "attachmentId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of attachment object",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<binary>"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_computers-inventory_id_attachments_attachmentId"
      },
      "delete": {
        "tags": [
          "v1 > computers-inventory > {id} > attachments > {attachmentId}"
        ],
        "summary": "Remove attachment",
        "description": "Remove attachment",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of computer record",
            "example": "<string>"
          },
          {
            "name": "attachmentId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of attachment object",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_computers-inventory_id_attachments_attachmentId"
      }
    },
    "/v1/computers-inventory/{id}/attachments": {
      "post": {
        "tags": [
          "v1 > computers-inventory > {id} > attachments"
        ],
        "summary": "Upload attachment and assign to computer",
        "description": "Upload attachment and assign to computer",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "(Required) The file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "multipart/form-data"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of computer record",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_computers-inventory_id_attachments"
      }
    },
    "/v1/computers-inventory/{id}/filevault": {
      "get": {
        "tags": [
          "v1 > computers-inventory > {id} > filevault"
        ],
        "summary": "Return FileVault information for a specific computer",
        "description": "Return FileVault information for a specific computer",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of computer record",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "computerId": "<string>",
                  "name": "<string>",
                  "personalRecoveryKey": "<string>",
                  "bootPartitionEncryptionDetails": {
                    "partitionName": "<string>",
                    "partitionFileVault2State": "DECRYPTING",
                    "partitionFileVault2Percent": "<integer>"
                  },
                  "individualRecoveryKeyValidityStatus": "INVALID",
                  "institutionalRecoveryKeyPresent": "<boolean>",
                  "diskEncryptionConfigurationName": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_computers-inventory_id_filevault"
      }
    },
    "/v1/computers-inventory/{id}/view-recovery-lock-password": {
      "get": {
        "tags": [
          "v1 > computers-inventory > {id} > view-recovery-lock-password"
        ],
        "summary": "Return a Computers Recovery Lock Password",
        "description": "Return a Computers Recovery Lock Password",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of computer record",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "recoveryLockPassword": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_computers-inventory_id_view-recovery-lock-password"
      }
    },
    "/v1/computers-inventory/{id}": {
      "get": {
        "tags": [
          "v1 > computers-inventory > {id}"
        ],
        "summary": "Return General section of a Computer",
        "description": "Return General section of a Computer",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "section",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "section of computer details, if not specified, General section data is returned. Multiple section parameters are supported, e.g. section=general&amp;section=hardware",
            "example": "GENERAL"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of computer record",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "udid": "<string>",
                  "general": {
                    "name": "<string>",
                    "lastIpAddress": "<string>",
                    "lastReportedIp": "<string>",
                    "jamfBinaryVersion": "<string>",
                    "platform": "<string>",
                    "barcode1": "<string>",
                    "barcode2": "<string>",
                    "assetTag": "<string>",
                    "remoteManagement": {
                      "managed": "<boolean>",
                      "managementUsername": "<string>"
                    },
                    "supervised": "<boolean>",
                    "mdmCapable": {
                      "capable": "<boolean>",
                      "capableUsers": [
                        "<string>",
                        "<string>"
                      ]
                    },
                    "reportDate": "<dateTime>",
                    "lastContactTime": "<dateTime>",
                    "lastCloudBackupDate": "<dateTime>",
                    "lastEnrolledDate": "<dateTime>",
                    "mdmProfileExpiration": "<dateTime>",
                    "initialEntryDate": "<date>",
                    "distributionPoint": "<string>",
                    "enrollmentMethod": {
                      "id": "<string>",
                      "objectName": "<string>",
                      "objectType": "<string>"
                    },
                    "site": {
                      "id": "<string>",
                      "name": "<string>"
                    },
                    "itunesStoreAccountActive": "<boolean>",
                    "enrolledViaAutomatedDeviceEnrollment": "<boolean>",
                    "userApprovedMdm": "<boolean>",
                    "declarativeDeviceManagementEnabled": "<boolean>",
                    "extensionAttributes": [
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "INTEGER",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "SCRIPT"
                      },
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "INTEGER",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "LDAP"
                      }
                    ],
                    "managementId": "<string>"
                  },
                  "diskEncryption": {
                    "bootPartitionEncryptionDetails": {
                      "partitionName": "<string>",
                      "partitionFileVault2State": "DECRYPTING",
                      "partitionFileVault2Percent": "<integer>"
                    },
                    "individualRecoveryKeyValidityStatus": "INVALID",
                    "institutionalRecoveryKeyPresent": "<boolean>",
                    "diskEncryptionConfigurationName": "<string>",
                    "fileVault2EnabledUserNames": [
                      "<string>",
                      "<string>"
                    ],
                    "fileVault2EligibilityMessage": "<string>"
                  },
                  "purchasing": {
                    "leased": "<boolean>",
                    "purchased": "<boolean>",
                    "poNumber": "<string>",
                    "poDate": "<date>",
                    "vendor": "<string>",
                    "warrantyDate": "<date>",
                    "appleCareId": "<string>",
                    "leaseDate": "<date>",
                    "purchasePrice": "<string>",
                    "lifeExpectancy": "<integer>",
                    "purchasingAccount": "<string>",
                    "purchasingContact": "<string>",
                    "extensionAttributes": [
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "INTEGER",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "LDAP"
                      },
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "DATE_TIME",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "POPUP"
                      }
                    ]
                  },
                  "applications": [
                    {
                      "name": "<string>",
                      "path": "<string>",
                      "version": "<string>",
                      "macAppStore": "<boolean>",
                      "sizeMegabytes": "<integer>",
                      "bundleId": "<string>",
                      "updateAvailable": "<boolean>",
                      "externalVersionId": "<string>"
                    },
                    {
                      "name": "<string>",
                      "path": "<string>",
                      "version": "<string>",
                      "macAppStore": "<boolean>",
                      "sizeMegabytes": "<integer>",
                      "bundleId": "<string>",
                      "updateAvailable": "<boolean>",
                      "externalVersionId": "<string>"
                    }
                  ],
                  "storage": {
                    "bootDriveAvailableSpaceMegabytes": "<long>",
                    "disks": [
                      {
                        "id": "<string>",
                        "device": "<string>",
                        "model": "<string>",
                        "revision": "<string>",
                        "serialNumber": "<string>",
                        "sizeMegabytes": "<long>",
                        "smartStatus": "<string>",
                        "type": "<string>",
                        "partitions": [
                          {
                            "name": "<string>",
                            "sizeMegabytes": "<long>",
                            "availableMegabytes": "<long>",
                            "partitionType": "BOOT",
                            "percentUsed": "<integer>",
                            "fileVault2State": "ENCRYPTING_PAUSED",
                            "fileVault2ProgressPercent": "<integer>",
                            "lvmManaged": "<boolean>"
                          },
                          {
                            "name": "<string>",
                            "sizeMegabytes": "<long>",
                            "availableMegabytes": "<long>",
                            "partitionType": "OTHER",
                            "percentUsed": "<integer>",
                            "fileVault2State": "INELIGIBLE",
                            "fileVault2ProgressPercent": "<integer>",
                            "lvmManaged": "<boolean>"
                          }
                        ]
                      },
                      {
                        "id": "<string>",
                        "device": "<string>",
                        "model": "<string>",
                        "revision": "<string>",
                        "serialNumber": "<string>",
                        "sizeMegabytes": "<long>",
                        "smartStatus": "<string>",
                        "type": "<string>",
                        "partitions": [
                          {
                            "name": "<string>",
                            "sizeMegabytes": "<long>",
                            "availableMegabytes": "<long>",
                            "partitionType": "RECOVERY",
                            "percentUsed": "<integer>",
                            "fileVault2State": "DECRYPTED",
                            "fileVault2ProgressPercent": "<integer>",
                            "lvmManaged": "<boolean>"
                          },
                          {
                            "name": "<string>",
                            "sizeMegabytes": "<long>",
                            "availableMegabytes": "<long>",
                            "partitionType": "OTHER",
                            "percentUsed": "<integer>",
                            "fileVault2State": "ENCRYPTED",
                            "fileVault2ProgressPercent": "<integer>",
                            "lvmManaged": "<boolean>"
                          }
                        ]
                      }
                    ]
                  },
                  "userAndLocation": {
                    "username": "<string>",
                    "realname": "<string>",
                    "email": "<string>",
                    "position": "<string>",
                    "phone": "<string>",
                    "departmentId": "<string>",
                    "buildingId": "<string>",
                    "room": "<string>",
                    "extensionAttributes": [
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "DATE_TIME",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "LDAP"
                      },
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "INTEGER",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "TEXT"
                      }
                    ]
                  },
                  "configurationProfiles": [
                    {
                      "id": "<string>",
                      "username": "<string>",
                      "lastInstalled": "<dateTime>",
                      "removable": "<boolean>",
                      "displayName": "<string>",
                      "profileIdentifier": "<string>"
                    },
                    {
                      "id": "<string>",
                      "username": "<string>",
                      "lastInstalled": "<dateTime>",
                      "removable": "<boolean>",
                      "displayName": "<string>",
                      "profileIdentifier": "<string>"
                    }
                  ],
                  "printers": [
                    {
                      "name": "<string>",
                      "type": "<string>",
                      "uri": "<string>",
                      "location": "<string>"
                    },
                    {
                      "name": "<string>",
                      "type": "<string>",
                      "uri": "<string>",
                      "location": "<string>"
                    }
                  ],
                  "services": [
                    {
                      "name": "<string>"
                    },
                    {
                      "name": "<string>"
                    }
                  ],
                  "hardware": {
                    "make": "<string>",
                    "model": "<string>",
                    "modelIdentifier": "<string>",
                    "serialNumber": "<string>",
                    "processorSpeedMhz": "<long>",
                    "processorCount": "<integer>",
                    "coreCount": "<integer>",
                    "processorType": "<string>",
                    "processorArchitecture": "<string>",
                    "busSpeedMhz": "<long>",
                    "cacheSizeKilobytes": "<long>",
                    "networkAdapterType": "<string>",
                    "macAddress": "<string>",
                    "altNetworkAdapterType": "<string>",
                    "altMacAddress": "<string>",
                    "totalRamMegabytes": "<long>",
                    "openRamSlots": "<integer>",
                    "batteryCapacityPercent": "<integer>",
                    "smcVersion": "<string>",
                    "nicSpeed": "<string>",
                    "opticalDrive": "<string>",
                    "bootRom": "<string>",
                    "bleCapable": "<boolean>",
                    "supportsIosAppInstalls": "<boolean>",
                    "appleSilicon": "<boolean>",
                    "extensionAttributes": [
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "STRING",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "POPUP"
                      },
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "INTEGER",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "POPUP"
                      }
                    ]
                  },
                  "localUserAccounts": [
                    {
                      "uid": "<string>",
                      "userGuid": "<string>",
                      "username": "<string>",
                      "fullName": "<string>",
                      "admin": "<boolean>",
                      "homeDirectory": "<string>",
                      "homeDirectorySizeMb": "<long>",
                      "fileVault2Enabled": "<boolean>",
                      "userAccountType": "LOCAL",
                      "passwordMinLength": "<integer>",
                      "passwordMaxAge": "<integer>",
                      "passwordMinComplexCharacters": "<integer>",
                      "passwordHistoryDepth": "<integer>",
                      "passwordRequireAlphanumeric": "<boolean>",
                      "computerAzureActiveDirectoryId": "<string>",
                      "userAzureActiveDirectoryId": "<string>",
                      "azureActiveDirectoryId": "UNRESPONSIVE"
                    },
                    {
                      "uid": "<string>",
                      "userGuid": "<string>",
                      "username": "<string>",
                      "fullName": "<string>",
                      "admin": "<boolean>",
                      "homeDirectory": "<string>",
                      "homeDirectorySizeMb": "<long>",
                      "fileVault2Enabled": "<boolean>",
                      "userAccountType": "UNKNOWN",
                      "passwordMinLength": "<integer>",
                      "passwordMaxAge": "<integer>",
                      "passwordMinComplexCharacters": "<integer>",
                      "passwordHistoryDepth": "<integer>",
                      "passwordRequireAlphanumeric": "<boolean>",
                      "computerAzureActiveDirectoryId": "<string>",
                      "userAzureActiveDirectoryId": "<string>",
                      "azureActiveDirectoryId": "DEACTIVATED"
                    }
                  ],
                  "certificates": [
                    {
                      "commonName": "<string>",
                      "identity": "<boolean>",
                      "expirationDate": "<dateTime>",
                      "username": "<string>",
                      "lifecycleStatus": "INACTIVE",
                      "certificateStatus": "ISSUED",
                      "subjectName": "<string>",
                      "serialNumber": "<string>",
                      "sha1Fingerprint": "<string>",
                      "issuedDate": "<string>"
                    },
                    {
                      "commonName": "<string>",
                      "identity": "<boolean>",
                      "expirationDate": "<dateTime>",
                      "username": "<string>",
                      "lifecycleStatus": "ACTIVE",
                      "certificateStatus": "EXPIRED",
                      "subjectName": "<string>",
                      "serialNumber": "<string>",
                      "sha1Fingerprint": "<string>",
                      "issuedDate": "<string>"
                    }
                  ],
                  "attachments": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "fileType": "<string>",
                      "sizeBytes": "<long>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "fileType": "<string>",
                      "sizeBytes": "<long>"
                    }
                  ],
                  "plugins": [
                    {
                      "name": "<string>",
                      "version": "<string>",
                      "path": "<string>"
                    },
                    {
                      "name": "<string>",
                      "version": "<string>",
                      "path": "<string>"
                    }
                  ],
                  "packageReceipts": {
                    "installedByJamfPro": [
                      "<string>",
                      "<string>"
                    ],
                    "installedByInstallerSwu": [
                      "<string>",
                      "<string>"
                    ],
                    "cached": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "fonts": [
                    {
                      "name": "<string>",
                      "version": "<string>",
                      "path": "<string>"
                    },
                    {
                      "name": "<string>",
                      "version": "<string>",
                      "path": "<string>"
                    }
                  ],
                  "security": {
                    "sipStatus": "NOT_AVAILABLE",
                    "gatekeeperStatus": "APP_STORE_AND_IDENTIFIED_DEVELOPERS",
                    "xprotectVersion": "<string>",
                    "autoLoginDisabled": "<boolean>",
                    "remoteDesktopEnabled": "<boolean>",
                    "activationLockEnabled": "<boolean>",
                    "recoveryLockEnabled": "<boolean>",
                    "firewallEnabled": "<boolean>",
                    "secureBootLevel": "MEDIUM_SECURITY",
                    "externalBootLevel": "NOT_SUPPORTED",
                    "bootstrapTokenAllowed": "<boolean>",
                    "bootstrapTokenEscrowedStatus": "NOT_SUPPORTED"
                  },
                  "operatingSystem": {
                    "name": "<string>",
                    "version": "<string>",
                    "build": "<string>",
                    "supplementalBuildVersion": "<string>",
                    "rapidSecurityResponse": "<string>",
                    "activeDirectoryStatus": "<string>",
                    "fileVault2Status": "BOOT_ENCRYPTED",
                    "softwareUpdateDeviceId": "<string>",
                    "extensionAttributes": [
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "STRING",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "LDAP"
                      },
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "INTEGER",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "POPUP"
                      }
                    ]
                  },
                  "licensedSoftware": [
                    {
                      "id": "<string>",
                      "name": "<string>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>"
                    }
                  ],
                  "ibeacons": [
                    {
                      "name": "<string>"
                    },
                    {
                      "name": "<string>"
                    }
                  ],
                  "softwareUpdates": [
                    {
                      "name": "<string>",
                      "version": "<string>",
                      "packageName": "<string>"
                    },
                    {
                      "name": "<string>",
                      "version": "<string>",
                      "packageName": "<string>"
                    }
                  ],
                  "extensionAttributes": [
                    {
                      "definitionId": "<string>",
                      "name": "<string>",
                      "description": "<string>",
                      "enabled": "<boolean>",
                      "multiValue": "<boolean>",
                      "values": [
                        "<string>",
                        "<string>"
                      ],
                      "dataType": "STRING",
                      "options": [
                        "<string>",
                        "<string>"
                      ],
                      "inputType": "POPUP"
                    },
                    {
                      "definitionId": "<string>",
                      "name": "<string>",
                      "description": "<string>",
                      "enabled": "<boolean>",
                      "multiValue": "<boolean>",
                      "values": [
                        "<string>",
                        "<string>"
                      ],
                      "dataType": "DATE_TIME",
                      "options": [
                        "<string>",
                        "<string>"
                      ],
                      "inputType": "SCRIPT"
                    }
                  ],
                  "contentCaching": {
                    "computerContentCachingInformationId": "<string>",
                    "parents": [
                      {
                        "contentCachingParentId": "<string>",
                        "address": "<string>",
                        "alerts": {
                          "contentCachingParentAlertId": "<string>",
                          "addresses": [
                            "<string>",
                            "<string>"
                          ],
                          "className": "<string>",
                          "postDate": "<dateTime>"
                        },
                        "details": {
                          "contentCachingParentDetailsId": "<string>",
                          "acPower": "<boolean>",
                          "cacheSizeBytes": "<long>",
                          "capabilities": {
                            "contentCachingParentCapabilitiesId": "<string>",
                            "imports": "<boolean>",
                            "namespaces": "<boolean>",
                            "personalContent": "<boolean>",
                            "queryParameters": "<boolean>",
                            "sharedContent": "<boolean>",
                            "prioritization": "<boolean>"
                          },
                          "portable": "<boolean>",
                          "localNetwork": [
                            {
                              "contentCachingParentLocalNetworkId": "<string>",
                              "speed": "<long>",
                              "wired": "<boolean>"
                            },
                            {
                              "contentCachingParentLocalNetworkId": "<string>",
                              "speed": "<long>",
                              "wired": "<boolean>"
                            }
                          ]
                        },
                        "guid": "<string>",
                        "healthy": "<boolean>",
                        "port": "<long>",
                        "version": "<string>"
                      },
                      {
                        "contentCachingParentId": "<string>",
                        "address": "<string>",
                        "alerts": {
                          "contentCachingParentAlertId": "<string>",
                          "addresses": [
                            "<string>",
                            "<string>"
                          ],
                          "className": "<string>",
                          "postDate": "<dateTime>"
                        },
                        "details": {
                          "contentCachingParentDetailsId": "<string>",
                          "acPower": "<boolean>",
                          "cacheSizeBytes": "<long>",
                          "capabilities": {
                            "contentCachingParentCapabilitiesId": "<string>",
                            "imports": "<boolean>",
                            "namespaces": "<boolean>",
                            "personalContent": "<boolean>",
                            "queryParameters": "<boolean>",
                            "sharedContent": "<boolean>",
                            "prioritization": "<boolean>"
                          },
                          "portable": "<boolean>",
                          "localNetwork": [
                            {
                              "contentCachingParentLocalNetworkId": "<string>",
                              "speed": "<long>",
                              "wired": "<boolean>"
                            },
                            {
                              "contentCachingParentLocalNetworkId": "<string>",
                              "speed": "<long>",
                              "wired": "<boolean>"
                            }
                          ]
                        },
                        "guid": "<string>",
                        "healthy": "<boolean>",
                        "port": "<long>",
                        "version": "<string>"
                      }
                    ],
                    "alerts": [
                      {
                        "cacheBytesLimit": "<long>",
                        "className": "<string>",
                        "pathPreventingAccess": "<string>",
                        "postDate": "<dateTime>",
                        "reservedVolumeBytes": "<long>",
                        "resource": "<string>"
                      },
                      {
                        "cacheBytesLimit": "<long>",
                        "className": "<string>",
                        "pathPreventingAccess": "<string>",
                        "postDate": "<dateTime>",
                        "reservedVolumeBytes": "<long>",
                        "resource": "<string>"
                      }
                    ],
                    "activated": "<boolean>",
                    "active": "<boolean>",
                    "actualCacheBytesUsed": "<long>",
                    "cacheDetails": [
                      {
                        "computerContentCachingCacheDetailsId": "<string>",
                        "categoryName": "<string>",
                        "diskSpaceBytesUsed": "<long>"
                      },
                      {
                        "computerContentCachingCacheDetailsId": "<string>",
                        "categoryName": "<string>",
                        "diskSpaceBytesUsed": "<long>"
                      }
                    ],
                    "cacheBytesFree": "<long>",
                    "cacheBytesLimit": "<long>",
                    "cacheStatus": "<string>",
                    "cacheBytesUsed": "<long>",
                    "dataMigrationCompleted": "<boolean>",
                    "dataMigrationProgressPercentage": "<integer>",
                    "dataMigrationError": {
                      "code": "<long>",
                      "domain": "<string>",
                      "userInfo": [
                        {
                          "key": "<string>",
                          "value": "<string>"
                        },
                        {
                          "key": "<string>",
                          "value": "<string>"
                        }
                      ]
                    },
                    "maxCachePressureLast1HourPercentage": "<integer>",
                    "personalCacheBytesFree": "<long>",
                    "personalCacheBytesLimit": "<long>",
                    "personalCacheBytesUsed": "<long>",
                    "port": "<long>",
                    "publicAddress": "<string>",
                    "registrationError": "<string>",
                    "registrationResponseCode": "<long>",
                    "registrationStarted": "<dateTime>",
                    "registrationStatus": "CONTENT_CACHING_FAILED",
                    "restrictedMedia": "<boolean>",
                    "serverGuid": "<string>",
                    "startupStatus": "<string>",
                    "tetheratorStatus": "CONTENT_CACHING_ENABLED",
                    "totalBytesAreSince": "<dateTime>",
                    "totalBytesDropped": "<long>",
                    "totalBytesImported": "<long>",
                    "totalBytesReturnedToChildren": "<long>",
                    "totalBytesReturnedToClients": "<long>",
                    "totalBytesReturnedToPeers": "<long>",
                    "totalBytesStoredFromOrigin": "<long>",
                    "totalBytesStoredFromParents": "<long>",
                    "totalBytesStoredFromPeers": "<long>"
                  },
                  "groupMemberships": [
                    {
                      "groupId": "<string>",
                      "groupName": "<string>",
                      "smartGroup": "<boolean>"
                    },
                    {
                      "groupId": "<string>",
                      "groupName": "<string>",
                      "smartGroup": "<boolean>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_computers-inventory_id"
      },
      "delete": {
        "tags": [
          "v1 > computers-inventory > {id}"
        ],
        "summary": "Remove specified Computer record",
        "description": "Remove specified Computer record",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of computer record",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_computers-inventory_id"
      }
    },
    "/v1/computers-inventory": {
      "get": {
        "tags": [
          "v1 > computers-inventory"
        ],
        "summary": "Return paginated Computer Inventory records",
        "description": "Return paginated Computer Inventory records",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "section",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "section of computer details, if not specified, General section data is returned. Multiple section parameters are supported, e.g. section=GENERAL&amp;section=HARDWARE",
            "example": "GENERAL"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: `property:asc/desc`. Default sort\nis `general.name:asc`. Multiple sort criteria are supported and must be separated with\na comma.\n\nFields allowed in the sort: `general.name`, `udid`, `id`, `general.assetTag`,\n`general.jamfBinaryVersion`, `general.lastContactTime`, `general.lastEnrolledDate`, `general.lastCloudBackupDate`,\n`general.reportDate`,\n`general.mdmCertificateExpiration`, `general.platform`,\n`hardware.make`, `hardware.model`,\n`operatingSystem.build`, `operatingSystem.supplementalBuildVersion`, `operatingSystem.rapidSecurityResponse`, `operatingSystem.name`, `operatingSystem.version`,\n`userAndLocation.realname`,\n`purchasing.lifeExpectancy`, `purchasing.warrantyDate`\n\nExample: `sort=udid:desc,general.name:asc`.\n",
            "example": "general.name:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter computer inventory collection.\nDefault filter is empty query - returning all results for the requested page.\n\nFields allowed in the query: `general.name`, `udid`, `id`, `general.assetTag`, `general.barcode1`, `general.barcode2`,\n`general.enrolledViaAutomatedDeviceEnrollment`, `general.lastIpAddress`, `general.itunesStoreAccountActive`,\n`general.jamfBinaryVersion`, `general.lastContactTime`, `general.lastEnrolledDate`, `general.lastCloudBackupDate`,\n`general.reportDate`, `general.lastReportedIp`, `general.managementId`, `general.remoteManagement.managed`,\n`general.mdmCapable.capable`, `general.mdmCertificateExpiration`, `general.platform`, `general.supervised`, `general.userApprovedMdm`, `general.declarativeDeviceManagementEnabled`, \n`hardware.bleCapable`, `hardware.macAddress`, `hardware.make`, `hardware.model`, `hardware.modelIdentifier`, `hardware.serialNumber`,\n`hardware.supportsIosAppInstalls`,`hardware.appleSilicon`, `operatingSystem.activeDirectoryStatus`, `operatingSystem.fileVault2Status`,\n`operatingSystem.build`, `operatingSystem.supplementalBuildVersion`, `operatingSystem.rapidSecurityResponse`, `operatingSystem.name`, `operatingSystem.version`, `security.activationLockEnabled`,\n`security.recoveryLockEnabled`,`security.firewallEnabled`,`userAndLocation.buildingId`, `userAndLocation.departmentId`, `userAndLocation.email`, `userAndLocation.realname`,\n`userAndLocation.phone`, `userAndLocation.position`,`userAndLocation.room`, `userAndLocation.username`,\n`purchasing.appleCareId`, `purchasing.lifeExpectancy`, `purchasing.purchased`, `purchasing.leased`, `purchasing.vendor`, `purchasing.warrantyDate`,\n\nThis param can be combined with paging and sorting.\nExample: `filter=general.name==\"Orchard\"`\n"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<string>",
                      "udid": "<string>",
                      "general": {
                        "name": "<string>",
                        "lastIpAddress": "<string>",
                        "lastReportedIp": "<string>",
                        "jamfBinaryVersion": "<string>",
                        "platform": "<string>",
                        "barcode1": "<string>",
                        "barcode2": "<string>",
                        "assetTag": "<string>",
                        "remoteManagement": {
                          "managed": "<boolean>",
                          "managementUsername": "<string>"
                        },
                        "supervised": "<boolean>",
                        "mdmCapable": {
                          "capable": "<boolean>",
                          "capableUsers": [
                            "<string>",
                            "<string>"
                          ]
                        },
                        "reportDate": "<dateTime>",
                        "lastContactTime": "<dateTime>",
                        "lastCloudBackupDate": "<dateTime>",
                        "lastEnrolledDate": "<dateTime>",
                        "mdmProfileExpiration": "<dateTime>",
                        "initialEntryDate": "<date>",
                        "distributionPoint": "<string>",
                        "enrollmentMethod": {
                          "id": "<string>",
                          "objectName": "<string>",
                          "objectType": "<string>"
                        },
                        "site": {
                          "id": "<string>",
                          "name": "<string>"
                        },
                        "itunesStoreAccountActive": "<boolean>",
                        "enrolledViaAutomatedDeviceEnrollment": "<boolean>",
                        "userApprovedMdm": "<boolean>",
                        "declarativeDeviceManagementEnabled": "<boolean>",
                        "extensionAttributes": [
                          {
                            "definitionId": "<string>",
                            "name": "<string>",
                            "description": "<string>",
                            "enabled": "<boolean>",
                            "multiValue": "<boolean>",
                            "values": [
                              "<string>",
                              "<string>"
                            ],
                            "dataType": "DATE_TIME",
                            "options": [
                              "<string>",
                              "<string>"
                            ],
                            "inputType": "TEXT"
                          },
                          {
                            "definitionId": "<string>",
                            "name": "<string>",
                            "description": "<string>",
                            "enabled": "<boolean>",
                            "multiValue": "<boolean>",
                            "values": [
                              "<string>",
                              "<string>"
                            ],
                            "dataType": "DATE_TIME",
                            "options": [
                              "<string>",
                              "<string>"
                            ],
                            "inputType": "SCRIPT"
                          }
                        ],
                        "managementId": "<string>"
                      },
                      "diskEncryption": {
                        "bootPartitionEncryptionDetails": {
                          "partitionName": "<string>",
                          "partitionFileVault2State": "RESTART_NEEDED",
                          "partitionFileVault2Percent": "<integer>"
                        },
                        "individualRecoveryKeyValidityStatus": "NOT_APPLICABLE",
                        "institutionalRecoveryKeyPresent": "<boolean>",
                        "diskEncryptionConfigurationName": "<string>",
                        "fileVault2EnabledUserNames": [
                          "<string>",
                          "<string>"
                        ],
                        "fileVault2EligibilityMessage": "<string>"
                      },
                      "purchasing": {
                        "leased": "<boolean>",
                        "purchased": "<boolean>",
                        "poNumber": "<string>",
                        "poDate": "<date>",
                        "vendor": "<string>",
                        "warrantyDate": "<date>",
                        "appleCareId": "<string>",
                        "leaseDate": "<date>",
                        "purchasePrice": "<string>",
                        "lifeExpectancy": "<integer>",
                        "purchasingAccount": "<string>",
                        "purchasingContact": "<string>",
                        "extensionAttributes": [
                          {
                            "definitionId": "<string>",
                            "name": "<string>",
                            "description": "<string>",
                            "enabled": "<boolean>",
                            "multiValue": "<boolean>",
                            "values": [
                              "<string>",
                              "<string>"
                            ],
                            "dataType": "INTEGER",
                            "options": [
                              "<string>",
                              "<string>"
                            ],
                            "inputType": "LDAP"
                          },
                          {
                            "definitionId": "<string>",
                            "name": "<string>",
                            "description": "<string>",
                            "enabled": "<boolean>",
                            "multiValue": "<boolean>",
                            "values": [
                              "<string>",
                              "<string>"
                            ],
                            "dataType": "DATE_TIME",
                            "options": [
                              "<string>",
                              "<string>"
                            ],
                            "inputType": "SCRIPT"
                          }
                        ]
                      },
                      "applications": [
                        {
                          "name": "<string>",
                          "path": "<string>",
                          "version": "<string>",
                          "macAppStore": "<boolean>",
                          "sizeMegabytes": "<integer>",
                          "bundleId": "<string>",
                          "updateAvailable": "<boolean>",
                          "externalVersionId": "<string>"
                        },
                        {
                          "name": "<string>",
                          "path": "<string>",
                          "version": "<string>",
                          "macAppStore": "<boolean>",
                          "sizeMegabytes": "<integer>",
                          "bundleId": "<string>",
                          "updateAvailable": "<boolean>",
                          "externalVersionId": "<string>"
                        }
                      ],
                      "storage": {
                        "bootDriveAvailableSpaceMegabytes": "<long>",
                        "disks": [
                          {
                            "id": "<string>",
                            "device": "<string>",
                            "model": "<string>",
                            "revision": "<string>",
                            "serialNumber": "<string>",
                            "sizeMegabytes": "<long>",
                            "smartStatus": "<string>",
                            "type": "<string>",
                            "partitions": [
                              {
                                "name": "<string>",
                                "sizeMegabytes": "<long>",
                                "availableMegabytes": "<long>",
                                "partitionType": "RECOVERY",
                                "percentUsed": "<integer>",
                                "fileVault2State": "DECRYPTING_PAUSED",
                                "fileVault2ProgressPercent": "<integer>",
                                "lvmManaged": "<boolean>"
                              },
                              {
                                "name": "<string>",
                                "sizeMegabytes": "<long>",
                                "availableMegabytes": "<long>",
                                "partitionType": "OTHER",
                                "percentUsed": "<integer>",
                                "fileVault2State": "UNKNOWN",
                                "fileVault2ProgressPercent": "<integer>",
                                "lvmManaged": "<boolean>"
                              }
                            ]
                          },
                          {
                            "id": "<string>",
                            "device": "<string>",
                            "model": "<string>",
                            "revision": "<string>",
                            "serialNumber": "<string>",
                            "sizeMegabytes": "<long>",
                            "smartStatus": "<string>",
                            "type": "<string>",
                            "partitions": [
                              {
                                "name": "<string>",
                                "sizeMegabytes": "<long>",
                                "availableMegabytes": "<long>",
                                "partitionType": "BOOT",
                                "percentUsed": "<integer>",
                                "fileVault2State": "DECRYPTING_PAUSED",
                                "fileVault2ProgressPercent": "<integer>",
                                "lvmManaged": "<boolean>"
                              },
                              {
                                "name": "<string>",
                                "sizeMegabytes": "<long>",
                                "availableMegabytes": "<long>",
                                "partitionType": "OTHER",
                                "percentUsed": "<integer>",
                                "fileVault2State": "DECRYPTING",
                                "fileVault2ProgressPercent": "<integer>",
                                "lvmManaged": "<boolean>"
                              }
                            ]
                          }
                        ]
                      },
                      "userAndLocation": {
                        "username": "<string>",
                        "realname": "<string>",
                        "email": "<string>",
                        "position": "<string>",
                        "phone": "<string>",
                        "departmentId": "<string>",
                        "buildingId": "<string>",
                        "room": "<string>",
                        "extensionAttributes": [
                          {
                            "definitionId": "<string>",
                            "name": "<string>",
                            "description": "<string>",
                            "enabled": "<boolean>",
                            "multiValue": "<boolean>",
                            "values": [
                              "<string>",
                              "<string>"
                            ],
                            "dataType": "STRING",
                            "options": [
                              "<string>",
                              "<string>"
                            ],
                            "inputType": "SCRIPT"
                          },
                          {
                            "definitionId": "<string>",
                            "name": "<string>",
                            "description": "<string>",
                            "enabled": "<boolean>",
                            "multiValue": "<boolean>",
                            "values": [
                              "<string>",
                              "<string>"
                            ],
                            "dataType": "INTEGER",
                            "options": [
                              "<string>",
                              "<string>"
                            ],
                            "inputType": "LDAP"
                          }
                        ]
                      },
                      "configurationProfiles": [
                        {
                          "id": "<string>",
                          "username": "<string>",
                          "lastInstalled": "<dateTime>",
                          "removable": "<boolean>",
                          "displayName": "<string>",
                          "profileIdentifier": "<string>"
                        },
                        {
                          "id": "<string>",
                          "username": "<string>",
                          "lastInstalled": "<dateTime>",
                          "removable": "<boolean>",
                          "displayName": "<string>",
                          "profileIdentifier": "<string>"
                        }
                      ],
                      "printers": [
                        {
                          "name": "<string>",
                          "type": "<string>",
                          "uri": "<string>",
                          "location": "<string>"
                        },
                        {
                          "name": "<string>",
                          "type": "<string>",
                          "uri": "<string>",
                          "location": "<string>"
                        }
                      ],
                      "services": [
                        {
                          "name": "<string>"
                        },
                        {
                          "name": "<string>"
                        }
                      ],
                      "hardware": {
                        "make": "<string>",
                        "model": "<string>",
                        "modelIdentifier": "<string>",
                        "serialNumber": "<string>",
                        "processorSpeedMhz": "<long>",
                        "processorCount": "<integer>",
                        "coreCount": "<integer>",
                        "processorType": "<string>",
                        "processorArchitecture": "<string>",
                        "busSpeedMhz": "<long>",
                        "cacheSizeKilobytes": "<long>",
                        "networkAdapterType": "<string>",
                        "macAddress": "<string>",
                        "altNetworkAdapterType": "<string>",
                        "altMacAddress": "<string>",
                        "totalRamMegabytes": "<long>",
                        "openRamSlots": "<integer>",
                        "batteryCapacityPercent": "<integer>",
                        "smcVersion": "<string>",
                        "nicSpeed": "<string>",
                        "opticalDrive": "<string>",
                        "bootRom": "<string>",
                        "bleCapable": "<boolean>",
                        "supportsIosAppInstalls": "<boolean>",
                        "appleSilicon": "<boolean>",
                        "extensionAttributes": [
                          {
                            "definitionId": "<string>",
                            "name": "<string>",
                            "description": "<string>",
                            "enabled": "<boolean>",
                            "multiValue": "<boolean>",
                            "values": [
                              "<string>",
                              "<string>"
                            ],
                            "dataType": "INTEGER",
                            "options": [
                              "<string>",
                              "<string>"
                            ],
                            "inputType": "LDAP"
                          },
                          {
                            "definitionId": "<string>",
                            "name": "<string>",
                            "description": "<string>",
                            "enabled": "<boolean>",
                            "multiValue": "<boolean>",
                            "values": [
                              "<string>",
                              "<string>"
                            ],
                            "dataType": "STRING",
                            "options": [
                              "<string>",
                              "<string>"
                            ],
                            "inputType": "SCRIPT"
                          }
                        ]
                      },
                      "localUserAccounts": [
                        {
                          "uid": "<string>",
                          "userGuid": "<string>",
                          "username": "<string>",
                          "fullName": "<string>",
                          "admin": "<boolean>",
                          "homeDirectory": "<string>",
                          "homeDirectorySizeMb": "<long>",
                          "fileVault2Enabled": "<boolean>",
                          "userAccountType": "MOBILE",
                          "passwordMinLength": "<integer>",
                          "passwordMaxAge": "<integer>",
                          "passwordMinComplexCharacters": "<integer>",
                          "passwordHistoryDepth": "<integer>",
                          "passwordRequireAlphanumeric": "<boolean>",
                          "computerAzureActiveDirectoryId": "<string>",
                          "userAzureActiveDirectoryId": "<string>",
                          "azureActiveDirectoryId": "DEACTIVATED"
                        },
                        {
                          "uid": "<string>",
                          "userGuid": "<string>",
                          "username": "<string>",
                          "fullName": "<string>",
                          "admin": "<boolean>",
                          "homeDirectory": "<string>",
                          "homeDirectorySizeMb": "<long>",
                          "fileVault2Enabled": "<boolean>",
                          "userAccountType": "MOBILE",
                          "passwordMinLength": "<integer>",
                          "passwordMaxAge": "<integer>",
                          "passwordMinComplexCharacters": "<integer>",
                          "passwordHistoryDepth": "<integer>",
                          "passwordRequireAlphanumeric": "<boolean>",
                          "computerAzureActiveDirectoryId": "<string>",
                          "userAzureActiveDirectoryId": "<string>",
                          "azureActiveDirectoryId": "ACTIVATED"
                        }
                      ],
                      "certificates": [
                        {
                          "commonName": "<string>",
                          "identity": "<boolean>",
                          "expirationDate": "<dateTime>",
                          "username": "<string>",
                          "lifecycleStatus": "INACTIVE",
                          "certificateStatus": "EXPIRED",
                          "subjectName": "<string>",
                          "serialNumber": "<string>",
                          "sha1Fingerprint": "<string>",
                          "issuedDate": "<string>"
                        },
                        {
                          "commonName": "<string>",
                          "identity": "<boolean>",
                          "expirationDate": "<dateTime>",
                          "username": "<string>",
                          "lifecycleStatus": "ACTIVE",
                          "certificateStatus": "REVOKED",
                          "subjectName": "<string>",
                          "serialNumber": "<string>",
                          "sha1Fingerprint": "<string>",
                          "issuedDate": "<string>"
                        }
                      ],
                      "attachments": [
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "fileType": "<string>",
                          "sizeBytes": "<long>"
                        },
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "fileType": "<string>",
                          "sizeBytes": "<long>"
                        }
                      ],
                      "plugins": [
                        {
                          "name": "<string>",
                          "version": "<string>",
                          "path": "<string>"
                        },
                        {
                          "name": "<string>",
                          "version": "<string>",
                          "path": "<string>"
                        }
                      ],
                      "packageReceipts": {
                        "installedByJamfPro": [
                          "<string>",
                          "<string>"
                        ],
                        "installedByInstallerSwu": [
                          "<string>",
                          "<string>"
                        ],
                        "cached": [
                          "<string>",
                          "<string>"
                        ]
                      },
                      "fonts": [
                        {
                          "name": "<string>",
                          "version": "<string>",
                          "path": "<string>"
                        },
                        {
                          "name": "<string>",
                          "version": "<string>",
                          "path": "<string>"
                        }
                      ],
                      "security": {
                        "sipStatus": "NOT_AVAILABLE",
                        "gatekeeperStatus": "APP_STORE",
                        "xprotectVersion": "<string>",
                        "autoLoginDisabled": "<boolean>",
                        "remoteDesktopEnabled": "<boolean>",
                        "activationLockEnabled": "<boolean>",
                        "recoveryLockEnabled": "<boolean>",
                        "firewallEnabled": "<boolean>",
                        "secureBootLevel": "MEDIUM_SECURITY",
                        "externalBootLevel": "NOT_SUPPORTED",
                        "bootstrapTokenAllowed": "<boolean>",
                        "bootstrapTokenEscrowedStatus": "NOT_SUPPORTED"
                      },
                      "operatingSystem": {
                        "name": "<string>",
                        "version": "<string>",
                        "build": "<string>",
                        "supplementalBuildVersion": "<string>",
                        "rapidSecurityResponse": "<string>",
                        "activeDirectoryStatus": "<string>",
                        "fileVault2Status": "NOT_ENCRYPTED",
                        "softwareUpdateDeviceId": "<string>",
                        "extensionAttributes": [
                          {
                            "definitionId": "<string>",
                            "name": "<string>",
                            "description": "<string>",
                            "enabled": "<boolean>",
                            "multiValue": "<boolean>",
                            "values": [
                              "<string>",
                              "<string>"
                            ],
                            "dataType": "INTEGER",
                            "options": [
                              "<string>",
                              "<string>"
                            ],
                            "inputType": "POPUP"
                          },
                          {
                            "definitionId": "<string>",
                            "name": "<string>",
                            "description": "<string>",
                            "enabled": "<boolean>",
                            "multiValue": "<boolean>",
                            "values": [
                              "<string>",
                              "<string>"
                            ],
                            "dataType": "DATE_TIME",
                            "options": [
                              "<string>",
                              "<string>"
                            ],
                            "inputType": "TEXT"
                          }
                        ]
                      },
                      "licensedSoftware": [
                        {
                          "id": "<string>",
                          "name": "<string>"
                        },
                        {
                          "id": "<string>",
                          "name": "<string>"
                        }
                      ],
                      "ibeacons": [
                        {
                          "name": "<string>"
                        },
                        {
                          "name": "<string>"
                        }
                      ],
                      "softwareUpdates": [
                        {
                          "name": "<string>",
                          "version": "<string>",
                          "packageName": "<string>"
                        },
                        {
                          "name": "<string>",
                          "version": "<string>",
                          "packageName": "<string>"
                        }
                      ],
                      "extensionAttributes": [
                        {
                          "definitionId": "<string>",
                          "name": "<string>",
                          "description": "<string>",
                          "enabled": "<boolean>",
                          "multiValue": "<boolean>",
                          "values": [
                            "<string>",
                            "<string>"
                          ],
                          "dataType": "INTEGER",
                          "options": [
                            "<string>",
                            "<string>"
                          ],
                          "inputType": "TEXT"
                        },
                        {
                          "definitionId": "<string>",
                          "name": "<string>",
                          "description": "<string>",
                          "enabled": "<boolean>",
                          "multiValue": "<boolean>",
                          "values": [
                            "<string>",
                            "<string>"
                          ],
                          "dataType": "STRING",
                          "options": [
                            "<string>",
                            "<string>"
                          ],
                          "inputType": "LDAP"
                        }
                      ],
                      "contentCaching": {
                        "computerContentCachingInformationId": "<string>",
                        "parents": [
                          {
                            "contentCachingParentId": "<string>",
                            "address": "<string>",
                            "alerts": {
                              "contentCachingParentAlertId": "<string>",
                              "addresses": [
                                "<string>",
                                "<string>"
                              ],
                              "className": "<string>",
                              "postDate": "<dateTime>"
                            },
                            "details": {
                              "contentCachingParentDetailsId": "<string>",
                              "acPower": "<boolean>",
                              "cacheSizeBytes": "<long>",
                              "capabilities": {
                                "contentCachingParentCapabilitiesId": "<string>",
                                "imports": "<boolean>",
                                "namespaces": "<boolean>",
                                "personalContent": "<boolean>",
                                "queryParameters": "<boolean>",
                                "sharedContent": "<boolean>",
                                "prioritization": "<boolean>"
                              },
                              "portable": "<boolean>",
                              "localNetwork": [
                                {
                                  "contentCachingParentLocalNetworkId": "<string>",
                                  "speed": "<long>",
                                  "wired": "<boolean>"
                                },
                                {
                                  "contentCachingParentLocalNetworkId": "<string>",
                                  "speed": "<long>",
                                  "wired": "<boolean>"
                                }
                              ]
                            },
                            "guid": "<string>",
                            "healthy": "<boolean>",
                            "port": "<long>",
                            "version": "<string>"
                          },
                          {
                            "contentCachingParentId": "<string>",
                            "address": "<string>",
                            "alerts": {
                              "contentCachingParentAlertId": "<string>",
                              "addresses": [
                                "<string>",
                                "<string>"
                              ],
                              "className": "<string>",
                              "postDate": "<dateTime>"
                            },
                            "details": {
                              "contentCachingParentDetailsId": "<string>",
                              "acPower": "<boolean>",
                              "cacheSizeBytes": "<long>",
                              "capabilities": {
                                "contentCachingParentCapabilitiesId": "<string>",
                                "imports": "<boolean>",
                                "namespaces": "<boolean>",
                                "personalContent": "<boolean>",
                                "queryParameters": "<boolean>",
                                "sharedContent": "<boolean>",
                                "prioritization": "<boolean>"
                              },
                              "portable": "<boolean>",
                              "localNetwork": [
                                {
                                  "contentCachingParentLocalNetworkId": "<string>",
                                  "speed": "<long>",
                                  "wired": "<boolean>"
                                },
                                {
                                  "contentCachingParentLocalNetworkId": "<string>",
                                  "speed": "<long>",
                                  "wired": "<boolean>"
                                }
                              ]
                            },
                            "guid": "<string>",
                            "healthy": "<boolean>",
                            "port": "<long>",
                            "version": "<string>"
                          }
                        ],
                        "alerts": [
                          {
                            "cacheBytesLimit": "<long>",
                            "className": "<string>",
                            "pathPreventingAccess": "<string>",
                            "postDate": "<dateTime>",
                            "reservedVolumeBytes": "<long>",
                            "resource": "<string>"
                          },
                          {
                            "cacheBytesLimit": "<long>",
                            "className": "<string>",
                            "pathPreventingAccess": "<string>",
                            "postDate": "<dateTime>",
                            "reservedVolumeBytes": "<long>",
                            "resource": "<string>"
                          }
                        ],
                        "activated": "<boolean>",
                        "active": "<boolean>",
                        "actualCacheBytesUsed": "<long>",
                        "cacheDetails": [
                          {
                            "computerContentCachingCacheDetailsId": "<string>",
                            "categoryName": "<string>",
                            "diskSpaceBytesUsed": "<long>"
                          },
                          {
                            "computerContentCachingCacheDetailsId": "<string>",
                            "categoryName": "<string>",
                            "diskSpaceBytesUsed": "<long>"
                          }
                        ],
                        "cacheBytesFree": "<long>",
                        "cacheBytesLimit": "<long>",
                        "cacheStatus": "<string>",
                        "cacheBytesUsed": "<long>",
                        "dataMigrationCompleted": "<boolean>",
                        "dataMigrationProgressPercentage": "<integer>",
                        "dataMigrationError": {
                          "code": "<long>",
                          "domain": "<string>",
                          "userInfo": [
                            {
                              "key": "<string>",
                              "value": "<string>"
                            },
                            {
                              "key": "<string>",
                              "value": "<string>"
                            }
                          ]
                        },
                        "maxCachePressureLast1HourPercentage": "<integer>",
                        "personalCacheBytesFree": "<long>",
                        "personalCacheBytesLimit": "<long>",
                        "personalCacheBytesUsed": "<long>",
                        "port": "<long>",
                        "publicAddress": "<string>",
                        "registrationError": "<string>",
                        "registrationResponseCode": "<long>",
                        "registrationStarted": "<dateTime>",
                        "registrationStatus": "CONTENT_CACHING_SUCCEEDED",
                        "restrictedMedia": "<boolean>",
                        "serverGuid": "<string>",
                        "startupStatus": "<string>",
                        "tetheratorStatus": "CONTENT_CACHING_UNKNOWN",
                        "totalBytesAreSince": "<dateTime>",
                        "totalBytesDropped": "<long>",
                        "totalBytesImported": "<long>",
                        "totalBytesReturnedToChildren": "<long>",
                        "totalBytesReturnedToClients": "<long>",
                        "totalBytesReturnedToPeers": "<long>",
                        "totalBytesStoredFromOrigin": "<long>",
                        "totalBytesStoredFromParents": "<long>",
                        "totalBytesStoredFromPeers": "<long>"
                      },
                      "groupMemberships": [
                        {
                          "groupId": "<string>",
                          "groupName": "<string>",
                          "smartGroup": "<boolean>"
                        },
                        {
                          "groupId": "<string>",
                          "groupName": "<string>",
                          "smartGroup": "<boolean>"
                        }
                      ]
                    },
                    {
                      "id": "<string>",
                      "udid": "<string>",
                      "general": {
                        "name": "<string>",
                        "lastIpAddress": "<string>",
                        "lastReportedIp": "<string>",
                        "jamfBinaryVersion": "<string>",
                        "platform": "<string>",
                        "barcode1": "<string>",
                        "barcode2": "<string>",
                        "assetTag": "<string>",
                        "remoteManagement": {
                          "managed": "<boolean>",
                          "managementUsername": "<string>"
                        },
                        "supervised": "<boolean>",
                        "mdmCapable": {
                          "capable": "<boolean>",
                          "capableUsers": [
                            "<string>",
                            "<string>"
                          ]
                        },
                        "reportDate": "<dateTime>",
                        "lastContactTime": "<dateTime>",
                        "lastCloudBackupDate": "<dateTime>",
                        "lastEnrolledDate": "<dateTime>",
                        "mdmProfileExpiration": "<dateTime>",
                        "initialEntryDate": "<date>",
                        "distributionPoint": "<string>",
                        "enrollmentMethod": {
                          "id": "<string>",
                          "objectName": "<string>",
                          "objectType": "<string>"
                        },
                        "site": {
                          "id": "<string>",
                          "name": "<string>"
                        },
                        "itunesStoreAccountActive": "<boolean>",
                        "enrolledViaAutomatedDeviceEnrollment": "<boolean>",
                        "userApprovedMdm": "<boolean>",
                        "declarativeDeviceManagementEnabled": "<boolean>",
                        "extensionAttributes": [
                          {
                            "definitionId": "<string>",
                            "name": "<string>",
                            "description": "<string>",
                            "enabled": "<boolean>",
                            "multiValue": "<boolean>",
                            "values": [
                              "<string>",
                              "<string>"
                            ],
                            "dataType": "DATE_TIME",
                            "options": [
                              "<string>",
                              "<string>"
                            ],
                            "inputType": "SCRIPT"
                          },
                          {
                            "definitionId": "<string>",
                            "name": "<string>",
                            "description": "<string>",
                            "enabled": "<boolean>",
                            "multiValue": "<boolean>",
                            "values": [
                              "<string>",
                              "<string>"
                            ],
                            "dataType": "INTEGER",
                            "options": [
                              "<string>",
                              "<string>"
                            ],
                            "inputType": "POPUP"
                          }
                        ],
                        "managementId": "<string>"
                      },
                      "diskEncryption": {
                        "bootPartitionEncryptionDetails": {
                          "partitionName": "<string>",
                          "partitionFileVault2State": "INELIGIBLE",
                          "partitionFileVault2Percent": "<integer>"
                        },
                        "individualRecoveryKeyValidityStatus": "INVALID",
                        "institutionalRecoveryKeyPresent": "<boolean>",
                        "diskEncryptionConfigurationName": "<string>",
                        "fileVault2EnabledUserNames": [
                          "<string>",
                          "<string>"
                        ],
                        "fileVault2EligibilityMessage": "<string>"
                      },
                      "purchasing": {
                        "leased": "<boolean>",
                        "purchased": "<boolean>",
                        "poNumber": "<string>",
                        "poDate": "<date>",
                        "vendor": "<string>",
                        "warrantyDate": "<date>",
                        "appleCareId": "<string>",
                        "leaseDate": "<date>",
                        "purchasePrice": "<string>",
                        "lifeExpectancy": "<integer>",
                        "purchasingAccount": "<string>",
                        "purchasingContact": "<string>",
                        "extensionAttributes": [
                          {
                            "definitionId": "<string>",
                            "name": "<string>",
                            "description": "<string>",
                            "enabled": "<boolean>",
                            "multiValue": "<boolean>",
                            "values": [
                              "<string>",
                              "<string>"
                            ],
                            "dataType": "DATE_TIME",
                            "options": [
                              "<string>",
                              "<string>"
                            ],
                            "inputType": "POPUP"
                          },
                          {
                            "definitionId": "<string>",
                            "name": "<string>",
                            "description": "<string>",
                            "enabled": "<boolean>",
                            "multiValue": "<boolean>",
                            "values": [
                              "<string>",
                              "<string>"
                            ],
                            "dataType": "STRING",
                            "options": [
                              "<string>",
                              "<string>"
                            ],
                            "inputType": "LDAP"
                          }
                        ]
                      },
                      "applications": [
                        {
                          "name": "<string>",
                          "path": "<string>",
                          "version": "<string>",
                          "macAppStore": "<boolean>",
                          "sizeMegabytes": "<integer>",
                          "bundleId": "<string>",
                          "updateAvailable": "<boolean>",
                          "externalVersionId": "<string>"
                        },
                        {
                          "name": "<string>",
                          "path": "<string>",
                          "version": "<string>",
                          "macAppStore": "<boolean>",
                          "sizeMegabytes": "<integer>",
                          "bundleId": "<string>",
                          "updateAvailable": "<boolean>",
                          "externalVersionId": "<string>"
                        }
                      ],
                      "storage": {
                        "bootDriveAvailableSpaceMegabytes": "<long>",
                        "disks": [
                          {
                            "id": "<string>",
                            "device": "<string>",
                            "model": "<string>",
                            "revision": "<string>",
                            "serialNumber": "<string>",
                            "sizeMegabytes": "<long>",
                            "smartStatus": "<string>",
                            "type": "<string>",
                            "partitions": [
                              {
                                "name": "<string>",
                                "sizeMegabytes": "<long>",
                                "availableMegabytes": "<long>",
                                "partitionType": "RECOVERY",
                                "percentUsed": "<integer>",
                                "fileVault2State": "DECRYPTED",
                                "fileVault2ProgressPercent": "<integer>",
                                "lvmManaged": "<boolean>"
                              },
                              {
                                "name": "<string>",
                                "sizeMegabytes": "<long>",
                                "availableMegabytes": "<long>",
                                "partitionType": "OTHER",
                                "percentUsed": "<integer>",
                                "fileVault2State": "ENCRYPTED",
                                "fileVault2ProgressPercent": "<integer>",
                                "lvmManaged": "<boolean>"
                              }
                            ]
                          },
                          {
                            "id": "<string>",
                            "device": "<string>",
                            "model": "<string>",
                            "revision": "<string>",
                            "serialNumber": "<string>",
                            "sizeMegabytes": "<long>",
                            "smartStatus": "<string>",
                            "type": "<string>",
                            "partitions": [
                              {
                                "name": "<string>",
                                "sizeMegabytes": "<long>",
                                "availableMegabytes": "<long>",
                                "partitionType": "BOOT",
                                "percentUsed": "<integer>",
                                "fileVault2State": "OPTIMIZING",
                                "fileVault2ProgressPercent": "<integer>",
                                "lvmManaged": "<boolean>"
                              },
                              {
                                "name": "<string>",
                                "sizeMegabytes": "<long>",
                                "availableMegabytes": "<long>",
                                "partitionType": "BOOT",
                                "percentUsed": "<integer>",
                                "fileVault2State": "DECRYPTING",
                                "fileVault2ProgressPercent": "<integer>",
                                "lvmManaged": "<boolean>"
                              }
                            ]
                          }
                        ]
                      },
                      "userAndLocation": {
                        "username": "<string>",
                        "realname": "<string>",
                        "email": "<string>",
                        "position": "<string>",
                        "phone": "<string>",
                        "departmentId": "<string>",
                        "buildingId": "<string>",
                        "room": "<string>",
                        "extensionAttributes": [
                          {
                            "definitionId": "<string>",
                            "name": "<string>",
                            "description": "<string>",
                            "enabled": "<boolean>",
                            "multiValue": "<boolean>",
                            "values": [
                              "<string>",
                              "<string>"
                            ],
                            "dataType": "DATE_TIME",
                            "options": [
                              "<string>",
                              "<string>"
                            ],
                            "inputType": "POPUP"
                          },
                          {
                            "definitionId": "<string>",
                            "name": "<string>",
                            "description": "<string>",
                            "enabled": "<boolean>",
                            "multiValue": "<boolean>",
                            "values": [
                              "<string>",
                              "<string>"
                            ],
                            "dataType": "DATE_TIME",
                            "options": [
                              "<string>",
                              "<string>"
                            ],
                            "inputType": "TEXT"
                          }
                        ]
                      },
                      "configurationProfiles": [
                        {
                          "id": "<string>",
                          "username": "<string>",
                          "lastInstalled": "<dateTime>",
                          "removable": "<boolean>",
                          "displayName": "<string>",
                          "profileIdentifier": "<string>"
                        },
                        {
                          "id": "<string>",
                          "username": "<string>",
                          "lastInstalled": "<dateTime>",
                          "removable": "<boolean>",
                          "displayName": "<string>",
                          "profileIdentifier": "<string>"
                        }
                      ],
                      "printers": [
                        {
                          "name": "<string>",
                          "type": "<string>",
                          "uri": "<string>",
                          "location": "<string>"
                        },
                        {
                          "name": "<string>",
                          "type": "<string>",
                          "uri": "<string>",
                          "location": "<string>"
                        }
                      ],
                      "services": [
                        {
                          "name": "<string>"
                        },
                        {
                          "name": "<string>"
                        }
                      ],
                      "hardware": {
                        "make": "<string>",
                        "model": "<string>",
                        "modelIdentifier": "<string>",
                        "serialNumber": "<string>",
                        "processorSpeedMhz": "<long>",
                        "processorCount": "<integer>",
                        "coreCount": "<integer>",
                        "processorType": "<string>",
                        "processorArchitecture": "<string>",
                        "busSpeedMhz": "<long>",
                        "cacheSizeKilobytes": "<long>",
                        "networkAdapterType": "<string>",
                        "macAddress": "<string>",
                        "altNetworkAdapterType": "<string>",
                        "altMacAddress": "<string>",
                        "totalRamMegabytes": "<long>",
                        "openRamSlots": "<integer>",
                        "batteryCapacityPercent": "<integer>",
                        "smcVersion": "<string>",
                        "nicSpeed": "<string>",
                        "opticalDrive": "<string>",
                        "bootRom": "<string>",
                        "bleCapable": "<boolean>",
                        "supportsIosAppInstalls": "<boolean>",
                        "appleSilicon": "<boolean>",
                        "extensionAttributes": [
                          {
                            "definitionId": "<string>",
                            "name": "<string>",
                            "description": "<string>",
                            "enabled": "<boolean>",
                            "multiValue": "<boolean>",
                            "values": [
                              "<string>",
                              "<string>"
                            ],
                            "dataType": "INTEGER",
                            "options": [
                              "<string>",
                              "<string>"
                            ],
                            "inputType": "LDAP"
                          },
                          {
                            "definitionId": "<string>",
                            "name": "<string>",
                            "description": "<string>",
                            "enabled": "<boolean>",
                            "multiValue": "<boolean>",
                            "values": [
                              "<string>",
                              "<string>"
                            ],
                            "dataType": "STRING",
                            "options": [
                              "<string>",
                              "<string>"
                            ],
                            "inputType": "SCRIPT"
                          }
                        ]
                      },
                      "localUserAccounts": [
                        {
                          "uid": "<string>",
                          "userGuid": "<string>",
                          "username": "<string>",
                          "fullName": "<string>",
                          "admin": "<boolean>",
                          "homeDirectory": "<string>",
                          "homeDirectorySizeMb": "<long>",
                          "fileVault2Enabled": "<boolean>",
                          "userAccountType": "MOBILE",
                          "passwordMinLength": "<integer>",
                          "passwordMaxAge": "<integer>",
                          "passwordMinComplexCharacters": "<integer>",
                          "passwordHistoryDepth": "<integer>",
                          "passwordRequireAlphanumeric": "<boolean>",
                          "computerAzureActiveDirectoryId": "<string>",
                          "userAzureActiveDirectoryId": "<string>",
                          "azureActiveDirectoryId": "UNRESPONSIVE"
                        },
                        {
                          "uid": "<string>",
                          "userGuid": "<string>",
                          "username": "<string>",
                          "fullName": "<string>",
                          "admin": "<boolean>",
                          "homeDirectory": "<string>",
                          "homeDirectorySizeMb": "<long>",
                          "fileVault2Enabled": "<boolean>",
                          "userAccountType": "UNKNOWN",
                          "passwordMinLength": "<integer>",
                          "passwordMaxAge": "<integer>",
                          "passwordMinComplexCharacters": "<integer>",
                          "passwordHistoryDepth": "<integer>",
                          "passwordRequireAlphanumeric": "<boolean>",
                          "computerAzureActiveDirectoryId": "<string>",
                          "userAzureActiveDirectoryId": "<string>",
                          "azureActiveDirectoryId": "UNRESPONSIVE"
                        }
                      ],
                      "certificates": [
                        {
                          "commonName": "<string>",
                          "identity": "<boolean>",
                          "expirationDate": "<dateTime>",
                          "username": "<string>",
                          "lifecycleStatus": "ACTIVE",
                          "certificateStatus": "ISSUED",
                          "subjectName": "<string>",
                          "serialNumber": "<string>",
                          "sha1Fingerprint": "<string>",
                          "issuedDate": "<string>"
                        },
                        {
                          "commonName": "<string>",
                          "identity": "<boolean>",
                          "expirationDate": "<dateTime>",
                          "username": "<string>",
                          "lifecycleStatus": "ACTIVE",
                          "certificateStatus": "EXPIRED",
                          "subjectName": "<string>",
                          "serialNumber": "<string>",
                          "sha1Fingerprint": "<string>",
                          "issuedDate": "<string>"
                        }
                      ],
                      "attachments": [
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "fileType": "<string>",
                          "sizeBytes": "<long>"
                        },
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "fileType": "<string>",
                          "sizeBytes": "<long>"
                        }
                      ],
                      "plugins": [
                        {
                          "name": "<string>",
                          "version": "<string>",
                          "path": "<string>"
                        },
                        {
                          "name": "<string>",
                          "version": "<string>",
                          "path": "<string>"
                        }
                      ],
                      "packageReceipts": {
                        "installedByJamfPro": [
                          "<string>",
                          "<string>"
                        ],
                        "installedByInstallerSwu": [
                          "<string>",
                          "<string>"
                        ],
                        "cached": [
                          "<string>",
                          "<string>"
                        ]
                      },
                      "fonts": [
                        {
                          "name": "<string>",
                          "version": "<string>",
                          "path": "<string>"
                        },
                        {
                          "name": "<string>",
                          "version": "<string>",
                          "path": "<string>"
                        }
                      ],
                      "security": {
                        "sipStatus": "NOT_AVAILABLE",
                        "gatekeeperStatus": "NOT_COLLECTED",
                        "xprotectVersion": "<string>",
                        "autoLoginDisabled": "<boolean>",
                        "remoteDesktopEnabled": "<boolean>",
                        "activationLockEnabled": "<boolean>",
                        "recoveryLockEnabled": "<boolean>",
                        "firewallEnabled": "<boolean>",
                        "secureBootLevel": "NO_SECURITY",
                        "externalBootLevel": "NOT_SUPPORTED",
                        "bootstrapTokenAllowed": "<boolean>",
                        "bootstrapTokenEscrowedStatus": "ESCROWED"
                      },
                      "operatingSystem": {
                        "name": "<string>",
                        "version": "<string>",
                        "build": "<string>",
                        "supplementalBuildVersion": "<string>",
                        "rapidSecurityResponse": "<string>",
                        "activeDirectoryStatus": "<string>",
                        "fileVault2Status": "SOME_ENCRYPTED",
                        "softwareUpdateDeviceId": "<string>",
                        "extensionAttributes": [
                          {
                            "definitionId": "<string>",
                            "name": "<string>",
                            "description": "<string>",
                            "enabled": "<boolean>",
                            "multiValue": "<boolean>",
                            "values": [
                              "<string>",
                              "<string>"
                            ],
                            "dataType": "DATE_TIME",
                            "options": [
                              "<string>",
                              "<string>"
                            ],
                            "inputType": "SCRIPT"
                          },
                          {
                            "definitionId": "<string>",
                            "name": "<string>",
                            "description": "<string>",
                            "enabled": "<boolean>",
                            "multiValue": "<boolean>",
                            "values": [
                              "<string>",
                              "<string>"
                            ],
                            "dataType": "DATE_TIME",
                            "options": [
                              "<string>",
                              "<string>"
                            ],
                            "inputType": "TEXT"
                          }
                        ]
                      },
                      "licensedSoftware": [
                        {
                          "id": "<string>",
                          "name": "<string>"
                        },
                        {
                          "id": "<string>",
                          "name": "<string>"
                        }
                      ],
                      "ibeacons": [
                        {
                          "name": "<string>"
                        },
                        {
                          "name": "<string>"
                        }
                      ],
                      "softwareUpdates": [
                        {
                          "name": "<string>",
                          "version": "<string>",
                          "packageName": "<string>"
                        },
                        {
                          "name": "<string>",
                          "version": "<string>",
                          "packageName": "<string>"
                        }
                      ],
                      "extensionAttributes": [
                        {
                          "definitionId": "<string>",
                          "name": "<string>",
                          "description": "<string>",
                          "enabled": "<boolean>",
                          "multiValue": "<boolean>",
                          "values": [
                            "<string>",
                            "<string>"
                          ],
                          "dataType": "INTEGER",
                          "options": [
                            "<string>",
                            "<string>"
                          ],
                          "inputType": "TEXT"
                        },
                        {
                          "definitionId": "<string>",
                          "name": "<string>",
                          "description": "<string>",
                          "enabled": "<boolean>",
                          "multiValue": "<boolean>",
                          "values": [
                            "<string>",
                            "<string>"
                          ],
                          "dataType": "STRING",
                          "options": [
                            "<string>",
                            "<string>"
                          ],
                          "inputType": "TEXT"
                        }
                      ],
                      "contentCaching": {
                        "computerContentCachingInformationId": "<string>",
                        "parents": [
                          {
                            "contentCachingParentId": "<string>",
                            "address": "<string>",
                            "alerts": {
                              "contentCachingParentAlertId": "<string>",
                              "addresses": [
                                "<string>",
                                "<string>"
                              ],
                              "className": "<string>",
                              "postDate": "<dateTime>"
                            },
                            "details": {
                              "contentCachingParentDetailsId": "<string>",
                              "acPower": "<boolean>",
                              "cacheSizeBytes": "<long>",
                              "capabilities": {
                                "contentCachingParentCapabilitiesId": "<string>",
                                "imports": "<boolean>",
                                "namespaces": "<boolean>",
                                "personalContent": "<boolean>",
                                "queryParameters": "<boolean>",
                                "sharedContent": "<boolean>",
                                "prioritization": "<boolean>"
                              },
                              "portable": "<boolean>",
                              "localNetwork": [
                                {
                                  "contentCachingParentLocalNetworkId": "<string>",
                                  "speed": "<long>",
                                  "wired": "<boolean>"
                                },
                                {
                                  "contentCachingParentLocalNetworkId": "<string>",
                                  "speed": "<long>",
                                  "wired": "<boolean>"
                                }
                              ]
                            },
                            "guid": "<string>",
                            "healthy": "<boolean>",
                            "port": "<long>",
                            "version": "<string>"
                          },
                          {
                            "contentCachingParentId": "<string>",
                            "address": "<string>",
                            "alerts": {
                              "contentCachingParentAlertId": "<string>",
                              "addresses": [
                                "<string>",
                                "<string>"
                              ],
                              "className": "<string>",
                              "postDate": "<dateTime>"
                            },
                            "details": {
                              "contentCachingParentDetailsId": "<string>",
                              "acPower": "<boolean>",
                              "cacheSizeBytes": "<long>",
                              "capabilities": {
                                "contentCachingParentCapabilitiesId": "<string>",
                                "imports": "<boolean>",
                                "namespaces": "<boolean>",
                                "personalContent": "<boolean>",
                                "queryParameters": "<boolean>",
                                "sharedContent": "<boolean>",
                                "prioritization": "<boolean>"
                              },
                              "portable": "<boolean>",
                              "localNetwork": [
                                {
                                  "contentCachingParentLocalNetworkId": "<string>",
                                  "speed": "<long>",
                                  "wired": "<boolean>"
                                },
                                {
                                  "contentCachingParentLocalNetworkId": "<string>",
                                  "speed": "<long>",
                                  "wired": "<boolean>"
                                }
                              ]
                            },
                            "guid": "<string>",
                            "healthy": "<boolean>",
                            "port": "<long>",
                            "version": "<string>"
                          }
                        ],
                        "alerts": [
                          {
                            "cacheBytesLimit": "<long>",
                            "className": "<string>",
                            "pathPreventingAccess": "<string>",
                            "postDate": "<dateTime>",
                            "reservedVolumeBytes": "<long>",
                            "resource": "<string>"
                          },
                          {
                            "cacheBytesLimit": "<long>",
                            "className": "<string>",
                            "pathPreventingAccess": "<string>",
                            "postDate": "<dateTime>",
                            "reservedVolumeBytes": "<long>",
                            "resource": "<string>"
                          }
                        ],
                        "activated": "<boolean>",
                        "active": "<boolean>",
                        "actualCacheBytesUsed": "<long>",
                        "cacheDetails": [
                          {
                            "computerContentCachingCacheDetailsId": "<string>",
                            "categoryName": "<string>",
                            "diskSpaceBytesUsed": "<long>"
                          },
                          {
                            "computerContentCachingCacheDetailsId": "<string>",
                            "categoryName": "<string>",
                            "diskSpaceBytesUsed": "<long>"
                          }
                        ],
                        "cacheBytesFree": "<long>",
                        "cacheBytesLimit": "<long>",
                        "cacheStatus": "<string>",
                        "cacheBytesUsed": "<long>",
                        "dataMigrationCompleted": "<boolean>",
                        "dataMigrationProgressPercentage": "<integer>",
                        "dataMigrationError": {
                          "code": "<long>",
                          "domain": "<string>",
                          "userInfo": [
                            {
                              "key": "<string>",
                              "value": "<string>"
                            },
                            {
                              "key": "<string>",
                              "value": "<string>"
                            }
                          ]
                        },
                        "maxCachePressureLast1HourPercentage": "<integer>",
                        "personalCacheBytesFree": "<long>",
                        "personalCacheBytesLimit": "<long>",
                        "personalCacheBytesUsed": "<long>",
                        "port": "<long>",
                        "publicAddress": "<string>",
                        "registrationError": "<string>",
                        "registrationResponseCode": "<long>",
                        "registrationStarted": "<dateTime>",
                        "registrationStatus": "CONTENT_CACHING_FAILED",
                        "restrictedMedia": "<boolean>",
                        "serverGuid": "<string>",
                        "startupStatus": "<string>",
                        "tetheratorStatus": "CONTENT_CACHING_DISABLED",
                        "totalBytesAreSince": "<dateTime>",
                        "totalBytesDropped": "<long>",
                        "totalBytesImported": "<long>",
                        "totalBytesReturnedToChildren": "<long>",
                        "totalBytesReturnedToClients": "<long>",
                        "totalBytesReturnedToPeers": "<long>",
                        "totalBytesStoredFromOrigin": "<long>",
                        "totalBytesStoredFromParents": "<long>",
                        "totalBytesStoredFromPeers": "<long>"
                      },
                      "groupMemberships": [
                        {
                          "groupId": "<string>",
                          "groupName": "<string>",
                          "smartGroup": "<boolean>"
                        },
                        {
                          "groupId": "<string>",
                          "groupName": "<string>",
                          "smartGroup": "<boolean>"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_computers-inventory"
      }
    },
    "/v1/computers-inventory-detail/{id}": {
      "get": {
        "tags": [
          "v1 > computers-inventory-detail > {id}"
        ],
        "summary": "Return all sections of a computer",
        "description": "Return all sections of a computer",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of computer record",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "udid": "<string>",
                  "general": {
                    "name": "<string>",
                    "lastIpAddress": "<string>",
                    "lastReportedIp": "<string>",
                    "jamfBinaryVersion": "<string>",
                    "platform": "<string>",
                    "barcode1": "<string>",
                    "barcode2": "<string>",
                    "assetTag": "<string>",
                    "remoteManagement": {
                      "managed": "<boolean>",
                      "managementUsername": "<string>"
                    },
                    "supervised": "<boolean>",
                    "mdmCapable": {
                      "capable": "<boolean>",
                      "capableUsers": [
                        "<string>",
                        "<string>"
                      ]
                    },
                    "reportDate": "<dateTime>",
                    "lastContactTime": "<dateTime>",
                    "lastCloudBackupDate": "<dateTime>",
                    "lastEnrolledDate": "<dateTime>",
                    "mdmProfileExpiration": "<dateTime>",
                    "initialEntryDate": "<date>",
                    "distributionPoint": "<string>",
                    "enrollmentMethod": {
                      "id": "<string>",
                      "objectName": "<string>",
                      "objectType": "<string>"
                    },
                    "site": {
                      "id": "<string>",
                      "name": "<string>"
                    },
                    "itunesStoreAccountActive": "<boolean>",
                    "enrolledViaAutomatedDeviceEnrollment": "<boolean>",
                    "userApprovedMdm": "<boolean>",
                    "declarativeDeviceManagementEnabled": "<boolean>",
                    "extensionAttributes": [
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "INTEGER",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "SCRIPT"
                      },
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "INTEGER",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "LDAP"
                      }
                    ],
                    "managementId": "<string>"
                  },
                  "diskEncryption": {
                    "bootPartitionEncryptionDetails": {
                      "partitionName": "<string>",
                      "partitionFileVault2State": "DECRYPTING",
                      "partitionFileVault2Percent": "<integer>"
                    },
                    "individualRecoveryKeyValidityStatus": "INVALID",
                    "institutionalRecoveryKeyPresent": "<boolean>",
                    "diskEncryptionConfigurationName": "<string>",
                    "fileVault2EnabledUserNames": [
                      "<string>",
                      "<string>"
                    ],
                    "fileVault2EligibilityMessage": "<string>"
                  },
                  "purchasing": {
                    "leased": "<boolean>",
                    "purchased": "<boolean>",
                    "poNumber": "<string>",
                    "poDate": "<date>",
                    "vendor": "<string>",
                    "warrantyDate": "<date>",
                    "appleCareId": "<string>",
                    "leaseDate": "<date>",
                    "purchasePrice": "<string>",
                    "lifeExpectancy": "<integer>",
                    "purchasingAccount": "<string>",
                    "purchasingContact": "<string>",
                    "extensionAttributes": [
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "INTEGER",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "LDAP"
                      },
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "DATE_TIME",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "POPUP"
                      }
                    ]
                  },
                  "applications": [
                    {
                      "name": "<string>",
                      "path": "<string>",
                      "version": "<string>",
                      "macAppStore": "<boolean>",
                      "sizeMegabytes": "<integer>",
                      "bundleId": "<string>",
                      "updateAvailable": "<boolean>",
                      "externalVersionId": "<string>"
                    },
                    {
                      "name": "<string>",
                      "path": "<string>",
                      "version": "<string>",
                      "macAppStore": "<boolean>",
                      "sizeMegabytes": "<integer>",
                      "bundleId": "<string>",
                      "updateAvailable": "<boolean>",
                      "externalVersionId": "<string>"
                    }
                  ],
                  "storage": {
                    "bootDriveAvailableSpaceMegabytes": "<long>",
                    "disks": [
                      {
                        "id": "<string>",
                        "device": "<string>",
                        "model": "<string>",
                        "revision": "<string>",
                        "serialNumber": "<string>",
                        "sizeMegabytes": "<long>",
                        "smartStatus": "<string>",
                        "type": "<string>",
                        "partitions": [
                          {
                            "name": "<string>",
                            "sizeMegabytes": "<long>",
                            "availableMegabytes": "<long>",
                            "partitionType": "BOOT",
                            "percentUsed": "<integer>",
                            "fileVault2State": "ENCRYPTING_PAUSED",
                            "fileVault2ProgressPercent": "<integer>",
                            "lvmManaged": "<boolean>"
                          },
                          {
                            "name": "<string>",
                            "sizeMegabytes": "<long>",
                            "availableMegabytes": "<long>",
                            "partitionType": "OTHER",
                            "percentUsed": "<integer>",
                            "fileVault2State": "INELIGIBLE",
                            "fileVault2ProgressPercent": "<integer>",
                            "lvmManaged": "<boolean>"
                          }
                        ]
                      },
                      {
                        "id": "<string>",
                        "device": "<string>",
                        "model": "<string>",
                        "revision": "<string>",
                        "serialNumber": "<string>",
                        "sizeMegabytes": "<long>",
                        "smartStatus": "<string>",
                        "type": "<string>",
                        "partitions": [
                          {
                            "name": "<string>",
                            "sizeMegabytes": "<long>",
                            "availableMegabytes": "<long>",
                            "partitionType": "RECOVERY",
                            "percentUsed": "<integer>",
                            "fileVault2State": "DECRYPTED",
                            "fileVault2ProgressPercent": "<integer>",
                            "lvmManaged": "<boolean>"
                          },
                          {
                            "name": "<string>",
                            "sizeMegabytes": "<long>",
                            "availableMegabytes": "<long>",
                            "partitionType": "OTHER",
                            "percentUsed": "<integer>",
                            "fileVault2State": "ENCRYPTED",
                            "fileVault2ProgressPercent": "<integer>",
                            "lvmManaged": "<boolean>"
                          }
                        ]
                      }
                    ]
                  },
                  "userAndLocation": {
                    "username": "<string>",
                    "realname": "<string>",
                    "email": "<string>",
                    "position": "<string>",
                    "phone": "<string>",
                    "departmentId": "<string>",
                    "buildingId": "<string>",
                    "room": "<string>",
                    "extensionAttributes": [
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "DATE_TIME",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "LDAP"
                      },
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "INTEGER",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "TEXT"
                      }
                    ]
                  },
                  "configurationProfiles": [
                    {
                      "id": "<string>",
                      "username": "<string>",
                      "lastInstalled": "<dateTime>",
                      "removable": "<boolean>",
                      "displayName": "<string>",
                      "profileIdentifier": "<string>"
                    },
                    {
                      "id": "<string>",
                      "username": "<string>",
                      "lastInstalled": "<dateTime>",
                      "removable": "<boolean>",
                      "displayName": "<string>",
                      "profileIdentifier": "<string>"
                    }
                  ],
                  "printers": [
                    {
                      "name": "<string>",
                      "type": "<string>",
                      "uri": "<string>",
                      "location": "<string>"
                    },
                    {
                      "name": "<string>",
                      "type": "<string>",
                      "uri": "<string>",
                      "location": "<string>"
                    }
                  ],
                  "services": [
                    {
                      "name": "<string>"
                    },
                    {
                      "name": "<string>"
                    }
                  ],
                  "hardware": {
                    "make": "<string>",
                    "model": "<string>",
                    "modelIdentifier": "<string>",
                    "serialNumber": "<string>",
                    "processorSpeedMhz": "<long>",
                    "processorCount": "<integer>",
                    "coreCount": "<integer>",
                    "processorType": "<string>",
                    "processorArchitecture": "<string>",
                    "busSpeedMhz": "<long>",
                    "cacheSizeKilobytes": "<long>",
                    "networkAdapterType": "<string>",
                    "macAddress": "<string>",
                    "altNetworkAdapterType": "<string>",
                    "altMacAddress": "<string>",
                    "totalRamMegabytes": "<long>",
                    "openRamSlots": "<integer>",
                    "batteryCapacityPercent": "<integer>",
                    "smcVersion": "<string>",
                    "nicSpeed": "<string>",
                    "opticalDrive": "<string>",
                    "bootRom": "<string>",
                    "bleCapable": "<boolean>",
                    "supportsIosAppInstalls": "<boolean>",
                    "appleSilicon": "<boolean>",
                    "extensionAttributes": [
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "STRING",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "POPUP"
                      },
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "INTEGER",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "POPUP"
                      }
                    ]
                  },
                  "localUserAccounts": [
                    {
                      "uid": "<string>",
                      "userGuid": "<string>",
                      "username": "<string>",
                      "fullName": "<string>",
                      "admin": "<boolean>",
                      "homeDirectory": "<string>",
                      "homeDirectorySizeMb": "<long>",
                      "fileVault2Enabled": "<boolean>",
                      "userAccountType": "LOCAL",
                      "passwordMinLength": "<integer>",
                      "passwordMaxAge": "<integer>",
                      "passwordMinComplexCharacters": "<integer>",
                      "passwordHistoryDepth": "<integer>",
                      "passwordRequireAlphanumeric": "<boolean>",
                      "computerAzureActiveDirectoryId": "<string>",
                      "userAzureActiveDirectoryId": "<string>",
                      "azureActiveDirectoryId": "UNRESPONSIVE"
                    },
                    {
                      "uid": "<string>",
                      "userGuid": "<string>",
                      "username": "<string>",
                      "fullName": "<string>",
                      "admin": "<boolean>",
                      "homeDirectory": "<string>",
                      "homeDirectorySizeMb": "<long>",
                      "fileVault2Enabled": "<boolean>",
                      "userAccountType": "UNKNOWN",
                      "passwordMinLength": "<integer>",
                      "passwordMaxAge": "<integer>",
                      "passwordMinComplexCharacters": "<integer>",
                      "passwordHistoryDepth": "<integer>",
                      "passwordRequireAlphanumeric": "<boolean>",
                      "computerAzureActiveDirectoryId": "<string>",
                      "userAzureActiveDirectoryId": "<string>",
                      "azureActiveDirectoryId": "DEACTIVATED"
                    }
                  ],
                  "certificates": [
                    {
                      "commonName": "<string>",
                      "identity": "<boolean>",
                      "expirationDate": "<dateTime>",
                      "username": "<string>",
                      "lifecycleStatus": "INACTIVE",
                      "certificateStatus": "ISSUED",
                      "subjectName": "<string>",
                      "serialNumber": "<string>",
                      "sha1Fingerprint": "<string>",
                      "issuedDate": "<string>"
                    },
                    {
                      "commonName": "<string>",
                      "identity": "<boolean>",
                      "expirationDate": "<dateTime>",
                      "username": "<string>",
                      "lifecycleStatus": "ACTIVE",
                      "certificateStatus": "EXPIRED",
                      "subjectName": "<string>",
                      "serialNumber": "<string>",
                      "sha1Fingerprint": "<string>",
                      "issuedDate": "<string>"
                    }
                  ],
                  "attachments": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "fileType": "<string>",
                      "sizeBytes": "<long>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "fileType": "<string>",
                      "sizeBytes": "<long>"
                    }
                  ],
                  "plugins": [
                    {
                      "name": "<string>",
                      "version": "<string>",
                      "path": "<string>"
                    },
                    {
                      "name": "<string>",
                      "version": "<string>",
                      "path": "<string>"
                    }
                  ],
                  "packageReceipts": {
                    "installedByJamfPro": [
                      "<string>",
                      "<string>"
                    ],
                    "installedByInstallerSwu": [
                      "<string>",
                      "<string>"
                    ],
                    "cached": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "fonts": [
                    {
                      "name": "<string>",
                      "version": "<string>",
                      "path": "<string>"
                    },
                    {
                      "name": "<string>",
                      "version": "<string>",
                      "path": "<string>"
                    }
                  ],
                  "security": {
                    "sipStatus": "NOT_AVAILABLE",
                    "gatekeeperStatus": "APP_STORE_AND_IDENTIFIED_DEVELOPERS",
                    "xprotectVersion": "<string>",
                    "autoLoginDisabled": "<boolean>",
                    "remoteDesktopEnabled": "<boolean>",
                    "activationLockEnabled": "<boolean>",
                    "recoveryLockEnabled": "<boolean>",
                    "firewallEnabled": "<boolean>",
                    "secureBootLevel": "MEDIUM_SECURITY",
                    "externalBootLevel": "NOT_SUPPORTED",
                    "bootstrapTokenAllowed": "<boolean>",
                    "bootstrapTokenEscrowedStatus": "NOT_SUPPORTED"
                  },
                  "operatingSystem": {
                    "name": "<string>",
                    "version": "<string>",
                    "build": "<string>",
                    "supplementalBuildVersion": "<string>",
                    "rapidSecurityResponse": "<string>",
                    "activeDirectoryStatus": "<string>",
                    "fileVault2Status": "BOOT_ENCRYPTED",
                    "softwareUpdateDeviceId": "<string>",
                    "extensionAttributes": [
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "STRING",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "LDAP"
                      },
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "INTEGER",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "POPUP"
                      }
                    ]
                  },
                  "licensedSoftware": [
                    {
                      "id": "<string>",
                      "name": "<string>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>"
                    }
                  ],
                  "ibeacons": [
                    {
                      "name": "<string>"
                    },
                    {
                      "name": "<string>"
                    }
                  ],
                  "softwareUpdates": [
                    {
                      "name": "<string>",
                      "version": "<string>",
                      "packageName": "<string>"
                    },
                    {
                      "name": "<string>",
                      "version": "<string>",
                      "packageName": "<string>"
                    }
                  ],
                  "extensionAttributes": [
                    {
                      "definitionId": "<string>",
                      "name": "<string>",
                      "description": "<string>",
                      "enabled": "<boolean>",
                      "multiValue": "<boolean>",
                      "values": [
                        "<string>",
                        "<string>"
                      ],
                      "dataType": "STRING",
                      "options": [
                        "<string>",
                        "<string>"
                      ],
                      "inputType": "POPUP"
                    },
                    {
                      "definitionId": "<string>",
                      "name": "<string>",
                      "description": "<string>",
                      "enabled": "<boolean>",
                      "multiValue": "<boolean>",
                      "values": [
                        "<string>",
                        "<string>"
                      ],
                      "dataType": "DATE_TIME",
                      "options": [
                        "<string>",
                        "<string>"
                      ],
                      "inputType": "SCRIPT"
                    }
                  ],
                  "contentCaching": {
                    "computerContentCachingInformationId": "<string>",
                    "parents": [
                      {
                        "contentCachingParentId": "<string>",
                        "address": "<string>",
                        "alerts": {
                          "contentCachingParentAlertId": "<string>",
                          "addresses": [
                            "<string>",
                            "<string>"
                          ],
                          "className": "<string>",
                          "postDate": "<dateTime>"
                        },
                        "details": {
                          "contentCachingParentDetailsId": "<string>",
                          "acPower": "<boolean>",
                          "cacheSizeBytes": "<long>",
                          "capabilities": {
                            "contentCachingParentCapabilitiesId": "<string>",
                            "imports": "<boolean>",
                            "namespaces": "<boolean>",
                            "personalContent": "<boolean>",
                            "queryParameters": "<boolean>",
                            "sharedContent": "<boolean>",
                            "prioritization": "<boolean>"
                          },
                          "portable": "<boolean>",
                          "localNetwork": [
                            {
                              "contentCachingParentLocalNetworkId": "<string>",
                              "speed": "<long>",
                              "wired": "<boolean>"
                            },
                            {
                              "contentCachingParentLocalNetworkId": "<string>",
                              "speed": "<long>",
                              "wired": "<boolean>"
                            }
                          ]
                        },
                        "guid": "<string>",
                        "healthy": "<boolean>",
                        "port": "<long>",
                        "version": "<string>"
                      },
                      {
                        "contentCachingParentId": "<string>",
                        "address": "<string>",
                        "alerts": {
                          "contentCachingParentAlertId": "<string>",
                          "addresses": [
                            "<string>",
                            "<string>"
                          ],
                          "className": "<string>",
                          "postDate": "<dateTime>"
                        },
                        "details": {
                          "contentCachingParentDetailsId": "<string>",
                          "acPower": "<boolean>",
                          "cacheSizeBytes": "<long>",
                          "capabilities": {
                            "contentCachingParentCapabilitiesId": "<string>",
                            "imports": "<boolean>",
                            "namespaces": "<boolean>",
                            "personalContent": "<boolean>",
                            "queryParameters": "<boolean>",
                            "sharedContent": "<boolean>",
                            "prioritization": "<boolean>"
                          },
                          "portable": "<boolean>",
                          "localNetwork": [
                            {
                              "contentCachingParentLocalNetworkId": "<string>",
                              "speed": "<long>",
                              "wired": "<boolean>"
                            },
                            {
                              "contentCachingParentLocalNetworkId": "<string>",
                              "speed": "<long>",
                              "wired": "<boolean>"
                            }
                          ]
                        },
                        "guid": "<string>",
                        "healthy": "<boolean>",
                        "port": "<long>",
                        "version": "<string>"
                      }
                    ],
                    "alerts": [
                      {
                        "cacheBytesLimit": "<long>",
                        "className": "<string>",
                        "pathPreventingAccess": "<string>",
                        "postDate": "<dateTime>",
                        "reservedVolumeBytes": "<long>",
                        "resource": "<string>"
                      },
                      {
                        "cacheBytesLimit": "<long>",
                        "className": "<string>",
                        "pathPreventingAccess": "<string>",
                        "postDate": "<dateTime>",
                        "reservedVolumeBytes": "<long>",
                        "resource": "<string>"
                      }
                    ],
                    "activated": "<boolean>",
                    "active": "<boolean>",
                    "actualCacheBytesUsed": "<long>",
                    "cacheDetails": [
                      {
                        "computerContentCachingCacheDetailsId": "<string>",
                        "categoryName": "<string>",
                        "diskSpaceBytesUsed": "<long>"
                      },
                      {
                        "computerContentCachingCacheDetailsId": "<string>",
                        "categoryName": "<string>",
                        "diskSpaceBytesUsed": "<long>"
                      }
                    ],
                    "cacheBytesFree": "<long>",
                    "cacheBytesLimit": "<long>",
                    "cacheStatus": "<string>",
                    "cacheBytesUsed": "<long>",
                    "dataMigrationCompleted": "<boolean>",
                    "dataMigrationProgressPercentage": "<integer>",
                    "dataMigrationError": {
                      "code": "<long>",
                      "domain": "<string>",
                      "userInfo": [
                        {
                          "key": "<string>",
                          "value": "<string>"
                        },
                        {
                          "key": "<string>",
                          "value": "<string>"
                        }
                      ]
                    },
                    "maxCachePressureLast1HourPercentage": "<integer>",
                    "personalCacheBytesFree": "<long>",
                    "personalCacheBytesLimit": "<long>",
                    "personalCacheBytesUsed": "<long>",
                    "port": "<long>",
                    "publicAddress": "<string>",
                    "registrationError": "<string>",
                    "registrationResponseCode": "<long>",
                    "registrationStarted": "<dateTime>",
                    "registrationStatus": "CONTENT_CACHING_FAILED",
                    "restrictedMedia": "<boolean>",
                    "serverGuid": "<string>",
                    "startupStatus": "<string>",
                    "tetheratorStatus": "CONTENT_CACHING_ENABLED",
                    "totalBytesAreSince": "<dateTime>",
                    "totalBytesDropped": "<long>",
                    "totalBytesImported": "<long>",
                    "totalBytesReturnedToChildren": "<long>",
                    "totalBytesReturnedToClients": "<long>",
                    "totalBytesReturnedToPeers": "<long>",
                    "totalBytesStoredFromOrigin": "<long>",
                    "totalBytesStoredFromParents": "<long>",
                    "totalBytesStoredFromPeers": "<long>"
                  },
                  "groupMemberships": [
                    {
                      "groupId": "<string>",
                      "groupName": "<string>",
                      "smartGroup": "<boolean>"
                    },
                    {
                      "groupId": "<string>",
                      "groupName": "<string>",
                      "smartGroup": "<boolean>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_computers-inventory-detail_id"
      },
      "patch": {
        "tags": [
          "v1 > computers-inventory-detail > {id}"
        ],
        "summary": "Update specific fields on a computer",
        "description": "Update specific fields on a computer, then return the updated computer object.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "udid": "<string>",
                  "general": {
                    "name": "<string>",
                    "lastIpAddress": "<string>",
                    "barcode1": "<string>",
                    "barcode2": "<string>",
                    "assetTag": "<string>",
                    "managed": "<boolean>",
                    "siteId": "<string>",
                    "extensionAttributes": [
                      {
                        "definitionId": "<string>",
                        "values": [
                          "<string>",
                          "<string>"
                        ]
                      },
                      {
                        "definitionId": "<string>",
                        "values": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    ]
                  },
                  "purchasing": {
                    "leased": "<boolean>",
                    "purchased": "<boolean>",
                    "poNumber": "<string>",
                    "poDate": "<date>",
                    "vendor": "<string>",
                    "warrantyDate": "<date>",
                    "appleCareId": "<string>",
                    "leaseDate": "<date>",
                    "purchasePrice": "<string>",
                    "lifeExpectancy": "<integer>",
                    "purchasingAccount": "<string>",
                    "purchasingContact": "<string>",
                    "extensionAttributes": [
                      {
                        "definitionId": "<string>",
                        "values": [
                          "<string>",
                          "<string>"
                        ]
                      },
                      {
                        "definitionId": "<string>",
                        "values": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    ]
                  },
                  "userAndLocation": {
                    "username": "<string>",
                    "realname": "<string>",
                    "email": "<string>",
                    "position": "<string>",
                    "phone": "<string>",
                    "departmentId": "<string>",
                    "buildingId": "<string>",
                    "room": "<string>",
                    "extensionAttributes": [
                      {
                        "definitionId": "<string>",
                        "values": [
                          "<string>",
                          "<string>"
                        ]
                      },
                      {
                        "definitionId": "<string>",
                        "values": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    ]
                  },
                  "hardware": {
                    "networkAdapterType": "<string>",
                    "macAddress": "<string>",
                    "altNetworkAdapterType": "<string>",
                    "altMacAddress": "<string>",
                    "extensionAttributes": [
                      {
                        "definitionId": "<string>",
                        "values": [
                          "<string>",
                          "<string>"
                        ]
                      },
                      {
                        "definitionId": "<string>",
                        "values": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    ]
                  },
                  "operatingSystem": {
                    "extensionAttributes": [
                      {
                        "definitionId": "<string>",
                        "values": [
                          "<string>",
                          "<string>"
                        ]
                      },
                      {
                        "definitionId": "<string>",
                        "values": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    ]
                  },
                  "extensionAttributes": [
                    {
                      "definitionId": "<string>",
                      "values": [
                        "<string>",
                        "<string>"
                      ]
                    },
                    {
                      "definitionId": "<string>",
                      "values": [
                        "<string>",
                        "<string>"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of computer record",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "udid": "<string>",
                  "general": {
                    "name": "<string>",
                    "lastIpAddress": "<string>",
                    "lastReportedIp": "<string>",
                    "jamfBinaryVersion": "<string>",
                    "platform": "<string>",
                    "barcode1": "<string>",
                    "barcode2": "<string>",
                    "assetTag": "<string>",
                    "remoteManagement": {
                      "managed": "<boolean>",
                      "managementUsername": "<string>"
                    },
                    "supervised": "<boolean>",
                    "mdmCapable": {
                      "capable": "<boolean>",
                      "capableUsers": [
                        "<string>",
                        "<string>"
                      ]
                    },
                    "reportDate": "<dateTime>",
                    "lastContactTime": "<dateTime>",
                    "lastCloudBackupDate": "<dateTime>",
                    "lastEnrolledDate": "<dateTime>",
                    "mdmProfileExpiration": "<dateTime>",
                    "initialEntryDate": "<date>",
                    "distributionPoint": "<string>",
                    "enrollmentMethod": {
                      "id": "<string>",
                      "objectName": "<string>",
                      "objectType": "<string>"
                    },
                    "site": {
                      "id": "<string>",
                      "name": "<string>"
                    },
                    "itunesStoreAccountActive": "<boolean>",
                    "enrolledViaAutomatedDeviceEnrollment": "<boolean>",
                    "userApprovedMdm": "<boolean>",
                    "declarativeDeviceManagementEnabled": "<boolean>",
                    "extensionAttributes": [
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "INTEGER",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "SCRIPT"
                      },
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "INTEGER",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "LDAP"
                      }
                    ],
                    "managementId": "<string>"
                  },
                  "diskEncryption": {
                    "bootPartitionEncryptionDetails": {
                      "partitionName": "<string>",
                      "partitionFileVault2State": "DECRYPTING",
                      "partitionFileVault2Percent": "<integer>"
                    },
                    "individualRecoveryKeyValidityStatus": "INVALID",
                    "institutionalRecoveryKeyPresent": "<boolean>",
                    "diskEncryptionConfigurationName": "<string>",
                    "fileVault2EnabledUserNames": [
                      "<string>",
                      "<string>"
                    ],
                    "fileVault2EligibilityMessage": "<string>"
                  },
                  "purchasing": {
                    "leased": "<boolean>",
                    "purchased": "<boolean>",
                    "poNumber": "<string>",
                    "poDate": "<date>",
                    "vendor": "<string>",
                    "warrantyDate": "<date>",
                    "appleCareId": "<string>",
                    "leaseDate": "<date>",
                    "purchasePrice": "<string>",
                    "lifeExpectancy": "<integer>",
                    "purchasingAccount": "<string>",
                    "purchasingContact": "<string>",
                    "extensionAttributes": [
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "INTEGER",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "LDAP"
                      },
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "DATE_TIME",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "POPUP"
                      }
                    ]
                  },
                  "applications": [
                    {
                      "name": "<string>",
                      "path": "<string>",
                      "version": "<string>",
                      "macAppStore": "<boolean>",
                      "sizeMegabytes": "<integer>",
                      "bundleId": "<string>",
                      "updateAvailable": "<boolean>",
                      "externalVersionId": "<string>"
                    },
                    {
                      "name": "<string>",
                      "path": "<string>",
                      "version": "<string>",
                      "macAppStore": "<boolean>",
                      "sizeMegabytes": "<integer>",
                      "bundleId": "<string>",
                      "updateAvailable": "<boolean>",
                      "externalVersionId": "<string>"
                    }
                  ],
                  "storage": {
                    "bootDriveAvailableSpaceMegabytes": "<long>",
                    "disks": [
                      {
                        "id": "<string>",
                        "device": "<string>",
                        "model": "<string>",
                        "revision": "<string>",
                        "serialNumber": "<string>",
                        "sizeMegabytes": "<long>",
                        "smartStatus": "<string>",
                        "type": "<string>",
                        "partitions": [
                          {
                            "name": "<string>",
                            "sizeMegabytes": "<long>",
                            "availableMegabytes": "<long>",
                            "partitionType": "BOOT",
                            "percentUsed": "<integer>",
                            "fileVault2State": "ENCRYPTING_PAUSED",
                            "fileVault2ProgressPercent": "<integer>",
                            "lvmManaged": "<boolean>"
                          },
                          {
                            "name": "<string>",
                            "sizeMegabytes": "<long>",
                            "availableMegabytes": "<long>",
                            "partitionType": "OTHER",
                            "percentUsed": "<integer>",
                            "fileVault2State": "INELIGIBLE",
                            "fileVault2ProgressPercent": "<integer>",
                            "lvmManaged": "<boolean>"
                          }
                        ]
                      },
                      {
                        "id": "<string>",
                        "device": "<string>",
                        "model": "<string>",
                        "revision": "<string>",
                        "serialNumber": "<string>",
                        "sizeMegabytes": "<long>",
                        "smartStatus": "<string>",
                        "type": "<string>",
                        "partitions": [
                          {
                            "name": "<string>",
                            "sizeMegabytes": "<long>",
                            "availableMegabytes": "<long>",
                            "partitionType": "RECOVERY",
                            "percentUsed": "<integer>",
                            "fileVault2State": "DECRYPTED",
                            "fileVault2ProgressPercent": "<integer>",
                            "lvmManaged": "<boolean>"
                          },
                          {
                            "name": "<string>",
                            "sizeMegabytes": "<long>",
                            "availableMegabytes": "<long>",
                            "partitionType": "OTHER",
                            "percentUsed": "<integer>",
                            "fileVault2State": "ENCRYPTED",
                            "fileVault2ProgressPercent": "<integer>",
                            "lvmManaged": "<boolean>"
                          }
                        ]
                      }
                    ]
                  },
                  "userAndLocation": {
                    "username": "<string>",
                    "realname": "<string>",
                    "email": "<string>",
                    "position": "<string>",
                    "phone": "<string>",
                    "departmentId": "<string>",
                    "buildingId": "<string>",
                    "room": "<string>",
                    "extensionAttributes": [
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "DATE_TIME",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "LDAP"
                      },
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "INTEGER",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "TEXT"
                      }
                    ]
                  },
                  "configurationProfiles": [
                    {
                      "id": "<string>",
                      "username": "<string>",
                      "lastInstalled": "<dateTime>",
                      "removable": "<boolean>",
                      "displayName": "<string>",
                      "profileIdentifier": "<string>"
                    },
                    {
                      "id": "<string>",
                      "username": "<string>",
                      "lastInstalled": "<dateTime>",
                      "removable": "<boolean>",
                      "displayName": "<string>",
                      "profileIdentifier": "<string>"
                    }
                  ],
                  "printers": [
                    {
                      "name": "<string>",
                      "type": "<string>",
                      "uri": "<string>",
                      "location": "<string>"
                    },
                    {
                      "name": "<string>",
                      "type": "<string>",
                      "uri": "<string>",
                      "location": "<string>"
                    }
                  ],
                  "services": [
                    {
                      "name": "<string>"
                    },
                    {
                      "name": "<string>"
                    }
                  ],
                  "hardware": {
                    "make": "<string>",
                    "model": "<string>",
                    "modelIdentifier": "<string>",
                    "serialNumber": "<string>",
                    "processorSpeedMhz": "<long>",
                    "processorCount": "<integer>",
                    "coreCount": "<integer>",
                    "processorType": "<string>",
                    "processorArchitecture": "<string>",
                    "busSpeedMhz": "<long>",
                    "cacheSizeKilobytes": "<long>",
                    "networkAdapterType": "<string>",
                    "macAddress": "<string>",
                    "altNetworkAdapterType": "<string>",
                    "altMacAddress": "<string>",
                    "totalRamMegabytes": "<long>",
                    "openRamSlots": "<integer>",
                    "batteryCapacityPercent": "<integer>",
                    "smcVersion": "<string>",
                    "nicSpeed": "<string>",
                    "opticalDrive": "<string>",
                    "bootRom": "<string>",
                    "bleCapable": "<boolean>",
                    "supportsIosAppInstalls": "<boolean>",
                    "appleSilicon": "<boolean>",
                    "extensionAttributes": [
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "STRING",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "POPUP"
                      },
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "INTEGER",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "POPUP"
                      }
                    ]
                  },
                  "localUserAccounts": [
                    {
                      "uid": "<string>",
                      "userGuid": "<string>",
                      "username": "<string>",
                      "fullName": "<string>",
                      "admin": "<boolean>",
                      "homeDirectory": "<string>",
                      "homeDirectorySizeMb": "<long>",
                      "fileVault2Enabled": "<boolean>",
                      "userAccountType": "LOCAL",
                      "passwordMinLength": "<integer>",
                      "passwordMaxAge": "<integer>",
                      "passwordMinComplexCharacters": "<integer>",
                      "passwordHistoryDepth": "<integer>",
                      "passwordRequireAlphanumeric": "<boolean>",
                      "computerAzureActiveDirectoryId": "<string>",
                      "userAzureActiveDirectoryId": "<string>",
                      "azureActiveDirectoryId": "UNRESPONSIVE"
                    },
                    {
                      "uid": "<string>",
                      "userGuid": "<string>",
                      "username": "<string>",
                      "fullName": "<string>",
                      "admin": "<boolean>",
                      "homeDirectory": "<string>",
                      "homeDirectorySizeMb": "<long>",
                      "fileVault2Enabled": "<boolean>",
                      "userAccountType": "UNKNOWN",
                      "passwordMinLength": "<integer>",
                      "passwordMaxAge": "<integer>",
                      "passwordMinComplexCharacters": "<integer>",
                      "passwordHistoryDepth": "<integer>",
                      "passwordRequireAlphanumeric": "<boolean>",
                      "computerAzureActiveDirectoryId": "<string>",
                      "userAzureActiveDirectoryId": "<string>",
                      "azureActiveDirectoryId": "DEACTIVATED"
                    }
                  ],
                  "certificates": [
                    {
                      "commonName": "<string>",
                      "identity": "<boolean>",
                      "expirationDate": "<dateTime>",
                      "username": "<string>",
                      "lifecycleStatus": "INACTIVE",
                      "certificateStatus": "ISSUED",
                      "subjectName": "<string>",
                      "serialNumber": "<string>",
                      "sha1Fingerprint": "<string>",
                      "issuedDate": "<string>"
                    },
                    {
                      "commonName": "<string>",
                      "identity": "<boolean>",
                      "expirationDate": "<dateTime>",
                      "username": "<string>",
                      "lifecycleStatus": "ACTIVE",
                      "certificateStatus": "EXPIRED",
                      "subjectName": "<string>",
                      "serialNumber": "<string>",
                      "sha1Fingerprint": "<string>",
                      "issuedDate": "<string>"
                    }
                  ],
                  "attachments": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "fileType": "<string>",
                      "sizeBytes": "<long>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "fileType": "<string>",
                      "sizeBytes": "<long>"
                    }
                  ],
                  "plugins": [
                    {
                      "name": "<string>",
                      "version": "<string>",
                      "path": "<string>"
                    },
                    {
                      "name": "<string>",
                      "version": "<string>",
                      "path": "<string>"
                    }
                  ],
                  "packageReceipts": {
                    "installedByJamfPro": [
                      "<string>",
                      "<string>"
                    ],
                    "installedByInstallerSwu": [
                      "<string>",
                      "<string>"
                    ],
                    "cached": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "fonts": [
                    {
                      "name": "<string>",
                      "version": "<string>",
                      "path": "<string>"
                    },
                    {
                      "name": "<string>",
                      "version": "<string>",
                      "path": "<string>"
                    }
                  ],
                  "security": {
                    "sipStatus": "NOT_AVAILABLE",
                    "gatekeeperStatus": "APP_STORE_AND_IDENTIFIED_DEVELOPERS",
                    "xprotectVersion": "<string>",
                    "autoLoginDisabled": "<boolean>",
                    "remoteDesktopEnabled": "<boolean>",
                    "activationLockEnabled": "<boolean>",
                    "recoveryLockEnabled": "<boolean>",
                    "firewallEnabled": "<boolean>",
                    "secureBootLevel": "MEDIUM_SECURITY",
                    "externalBootLevel": "NOT_SUPPORTED",
                    "bootstrapTokenAllowed": "<boolean>",
                    "bootstrapTokenEscrowedStatus": "NOT_SUPPORTED"
                  },
                  "operatingSystem": {
                    "name": "<string>",
                    "version": "<string>",
                    "build": "<string>",
                    "supplementalBuildVersion": "<string>",
                    "rapidSecurityResponse": "<string>",
                    "activeDirectoryStatus": "<string>",
                    "fileVault2Status": "BOOT_ENCRYPTED",
                    "softwareUpdateDeviceId": "<string>",
                    "extensionAttributes": [
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "STRING",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "LDAP"
                      },
                      {
                        "definitionId": "<string>",
                        "name": "<string>",
                        "description": "<string>",
                        "enabled": "<boolean>",
                        "multiValue": "<boolean>",
                        "values": [
                          "<string>",
                          "<string>"
                        ],
                        "dataType": "INTEGER",
                        "options": [
                          "<string>",
                          "<string>"
                        ],
                        "inputType": "POPUP"
                      }
                    ]
                  },
                  "licensedSoftware": [
                    {
                      "id": "<string>",
                      "name": "<string>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>"
                    }
                  ],
                  "ibeacons": [
                    {
                      "name": "<string>"
                    },
                    {
                      "name": "<string>"
                    }
                  ],
                  "softwareUpdates": [
                    {
                      "name": "<string>",
                      "version": "<string>",
                      "packageName": "<string>"
                    },
                    {
                      "name": "<string>",
                      "version": "<string>",
                      "packageName": "<string>"
                    }
                  ],
                  "extensionAttributes": [
                    {
                      "definitionId": "<string>",
                      "name": "<string>",
                      "description": "<string>",
                      "enabled": "<boolean>",
                      "multiValue": "<boolean>",
                      "values": [
                        "<string>",
                        "<string>"
                      ],
                      "dataType": "STRING",
                      "options": [
                        "<string>",
                        "<string>"
                      ],
                      "inputType": "POPUP"
                    },
                    {
                      "definitionId": "<string>",
                      "name": "<string>",
                      "description": "<string>",
                      "enabled": "<boolean>",
                      "multiValue": "<boolean>",
                      "values": [
                        "<string>",
                        "<string>"
                      ],
                      "dataType": "DATE_TIME",
                      "options": [
                        "<string>",
                        "<string>"
                      ],
                      "inputType": "SCRIPT"
                    }
                  ],
                  "contentCaching": {
                    "computerContentCachingInformationId": "<string>",
                    "parents": [
                      {
                        "contentCachingParentId": "<string>",
                        "address": "<string>",
                        "alerts": {
                          "contentCachingParentAlertId": "<string>",
                          "addresses": [
                            "<string>",
                            "<string>"
                          ],
                          "className": "<string>",
                          "postDate": "<dateTime>"
                        },
                        "details": {
                          "contentCachingParentDetailsId": "<string>",
                          "acPower": "<boolean>",
                          "cacheSizeBytes": "<long>",
                          "capabilities": {
                            "contentCachingParentCapabilitiesId": "<string>",
                            "imports": "<boolean>",
                            "namespaces": "<boolean>",
                            "personalContent": "<boolean>",
                            "queryParameters": "<boolean>",
                            "sharedContent": "<boolean>",
                            "prioritization": "<boolean>"
                          },
                          "portable": "<boolean>",
                          "localNetwork": [
                            {
                              "contentCachingParentLocalNetworkId": "<string>",
                              "speed": "<long>",
                              "wired": "<boolean>"
                            },
                            {
                              "contentCachingParentLocalNetworkId": "<string>",
                              "speed": "<long>",
                              "wired": "<boolean>"
                            }
                          ]
                        },
                        "guid": "<string>",
                        "healthy": "<boolean>",
                        "port": "<long>",
                        "version": "<string>"
                      },
                      {
                        "contentCachingParentId": "<string>",
                        "address": "<string>",
                        "alerts": {
                          "contentCachingParentAlertId": "<string>",
                          "addresses": [
                            "<string>",
                            "<string>"
                          ],
                          "className": "<string>",
                          "postDate": "<dateTime>"
                        },
                        "details": {
                          "contentCachingParentDetailsId": "<string>",
                          "acPower": "<boolean>",
                          "cacheSizeBytes": "<long>",
                          "capabilities": {
                            "contentCachingParentCapabilitiesId": "<string>",
                            "imports": "<boolean>",
                            "namespaces": "<boolean>",
                            "personalContent": "<boolean>",
                            "queryParameters": "<boolean>",
                            "sharedContent": "<boolean>",
                            "prioritization": "<boolean>"
                          },
                          "portable": "<boolean>",
                          "localNetwork": [
                            {
                              "contentCachingParentLocalNetworkId": "<string>",
                              "speed": "<long>",
                              "wired": "<boolean>"
                            },
                            {
                              "contentCachingParentLocalNetworkId": "<string>",
                              "speed": "<long>",
                              "wired": "<boolean>"
                            }
                          ]
                        },
                        "guid": "<string>",
                        "healthy": "<boolean>",
                        "port": "<long>",
                        "version": "<string>"
                      }
                    ],
                    "alerts": [
                      {
                        "cacheBytesLimit": "<long>",
                        "className": "<string>",
                        "pathPreventingAccess": "<string>",
                        "postDate": "<dateTime>",
                        "reservedVolumeBytes": "<long>",
                        "resource": "<string>"
                      },
                      {
                        "cacheBytesLimit": "<long>",
                        "className": "<string>",
                        "pathPreventingAccess": "<string>",
                        "postDate": "<dateTime>",
                        "reservedVolumeBytes": "<long>",
                        "resource": "<string>"
                      }
                    ],
                    "activated": "<boolean>",
                    "active": "<boolean>",
                    "actualCacheBytesUsed": "<long>",
                    "cacheDetails": [
                      {
                        "computerContentCachingCacheDetailsId": "<string>",
                        "categoryName": "<string>",
                        "diskSpaceBytesUsed": "<long>"
                      },
                      {
                        "computerContentCachingCacheDetailsId": "<string>",
                        "categoryName": "<string>",
                        "diskSpaceBytesUsed": "<long>"
                      }
                    ],
                    "cacheBytesFree": "<long>",
                    "cacheBytesLimit": "<long>",
                    "cacheStatus": "<string>",
                    "cacheBytesUsed": "<long>",
                    "dataMigrationCompleted": "<boolean>",
                    "dataMigrationProgressPercentage": "<integer>",
                    "dataMigrationError": {
                      "code": "<long>",
                      "domain": "<string>",
                      "userInfo": [
                        {
                          "key": "<string>",
                          "value": "<string>"
                        },
                        {
                          "key": "<string>",
                          "value": "<string>"
                        }
                      ]
                    },
                    "maxCachePressureLast1HourPercentage": "<integer>",
                    "personalCacheBytesFree": "<long>",
                    "personalCacheBytesLimit": "<long>",
                    "personalCacheBytesUsed": "<long>",
                    "port": "<long>",
                    "publicAddress": "<string>",
                    "registrationError": "<string>",
                    "registrationResponseCode": "<long>",
                    "registrationStarted": "<dateTime>",
                    "registrationStatus": "CONTENT_CACHING_FAILED",
                    "restrictedMedia": "<boolean>",
                    "serverGuid": "<string>",
                    "startupStatus": "<string>",
                    "tetheratorStatus": "CONTENT_CACHING_ENABLED",
                    "totalBytesAreSince": "<dateTime>",
                    "totalBytesDropped": "<long>",
                    "totalBytesImported": "<long>",
                    "totalBytesReturnedToChildren": "<long>",
                    "totalBytesReturnedToClients": "<long>",
                    "totalBytesReturnedToPeers": "<long>",
                    "totalBytesStoredFromOrigin": "<long>",
                    "totalBytesStoredFromParents": "<long>",
                    "totalBytesStoredFromPeers": "<long>"
                  },
                  "groupMemberships": [
                    {
                      "groupId": "<string>",
                      "groupName": "<string>",
                      "smartGroup": "<boolean>"
                    },
                    {
                      "groupId": "<string>",
                      "groupName": "<string>",
                      "smartGroup": "<boolean>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "patch_v1_computers-inventory-detail_id"
      }
    },
    "/v1/computer-inventory-collection-settings/custom-path/{id}": {
      "delete": {
        "tags": [
          "v1 > computer-inventory-collection-settings > custom-path > {id}"
        ],
        "summary": "Delete Custom Path from Computer Inventory Collection Settings",
        "description": "Delete Custom Path from Computer Inventory Collection Settings",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) id of Custom Path",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_computer-inventory-collection-settings_custom-path_id"
      }
    },
    "/v1/computer-inventory-collection-settings/custom-path": {
      "post": {
        "tags": [
          "v1 > computer-inventory-collection-settings > custom-path"
        ],
        "summary": "Create Computer Inventory Collection Settings Custom Path",
        "description": "Creates a custom search path to use when collecting applications, fonts, and plug-ins.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "path": "<string>",
                  "scope": "FONT"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_computer-inventory-collection-settings_custom-path"
      }
    },
    "/v1/computer-inventory-collection-settings": {
      "get": {
        "tags": [
          "v1 > computer-inventory-collection-settings"
        ],
        "summary": "Returns computer inventory settings",
        "description": "Returns computer inventory settings",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "computerInventoryCollectionPreferences": {
                    "monitorApplicationUsage": false,
                    "includeFonts": false,
                    "includePlugins": false,
                    "includePackages": false,
                    "includeSoftwareUpdates": false,
                    "includeSoftwareId": false,
                    "includeAccounts": false,
                    "calculateSizes": false,
                    "includeHiddenAccounts": false,
                    "includePrinters": false,
                    "includeServices": false,
                    "collectSyncedMobileDeviceInfo": false,
                    "updateLdapInfoOnComputerInventorySubmissions": false,
                    "monitorBeacons": false,
                    "allowChangingUserAndLocation": true,
                    "useUnixUserPaths": true,
                    "collectUnmanagedCertificates": true
                  },
                  "applicationPaths": [
                    {
                      "id": "<string>",
                      "path": "<string>"
                    },
                    {
                      "id": "<string>",
                      "path": "<string>"
                    }
                  ],
                  "fontPaths": [
                    {
                      "id": "<string>",
                      "path": "<string>"
                    },
                    {
                      "id": "<string>",
                      "path": "<string>"
                    }
                  ],
                  "pluginPaths": [
                    {
                      "id": "<string>",
                      "path": "<string>"
                    },
                    {
                      "id": "<string>",
                      "path": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_computer-inventory-collection-settings"
      },
      "patch": {
        "tags": [
          "v1 > computer-inventory-collection-settings"
        ],
        "summary": "Update computer inventory settings",
        "description": "Update computer inventory settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "computerInventoryCollectionPreferences": {
                    "monitorApplicationUsage": false,
                    "includeFonts": false,
                    "includePlugins": false,
                    "includePackages": false,
                    "includeSoftwareUpdates": false,
                    "includeSoftwareId": false,
                    "includeAccounts": false,
                    "calculateSizes": false,
                    "includeHiddenAccounts": false,
                    "includePrinters": false,
                    "includeServices": false,
                    "collectSyncedMobileDeviceInfo": false,
                    "updateLdapInfoOnComputerInventorySubmissions": false,
                    "monitorBeacons": false,
                    "allowChangingUserAndLocation": true,
                    "useUnixUserPaths": true,
                    "collectUnmanagedCertificates": true
                  },
                  "applicationPaths": [
                    {
                      "id": "<string>",
                      "path": "<string>"
                    },
                    {
                      "id": "<string>",
                      "path": "<string>"
                    }
                  ],
                  "fontPaths": [
                    {
                      "id": "<string>",
                      "path": "<string>"
                    },
                    {
                      "id": "<string>",
                      "path": "<string>"
                    }
                  ],
                  "pluginPaths": [
                    {
                      "id": "<string>",
                      "path": "<string>"
                    },
                    {
                      "id": "<string>",
                      "path": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "computerInventoryCollectionPreferences": {
                    "monitorApplicationUsage": false,
                    "includeFonts": false,
                    "includePlugins": false,
                    "includePackages": false,
                    "includeSoftwareUpdates": false,
                    "includeSoftwareId": false,
                    "includeAccounts": false,
                    "calculateSizes": false,
                    "includeHiddenAccounts": false,
                    "includePrinters": false,
                    "includeServices": false,
                    "collectSyncedMobileDeviceInfo": false,
                    "updateLdapInfoOnComputerInventorySubmissions": false,
                    "monitorBeacons": false,
                    "allowChangingUserAndLocation": true,
                    "useUnixUserPaths": true,
                    "collectUnmanagedCertificates": true
                  },
                  "applicationPaths": [
                    {
                      "id": "<string>",
                      "path": "<string>"
                    },
                    {
                      "id": "<string>",
                      "path": "<string>"
                    }
                  ],
                  "fontPaths": [
                    {
                      "id": "<string>",
                      "path": "<string>"
                    },
                    {
                      "id": "<string>",
                      "path": "<string>"
                    }
                  ],
                  "pluginPaths": [
                    {
                      "id": "<string>",
                      "path": "<string>"
                    },
                    {
                      "id": "<string>",
                      "path": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "patch_v1_computer-inventory-collection-settings"
      }
    },
    "/v1/computer-prestages/scope": {
      "get": {
        "tags": [
          "v1 > computer-prestages > scope"
        ],
        "summary": "Get all device Scope for all Computer Prestages\n",
        "description": "Get all device scope for all computer prestages",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "serialsByPrestageId": {
                    "ine3": "<integer>"
                  }
                }
              }
            }
          }
        },
        "operationId": "get_v1_computer-prestages_scope"
      }
    },
    "/v1/computer-prestages/{id}/scope": {
      "get": {
        "tags": [
          "v1 > computer-prestages > {id} > scope"
        ],
        "summary": "Get device Scope for a specific Computer Prestage\n",
        "description": "Get device scope for a specific computer prestage",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Computer Prestage identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "prestageId": "<integer>",
                  "assignments": [
                    {
                      "serialNumber": "<string>",
                      "assignmentEpoch": "<integer>",
                      "userAssigned": "<string>"
                    },
                    {
                      "serialNumber": "<string>",
                      "assignmentEpoch": "<integer>",
                      "userAssigned": "<string>"
                    }
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_computer-prestages_id_scope"
      },
      "put": {
        "tags": [
          "v1 > computer-prestages > {id} > scope"
        ],
        "summary": "Replace device Scope for a specific Computer Prestage\n",
        "description": "Replace device scope for a specific computer prestage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "serialNumbers": [
                    "<string>",
                    "<string>"
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Computer Prestage identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "prestageId": "<integer>",
                  "assignments": [
                    {
                      "serialNumber": "<string>",
                      "assignmentEpoch": "<integer>",
                      "userAssigned": "<string>"
                    },
                    {
                      "serialNumber": "<string>",
                      "assignmentEpoch": "<integer>",
                      "userAssigned": "<string>"
                    }
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_computer-prestages_id_scope"
      },
      "post": {
        "tags": [
          "v1 > computer-prestages > {id} > scope"
        ],
        "summary": "Add device Scope for a specific Computer Prestage\n",
        "description": "Add device scope for a specific computer prestage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "serialNumbers": [
                    "<string>",
                    "<string>"
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Computer Prestage identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "prestageId": "<integer>",
                  "assignments": [
                    {
                      "serialNumber": "<string>",
                      "assignmentEpoch": "<integer>",
                      "userAssigned": "<string>"
                    },
                    {
                      "serialNumber": "<string>",
                      "assignmentEpoch": "<integer>",
                      "userAssigned": "<string>"
                    }
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_computer-prestages_id_scope"
      },
      "delete": {
        "tags": [
          "v1 > computer-prestages > {id} > scope"
        ],
        "summary": "Remove device Scope for a specific Computer Prestage\n",
        "description": "Remove device scope for a specific computer prestage",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Computer Prestage identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "prestageId": "<integer>",
                  "assignments": [
                    {
                      "serialNumber": "<string>",
                      "assignmentEpoch": "<integer>",
                      "userAssigned": "<string>"
                    },
                    {
                      "serialNumber": "<string>",
                      "assignmentEpoch": "<integer>",
                      "userAssigned": "<string>"
                    }
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_computer-prestages_id_scope"
      }
    },
    "/v1/conditional-access/device-compliance-information/computer/{deviceId}": {
      "get": {
        "tags": [
          "v1 > conditional-access > device-compliance-information > computer > {deviceId}"
        ],
        "summary": "Get compliance information for a single computer device",
        "description": "Return basic compliance information for the given computer device",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "deviceId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the device the query pertains",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "deviceId": "<string>",
                    "applicable": "<boolean>",
                    "complianceState": "COMPLIANT",
                    "complianceVendor": "<string>",
                    "complianceVendorDeviceInformation": {
                      "deviceIds": [
                        "<string>",
                        "<string>"
                      ]
                    }
                  },
                  {
                    "deviceId": "<string>",
                    "applicable": "<boolean>",
                    "complianceState": "COMPLIANT",
                    "complianceVendor": "<string>",
                    "complianceVendorDeviceInformation": {
                      "deviceIds": [
                        "<string>",
                        "<string>"
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v1_conditional-access_device-compliance-information_computer_deviceId"
      }
    },
    "/v1/conditional-access/device-compliance-information/mobile/{deviceId}": {
      "get": {
        "tags": [
          "v1 > conditional-access > device-compliance-information > mobile > {deviceId}"
        ],
        "summary": "Get compliance information for a single mobile device",
        "description": "Return basic compliance information for the given mobile device",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "deviceId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the device the query pertains",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "deviceId": "<string>",
                    "applicable": "<boolean>",
                    "complianceState": "COMPLIANT",
                    "complianceVendor": "<string>",
                    "complianceVendorDeviceInformation": {
                      "deviceIds": [
                        "<string>",
                        "<string>"
                      ]
                    }
                  },
                  {
                    "deviceId": "<string>",
                    "applicable": "<boolean>",
                    "complianceState": "COMPLIANT",
                    "complianceVendor": "<string>",
                    "complianceVendorDeviceInformation": {
                      "deviceIds": [
                        "<string>",
                        "<string>"
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v1_conditional-access_device-compliance-information_mobile_deviceId"
      }
    },
    "/v1/conditional-access/device-compliance/feature-toggle": {
      "get": {
        "tags": [
          "v1 > conditional-access > device-compliance > feature-toggle"
        ],
        "summary": "Retrieves Status of the Feature Toggle",
        "description": "Retrieves Status of the Feature Toggle",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "sharedDeviceFeatureEnabled": "<boolean>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_conditional-access_device-compliance_feature-toggle"
      }
    },
    "/v1/csa/tenant-id": {
      "get": {
        "tags": [
          "v1 > csa > tenant-id"
        ],
        "summary": "Returns the CSA tenant ID.",
        "description": "Returns the CSA tenant ID.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "tenantId": "<string>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_csa_tenant-id"
      }
    },
    "/v1/csa/token": {
      "get": {
        "tags": [
          "v1 > csa > token"
        ],
        "summary": "Get details regarding the CSA token exchange\n",
        "description": "Get details regarding the CSA token exchange\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "tenantId": "<string>",
                  "subject": "<string>",
                  "refreshExpiration": "<integer>",
                  "scopes": [
                    "<string>",
                    "<string>"
                  ],
                  "legacyJamfSalesforceIds": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_csa_token"
      },
      "delete": {
        "tags": [
          "v1 > csa > token"
        ],
        "summary": "Delete the CSA token exchange - This will disable Jamf Pro's ability to authenticate with cloud-hosted services\n",
        "description": "Delete the CSA token exchange - This will disable Jamf Pro's ability to authenticate with cloud-hosted services\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_csa_token"
      }
    },
    "/v1/dashboard": {
      "get": {
        "tags": [
          "v1 > dashboard"
        ],
        "summary": "Get all the dashboard setup information\n",
        "description": "Get all the dashboard information for widgets and setup tasks\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "setupTaskOptions": {
                    "setupTask": "TYPE_SMTP_SERVER_SETUP_TASK"
                  },
                  "featureOptions": {
                    "feature": "TYPE_MOBILE_DEVICE_GROUP",
                    "ipsum_5": [
                      {
                        "id": "<string>",
                        "title": "<string>",
                        "subtitle": "<string>",
                        "info": "<string>",
                        "enabled": true,
                        "metrics": [
                          {
                            "value": "<string>",
                            "enabled": true,
                            "tag": "Remaining"
                          },
                          {
                            "value": "<string>",
                            "enabled": true,
                            "tag": "Active"
                          }
                        ],
                        "details": [
                          {
                            "label": "<string>",
                            "value": "<string>"
                          },
                          {
                            "label": "<string>",
                            "value": "<string>"
                          }
                        ],
                        "error": {
                          "httpStatusCode": 500,
                          "id": "",
                          "description": ""
                        }
                      },
                      {
                        "id": "<string>",
                        "title": "<string>",
                        "subtitle": "<string>",
                        "info": "<string>",
                        "enabled": true,
                        "metrics": [
                          {
                            "value": "<string>",
                            "enabled": true,
                            "tag": "N/A"
                          },
                          {
                            "value": "<string>",
                            "enabled": true,
                            "tag": "Remaining"
                          }
                        ],
                        "details": [
                          {
                            "label": "<string>",
                            "value": "<string>"
                          },
                          {
                            "label": "<string>",
                            "value": "<string>"
                          }
                        ],
                        "error": {
                          "httpStatusCode": 500,
                          "id": "",
                          "description": ""
                        }
                      }
                    ],
                    "id__9": [
                      {
                        "id": "<string>",
                        "title": "<string>",
                        "subtitle": "<string>",
                        "info": "<string>",
                        "enabled": true,
                        "metrics": [
                          {
                            "value": "<string>",
                            "enabled": true,
                            "tag": "Computers"
                          },
                          {
                            "value": "<string>",
                            "enabled": true,
                            "tag": "No Licenses"
                          }
                        ],
                        "details": [
                          {
                            "label": "<string>",
                            "value": "<string>"
                          },
                          {
                            "label": "<string>",
                            "value": "<string>"
                          }
                        ],
                        "error": {
                          "httpStatusCode": 500,
                          "id": "",
                          "description": ""
                        }
                      },
                      {
                        "id": "<string>",
                        "title": "<string>",
                        "subtitle": "<string>",
                        "info": "<string>",
                        "enabled": true,
                        "metrics": [
                          {
                            "value": "<string>",
                            "enabled": true,
                            "tag": "Remaining"
                          },
                          {
                            "value": "<string>",
                            "enabled": true,
                            "tag": "In Use"
                          }
                        ],
                        "details": [
                          {
                            "label": "<string>",
                            "value": "<string>"
                          },
                          {
                            "label": "<string>",
                            "value": "<string>"
                          }
                        ],
                        "error": {
                          "httpStatusCode": 500,
                          "id": "",
                          "description": ""
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "field": "<string>",
                  "code": "<string>",
                  "description": "<string>",
                  "id": "<string>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_dashboard"
      }
    },
    "/v1/ddm/{clientManagementId}/status-items/{key}": {
      "get": {
        "tags": [
          "v1 > ddm > {clientManagementId} > status-items > {key}"
        ],
        "summary": "Retrieve a Status Item from the latest Status Report for a device",
        "description": "Retrieves a Status Item from the latest Status Report for a device",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "clientManagementId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) client management id of the target device.",
            "example": "<string>"
          },
          {
            "name": "key",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) the status item key to retrieve.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "key": "<string>",
                  "value": "<string>",
                  "lastUpdateTime": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_ddm_clientManagementId_status-items_key"
      }
    },
    "/v1/ddm/{clientManagementId}/status-items": {
      "get": {
        "tags": [
          "v1 > ddm > {clientManagementId} > status-items"
        ],
        "summary": "Retrieve the Status Items from the latest Status Report for a device",
        "description": "Retrieves the Status Items from the latest Status Report for a device",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "clientManagementId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) client management id of the target device.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_ddm_clientManagementId_status-items"
      }
    },
    "/v1/ddm/{clientManagementId}/sync": {
      "post": {
        "tags": [
          "v1 > ddm > {clientManagementId} > sync"
        ],
        "summary": "Force a device DDM sync",
        "description": "Force a device to sync by queuing a new DeclarativeManagementCommand",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "clientManagementId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) The client management id of the target device.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_ddm_clientManagementId_sync"
      }
    },
    "/v1/departments/delete-multiple": {
      "post": {
        "tags": [
          "v1 > departments > delete-multiple"
        ],
        "summary": "Deletes all departments by ids passed in body\n",
        "description": "Deletes all departments by ids passed in body\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "ids": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_departments_delete-multiple"
      }
    },
    "/v1/departments/{id}/history": {
      "get": {
        "tags": [
          "v1 > departments > {id} > history"
        ],
        "summary": "Get specified Department history object\n",
        "description": "Gets specified Department history object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "date:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of department history record",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_departments_id_history"
      },
      "post": {
        "tags": [
          "v1 > departments > {id} > history"
        ],
        "summary": "Add specified Department history object notes\n",
        "description": "Adds specified Department history object notes\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of department history record",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_departments_id_history"
      }
    },
    "/v1/departments/{id}": {
      "get": {
        "tags": [
          "v1 > departments > {id}"
        ],
        "summary": "Get specified Department object\n",
        "description": "Gets specified Department object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of department record",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "<string>",
                  "id": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_departments_id"
      },
      "put": {
        "tags": [
          "v1 > departments > {id}"
        ],
        "summary": "Update specified department object\n",
        "description": "Update specified department object\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of department record",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "<string>",
                  "id": "<string>"
                }
              }
            }
          }
        },
        "operationId": "put_v1_departments_id"
      },
      "delete": {
        "tags": [
          "v1 > departments > {id}"
        ],
        "summary": "Remove specified department record\n",
        "description": "Removes specified department record\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of department record",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v1_departments_id"
      }
    },
    "/v1/departments": {
      "get": {
        "tags": [
          "v1 > departments"
        ],
        "summary": "Search for Departments\n",
        "description": "Search for Departments\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "id:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter department collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name. Example: name==\"*department*\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "name": "<string>",
                      "id": "<string>"
                    },
                    {
                      "name": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_departments"
      },
      "post": {
        "tags": [
          "v1 > departments"
        ],
        "summary": "Create department record\n",
        "description": "Create department record\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          }
        },
        "operationId": "post_v1_departments"
      }
    },
    "/v1/device-communication-settings/history": {
      "get": {
        "tags": [
          "v1 > device-communication-settings > history"
        ],
        "summary": "Get Device Communication settings history\n",
        "description": "Gets Device Communication settings history\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "date:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_device-communication-settings_history"
      },
      "post": {
        "tags": [
          "v1 > device-communication-settings > history"
        ],
        "summary": "Add Device Communication Settings history notes\n",
        "description": "Adds Device Communication Settings history notes\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<integer>",
                  "username": "<string>",
                  "date": "<string>",
                  "note": "<string>",
                  "details": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_device-communication-settings_history"
      }
    },
    "/v1/device-communication-settings": {
      "get": {
        "tags": [
          "v1 > device-communication-settings"
        ],
        "summary": "Retrieves all settings for device communication\n",
        "description": "Retrieves all device communication settings, including automatic renewal of the MDM profile.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "autoRenewMobileDeviceMdmProfileWhenCaRenewed": "<boolean>",
                  "autoRenewMobileDeviceMdmProfileWhenDeviceIdentityCertExpiring": "<boolean>",
                  "autoRenewComputerMdmProfileWhenCaRenewed": "<boolean>",
                  "autoRenewComputerMdmProfileWhenDeviceIdentityCertExpiring": "<boolean>",
                  "mdmProfileMobileDeviceExpirationLimitInDays": 180,
                  "mdmProfileComputerExpirationLimitInDays": 180
                }
              }
            }
          }
        },
        "operationId": "get_v1_device-communication-settings"
      },
      "put": {
        "tags": [
          "v1 > device-communication-settings"
        ],
        "summary": "Update device communication settings\n",
        "description": "Update device communication settings\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "autoRenewMobileDeviceMdmProfileWhenCaRenewed": "<boolean>",
                  "autoRenewMobileDeviceMdmProfileWhenDeviceIdentityCertExpiring": "<boolean>",
                  "autoRenewComputerMdmProfileWhenCaRenewed": "<boolean>",
                  "autoRenewComputerMdmProfileWhenDeviceIdentityCertExpiring": "<boolean>",
                  "mdmProfileMobileDeviceExpirationLimitInDays": 180,
                  "mdmProfileComputerExpirationLimitInDays": 180
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "autoRenewMobileDeviceMdmProfileWhenCaRenewed": "<boolean>",
                  "autoRenewMobileDeviceMdmProfileWhenDeviceIdentityCertExpiring": "<boolean>",
                  "autoRenewComputerMdmProfileWhenCaRenewed": "<boolean>",
                  "autoRenewComputerMdmProfileWhenDeviceIdentityCertExpiring": "<boolean>",
                  "mdmProfileMobileDeviceExpirationLimitInDays": 180,
                  "mdmProfileComputerExpirationLimitInDays": 180
                }
              }
            }
          }
        },
        "operationId": "put_v1_device-communication-settings"
      }
    },
    "/v1/device-enrollments/public-key": {
      "get": {
        "tags": [
          "v1 > device-enrollments > public-key"
        ],
        "summary": "Retrieve the Jamf Pro Device Enrollment public key\n",
        "description": "Retrieve the Jamf Pro device enrollment public key",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/x-pem-file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/x-pem-file"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<binary>"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "get_v1_device-enrollments_public-key"
      }
    },
    "/v1/device-enrollments/syncs": {
      "get": {
        "tags": [
          "v1 > device-enrollments > syncs"
        ],
        "summary": "Get all instance sync states for all Device Enrollment Instances\n",
        "description": "Get all instance sync states for all instances",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "syncState": "<string>",
                    "instanceId": "<string>",
                    "timestamp": "<string>"
                  },
                  {
                    "syncState": "<string>",
                    "instanceId": "<string>",
                    "timestamp": "<string>"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v1_device-enrollments_syncs"
      }
    },
    "/v1/device-enrollments/upload-token": {
      "post": {
        "tags": [
          "v1 > device-enrollments > upload-token"
        ],
        "summary": "Create a Device Enrollment Instance with the supplied Token\n",
        "description": "Creates a device enrollment instance with the supplied token.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "tokenFileName": "<string>",
                  "encodedToken": "h4YinVIq"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_device-enrollments_upload-token"
      }
    },
    "/v1/device-enrollments/{id}/disown": {
      "post": {
        "tags": [
          "v1 > device-enrollments > {id} > disown"
        ],
        "summary": "Disown devices from the given Device Enrollment Instance\n",
        "description": "Disowns devices from the given device enrollment instance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "devices": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Device Enrollment Instance identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "devices": {
                    "aliquip9": "<string>",
                    "Duis_c4": "<string>",
                    "aute_fc": "<string>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "post_v1_device-enrollments_id_disown"
      }
    },
    "/v1/device-enrollments/{id}/history": {
      "get": {
        "tags": [
          "v1 > device-enrollments > {id} > history"
        ],
        "summary": "Get sorted and paged Device Enrollment history objects\n",
        "description": "Gets sorted and paged device enrollment history objects",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc",
            "example": "date:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default search is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: search=username!=admin and details==*disabled* and date<2019-12-15"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Device Enrollment Instance identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_device-enrollments_id_history"
      },
      "post": {
        "tags": [
          "v1 > device-enrollments > {id} > history"
        ],
        "summary": "Add Device Enrollment history object notes\n",
        "description": "Adds device enrollment history object notes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Device Enrollment Instance identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_device-enrollments_id_history"
      }
    },
    "/v1/device-enrollments/{id}/syncs/latest": {
      "get": {
        "tags": [
          "v1 > device-enrollments > {id} > syncs > latest"
        ],
        "summary": "Get the latest sync state for a single Device Enrollment Instance\n",
        "description": "Get the latest sync state for a single instance",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Device Enrollment Instance identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "syncState": "<string>",
                  "instanceId": "<string>",
                  "timestamp": "<string>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_device-enrollments_id_syncs_latest"
      }
    },
    "/v1/device-enrollments/{id}/syncs": {
      "get": {
        "tags": [
          "v1 > device-enrollments > {id} > syncs"
        ],
        "summary": "Get all instance sync states for a single Device Enrollment Instance\n",
        "description": "Get all instance sync states for a single instance",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Device Enrollment Instance identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "syncState": "<string>",
                    "instanceId": "<string>",
                    "timestamp": "<string>"
                  },
                  {
                    "syncState": "<string>",
                    "instanceId": "<string>",
                    "timestamp": "<string>"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v1_device-enrollments_id_syncs"
      }
    },
    "/v1/device-enrollments/{id}/upload-token": {
      "put": {
        "tags": [
          "v1 > device-enrollments > {id} > upload-token"
        ],
        "summary": "Update a Device Enrollment Instance with the supplied Token\n",
        "description": "Updates a device enrollment instance with the supplied token.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "tokenFileName": "<string>",
                  "encodedToken": "h4YinVIq"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Device Enrollment Instance identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "<string>",
                  "id": "<string>",
                  "supervisionIdentityId": "<string>",
                  "siteId": "<string>",
                  "serverName": "<string>",
                  "serverUuid": "<string>",
                  "adminId": "<string>",
                  "orgName": "<string>",
                  "orgEmail": "<string>",
                  "orgPhone": "<string>",
                  "orgAddress": "<string>",
                  "tokenExpirationDate": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_device-enrollments_id_upload-token"
      }
    },
    "/v1/device-enrollments/{id}/devices": {
      "get": {
        "tags": [
          "v1 > device-enrollments > {id} > devices"
        ],
        "summary": "Retrieve a list of Devices assigned to the supplied id\n",
        "description": "Retrieves a list of devices assigned to the supplied id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Device Enrollment Instance identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<string>",
                      "deviceEnrollmentProgramInstanceId": "<string>",
                      "prestageId": "<string>",
                      "serialNumber": "<string>",
                      "description": "<string>",
                      "model": "<string>",
                      "color": "<string>",
                      "assetTag": "<string>",
                      "profileStatus": "EMPTY",
                      "syncState": {
                        "id": "<integer>",
                        "serialNumber": "<string>",
                        "profileUUID": "<string>",
                        "syncStatus": "<string>",
                        "failureCount": "<integer>",
                        "timestamp": "<integer>"
                      },
                      "profileAssignTime": "<string>",
                      "profilePushTime": "<string>",
                      "deviceAssignedDate": "<string>"
                    },
                    {
                      "id": "<string>",
                      "deviceEnrollmentProgramInstanceId": "<string>",
                      "prestageId": "<string>",
                      "serialNumber": "<string>",
                      "description": "<string>",
                      "model": "<string>",
                      "color": "<string>",
                      "assetTag": "<string>",
                      "profileStatus": "EMPTY",
                      "syncState": {
                        "id": "<integer>",
                        "serialNumber": "<string>",
                        "profileUUID": "<string>",
                        "syncStatus": "<string>",
                        "failureCount": "<integer>",
                        "timestamp": "<integer>"
                      },
                      "profileAssignTime": "<string>",
                      "profilePushTime": "<string>",
                      "deviceAssignedDate": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_device-enrollments_id_devices"
      }
    },
    "/v1/device-enrollments/{id}": {
      "get": {
        "tags": [
          "v1 > device-enrollments > {id}"
        ],
        "summary": "Retrieve a Device Enrollment Instance with the supplied id\n",
        "description": "Retrieves a Device Enrollment Instance with the supplied id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Device Enrollment Instance identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "<string>",
                  "id": "<string>",
                  "supervisionIdentityId": "<string>",
                  "siteId": "<string>",
                  "serverName": "<string>",
                  "serverUuid": "<string>",
                  "adminId": "<string>",
                  "orgName": "<string>",
                  "orgEmail": "<string>",
                  "orgPhone": "<string>",
                  "orgAddress": "<string>",
                  "tokenExpirationDate": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_device-enrollments_id"
      },
      "put": {
        "tags": [
          "v1 > device-enrollments > {id}"
        ],
        "summary": "Update a Device Enrollment Instance with the supplied id\n",
        "description": "Updates a Device Enrollment Instance with the supplied id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "supervisionIdentityId": "<string>",
                  "siteId": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Device Enrollment Instance identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "<string>",
                  "id": "<string>",
                  "supervisionIdentityId": "<string>",
                  "siteId": "<string>",
                  "serverName": "<string>",
                  "serverUuid": "<string>",
                  "adminId": "<string>",
                  "orgName": "<string>",
                  "orgEmail": "<string>",
                  "orgPhone": "<string>",
                  "orgAddress": "<string>",
                  "tokenExpirationDate": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_device-enrollments_id"
      },
      "delete": {
        "tags": [
          "v1 > device-enrollments > {id}"
        ],
        "summary": "Delete a Device Enrollment Instance with the supplied id\n",
        "description": "Deletes a Device Enrollment Instance with the supplied id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Device Enrollment Instance identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_device-enrollments_id"
      }
    },
    "/v1/device-enrollments": {
      "get": {
        "tags": [
          "v1 > device-enrollments"
        ],
        "summary": "Read all sorted and paged Device Enrollment instances\n",
        "description": "Search for sorted and paged device enrollment instances",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "id:asc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "name": "<string>",
                      "id": "<string>",
                      "supervisionIdentityId": "<string>",
                      "siteId": "<string>",
                      "serverName": "<string>",
                      "serverUuid": "<string>",
                      "adminId": "<string>",
                      "orgName": "<string>",
                      "orgEmail": "<string>",
                      "orgPhone": "<string>",
                      "orgAddress": "<string>",
                      "tokenExpirationDate": "<string>"
                    },
                    {
                      "name": "<string>",
                      "id": "<string>",
                      "supervisionIdentityId": "<string>",
                      "siteId": "<string>",
                      "serverName": "<string>",
                      "serverUuid": "<string>",
                      "adminId": "<string>",
                      "orgName": "<string>",
                      "orgEmail": "<string>",
                      "orgPhone": "<string>",
                      "orgAddress": "<string>",
                      "tokenExpirationDate": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_device-enrollments"
      }
    },
    "/v1/dock-items/{id}": {
      "get": {
        "tags": [
          "v1 > dock-items > {id}"
        ],
        "summary": "Retrieve a full dockItem object\n",
        "description": "Retrieves a full dockItem object",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) DockItem object identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "<string>",
                  "path": "<string>",
                  "type": "APP",
                  "id": "<string>",
                  "contents": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_dock-items_id"
      },
      "put": {
        "tags": [
          "v1 > dock-items > {id}"
        ],
        "summary": "Replace the dockItem at the id with the supplied information\n",
        "description": "Replaces the dockItem at the id with the supplied information",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "path": "<string>",
                  "type": "FILE"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/plain"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) DockItem object identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<string>"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_dock-items_id"
      },
      "delete": {
        "tags": [
          "v1 > dock-items > {id}"
        ],
        "summary": "Delete a DockItem at the specified id\n",
        "description": "Deletes a dockItem at the specified id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) DockItem object identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_dock-items_id"
      }
    },
    "/v1/dock-items": {
      "post": {
        "tags": [
          "v1 > dock-items"
        ],
        "summary": "Create a DockItem\n",
        "description": "Creates a DockItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "path": "<string>",
                  "type": "FILE"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_dock-items"
      }
    },
    "/v1/dss-declarations/{id}": {
      "get": {
        "tags": [
          "v1 > dss-declarations > {id}"
        ],
        "summary": "Retrieve a declaration from DSS",
        "description": "Retrieves a Declaration from DSS",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Declaration Uuid",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_dss-declarations_id"
      }
    },
    "/v1/ebooks/{id}/scope": {
      "get": {
        "tags": [
          "v1 > ebooks > {id} > scope"
        ],
        "summary": "Get specified scope of Ebook object\n",
        "description": "Gets specified scope of Ebook object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of ebook record",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "allComputers": "<boolean>",
                  "allMobileDevices": "<boolean>",
                  "allUsers": "<boolean>",
                  "computerIds": [
                    "<string>",
                    "<string>"
                  ],
                  "computerGroupIds": [
                    "<string>",
                    "<string>"
                  ],
                  "mobileDeviceIds": [
                    "<string>",
                    "<string>"
                  ],
                  "mobileDeviceGroupIds": [
                    "<string>",
                    "<string>"
                  ],
                  "buildingIds": [
                    "<string>",
                    "<string>"
                  ],
                  "departmentIds": [
                    "<string>",
                    "<string>"
                  ],
                  "userIds": [
                    "<string>",
                    "<string>"
                  ],
                  "userGroupIds": [
                    "<string>",
                    "<string>"
                  ],
                  "classroomIds": [
                    "<string>",
                    "<string>"
                  ],
                  "limitations": {
                    "networkSegments": [
                      "<string>",
                      "<string>"
                    ],
                    "users": [
                      {
                        "name": "<string>"
                      },
                      {
                        "name": "<string>"
                      }
                    ],
                    "userGroups": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "exclusions": {
                    "computerIds": [
                      "<string>",
                      "<string>"
                    ],
                    "computerGroupIds": [
                      "<string>",
                      "<string>"
                    ],
                    "mobileDeviceIds": [
                      "<string>",
                      "<string>"
                    ],
                    "mobileDeviceGroupIds": [
                      "<string>",
                      "<string>"
                    ],
                    "buildingIds": [
                      "<string>",
                      "<string>"
                    ],
                    "departmentIds": [
                      "<string>",
                      "<string>"
                    ],
                    "userIds": [
                      "<string>",
                      "<string>"
                    ],
                    "userGroupIds": [
                      "<string>",
                      "<string>"
                    ],
                    "limitations": {
                      "networkSegments": [
                        "<string>",
                        "<string>"
                      ],
                      "users": [
                        {
                          "name": "<string>"
                        },
                        {
                          "name": "<string>"
                        }
                      ],
                      "userGroups": [
                        "<string>",
                        "<string>"
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_ebooks_id_scope"
      }
    },
    "/v1/ebooks/{id}": {
      "get": {
        "tags": [
          "v1 > ebooks > {id}"
        ],
        "summary": "Get specified Ebook object\n",
        "description": "Gets specified Ebook object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of ebook record",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "name": "<string>",
                  "kind": "EPUB",
                  "url": "<string>",
                  "free": "<boolean>",
                  "version": "<string>",
                  "author": "<string>",
                  "deployAsManaged": "<boolean>",
                  "installAutomatically": "<boolean>",
                  "categoryId": "<string>",
                  "siteId": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_ebooks_id"
      }
    },
    "/v1/ebooks": {
      "get": {
        "tags": [
          "v1 > ebooks"
        ],
        "summary": "Get Ebook object\n",
        "description": "Gets ebook object",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "name:asc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "kind": "PDF",
                      "url": "<string>",
                      "free": "<boolean>",
                      "version": "<string>",
                      "author": "<string>",
                      "deployAsManaged": "<boolean>",
                      "installAutomatically": "<boolean>",
                      "categoryId": "<string>",
                      "siteId": "<string>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "kind": "PDF",
                      "url": "<string>",
                      "free": "<boolean>",
                      "version": "<string>",
                      "author": "<string>",
                      "deployAsManaged": "<boolean>",
                      "installAutomatically": "<boolean>",
                      "categoryId": "<string>",
                      "siteId": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_ebooks"
      }
    },
    "/v1/engage/history": {
      "get": {
        "tags": [
          "v1 > engage > history"
        ],
        "summary": "Get Engage settings history\n",
        "description": "Gets Engage settings history\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "date:desc"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default search is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: search=username!=admin and details==*disabled* and date<2019-12-15"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_engage_history"
      },
      "post": {
        "tags": [
          "v1 > engage > history"
        ],
        "summary": "Add Engage settings history notes\n",
        "description": "Adds Engage settings history notes\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<integer>",
                  "username": "<string>",
                  "date": "<string>",
                  "note": "<string>",
                  "details": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_engage_history"
      }
    },
    "/v1/engage": {
      "get": {
        "tags": [
          "v1 > engage"
        ],
        "summary": "Get Engage settings\n",
        "description": "Get Engage settings\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "isEnabled": "<boolean>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_engage"
      },
      "put": {
        "tags": [
          "v1 > engage"
        ],
        "summary": "Update Engage settings\n",
        "description": "Update Engage settings\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "isEnabled": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "isEnabled": "<boolean>"
                }
              }
            }
          }
        },
        "operationId": "put_v1_engage"
      }
    },
    "/v1/adue-session-token-settings": {
      "get": {
        "tags": [
          "v1 > adue-session-token-settings"
        ],
        "summary": "Retrieve the Account Driven User Enrollment Session Token Settings\n",
        "description": "Retrieve the Account Driven User Enrollment Session Token Settings\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "enabled": "<boolean>",
                  "expirationIntervalDays": "<integer>",
                  "expirationIntervalSeconds": "<integer>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_adue-session-token-settings"
      },
      "put": {
        "tags": [
          "v1 > adue-session-token-settings"
        ],
        "summary": "Update Account Driven User Enrollment Session Token Settings.\n",
        "description": "Update the Account Driven User Enrollment Session Token Settings object.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "enabled": "<boolean>",
                  "expirationIntervalDays": "<integer>",
                  "expirationIntervalSeconds": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "enabled": "<boolean>",
                  "expirationIntervalDays": "<integer>",
                  "expirationIntervalSeconds": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_adue-session-token-settings"
      }
    },
    "/v1/enrollment-customization/images": {
      "post": {
        "tags": [
          "v1 > enrollment-customization > images"
        ],
        "summary": "Upload an image",
        "description": "Uploads an image",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "(Required) The file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "multipart/form-data"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "url": "<string>"
                }
              }
            }
          }
        },
        "operationId": "post_v1_enrollment-customization_images"
      }
    },
    "/v1/enrollment-customization/{id}/history": {
      "get": {
        "tags": [
          "v1 > enrollment-customization > {id} > history"
        ],
        "summary": "Get sorted and paged Enrollment Customization history objects\n",
        "description": "Gets sorted and paged enrollment customization history objects",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc",
            "example": "date:desc"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_enrollment-customization_id_history"
      },
      "post": {
        "tags": [
          "v1 > enrollment-customization > {id} > history"
        ],
        "summary": "Add Enrollment Customization history object notes\n",
        "description": "Adds enrollment customization history object notes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<integer>",
                  "username": "<string>",
                  "date": "<string>",
                  "note": "<string>",
                  "details": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_enrollment-customization_id_history"
      }
    },
    "/v1/enrollment-customization/{id}/prestages": {
      "get": {
        "tags": [
          "v1 > enrollment-customization > {id} > prestages"
        ],
        "summary": "Retrieve the list of Prestages using this Enrollment Customization\n",
        "description": "Retrieves the list of Prestages using this Enrollment Customization",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "dependencies": [
                    {
                      "name": "<string>",
                      "humanReadableName": "<string>",
                      "hyperlink": "<string>"
                    },
                    {
                      "name": "<string>",
                      "humanReadableName": "<string>",
                      "hyperlink": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_enrollment-customization_id_prestages"
      }
    },
    "/v1/enrollment-customization/{id}/all/{panel-id}": {
      "get": {
        "tags": [
          "v1 > enrollment-customization > {id} > all > {panel-id}"
        ],
        "summary": "Get a single Panel for a single Enrollment Customization\n",
        "description": "Get a single panel for a single enrollment customization",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<integer>"
          },
          {
            "name": "panel-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Panel object identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "displayName": "<string>",
                  "rank": "<integer>",
                  "id": "<integer>",
                  "type": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_enrollment-customization_id_all_panel-id"
      },
      "delete": {
        "tags": [
          "v1 > enrollment-customization > {id} > all > {panel-id}"
        ],
        "summary": "Delete a single Panel from an Enrollment Customization\n",
        "description": "Delete a single panel from an Enrollment Customization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<integer>"
          },
          {
            "name": "panel-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Panel object identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v1_enrollment-customization_id_all_panel-id"
      }
    },
    "/v1/enrollment-customization/{id}/all": {
      "get": {
        "tags": [
          "v1 > enrollment-customization > {id} > all"
        ],
        "summary": "Get all Panels for single Enrollment Customization\n",
        "description": "Get all panels for single enrollment customization",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "panels": [
                    {
                      "displayName": "<string>",
                      "rank": "<integer>",
                      "id": "<integer>",
                      "type": "<string>"
                    },
                    {
                      "displayName": "<string>",
                      "rank": "<integer>",
                      "id": "<integer>",
                      "type": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_enrollment-customization_id_all"
      }
    },
    "/v1/enrollment-customization/{id}/ldap/{panel-id}": {
      "get": {
        "tags": [
          "v1 > enrollment-customization > {id} > ldap > {panel-id}"
        ],
        "summary": "Get a single LDAP panel for a single Enrollment Customization\n",
        "description": "Get a single LDAP panel for a single enrollment customization",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<integer>"
          },
          {
            "name": "panel-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Panel object identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "backButtonText": "<string>",
                  "continueButtonText": "<string>",
                  "displayName": "<string>",
                  "passwordLabel": "<string>",
                  "rank": "<integer>",
                  "title": "-",
                  "usernameLabel": "<string>",
                  "ldapGroupAccess": [
                    {
                      "ldapServerId": "<integer>",
                      "groupName": "<string>"
                    },
                    {
                      "ldapServerId": "<integer>",
                      "groupName": "<string>"
                    }
                  ],
                  "id": "<integer>",
                  "type": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_enrollment-customization_id_ldap_panel-id"
      },
      "put": {
        "tags": [
          "v1 > enrollment-customization > {id} > ldap > {panel-id}"
        ],
        "summary": "Update a single LDAP Panel for a single Enrollment Customization\n",
        "description": "Update a single LDAP panel for a single enrollment customization. If multiple LDAP access groups are defined with the same name and id, only one will be saved.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "backButtonText": "<string>",
                  "continueButtonText": "<string>",
                  "displayName": "<string>",
                  "passwordLabel": "<string>",
                  "rank": "<integer>",
                  "title": "o",
                  "usernameLabel": "<string>",
                  "ldapGroupAccess": [
                    {
                      "ldapServerId": "<integer>",
                      "groupName": "<string>"
                    },
                    {
                      "ldapServerId": "<integer>",
                      "groupName": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<integer>"
          },
          {
            "name": "panel-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Panel object identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "backButtonText": "<string>",
                  "continueButtonText": "<string>",
                  "displayName": "<string>",
                  "passwordLabel": "<string>",
                  "rank": "<integer>",
                  "title": "-",
                  "usernameLabel": "<string>",
                  "ldapGroupAccess": [
                    {
                      "ldapServerId": "<integer>",
                      "groupName": "<string>"
                    },
                    {
                      "ldapServerId": "<integer>",
                      "groupName": "<string>"
                    }
                  ],
                  "id": "<integer>",
                  "type": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_enrollment-customization_id_ldap_panel-id"
      },
      "delete": {
        "tags": [
          "v1 > enrollment-customization > {id} > ldap > {panel-id}"
        ],
        "summary": "Delete an LDAP single panel from an Enrollment Customization\n",
        "description": "Delete an LDAP single Panel from an Enrollment Customization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<integer>"
          },
          {
            "name": "panel-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Panel object identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v1_enrollment-customization_id_ldap_panel-id"
      }
    },
    "/v1/enrollment-customization/{id}/ldap": {
      "post": {
        "tags": [
          "v1 > enrollment-customization > {id} > ldap"
        ],
        "summary": "Create an LDAP Panel for a single Enrollment Customization\n",
        "description": "Create an LDAP panel for a single enrollment customization. If multiple LDAP access groups are defined with the same name and id, only one will be saved.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "backButtonText": "<string>",
                  "continueButtonText": "<string>",
                  "displayName": "<string>",
                  "passwordLabel": "<string>",
                  "rank": "<integer>",
                  "title": "o",
                  "usernameLabel": "<string>",
                  "ldapGroupAccess": [
                    {
                      "ldapServerId": "<integer>",
                      "groupName": "<string>"
                    },
                    {
                      "ldapServerId": "<integer>",
                      "groupName": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "backButtonText": "<string>",
                  "continueButtonText": "<string>",
                  "displayName": "<string>",
                  "passwordLabel": "<string>",
                  "rank": "<integer>",
                  "title": "-",
                  "usernameLabel": "<string>",
                  "ldapGroupAccess": [
                    {
                      "ldapServerId": "<integer>",
                      "groupName": "<string>"
                    },
                    {
                      "ldapServerId": "<integer>",
                      "groupName": "<string>"
                    }
                  ],
                  "id": "<integer>",
                  "type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_enrollment-customization_id_ldap"
      }
    },
    "/v1/enrollment-customization/{id}/sso/{panel-id}": {
      "get": {
        "tags": [
          "v1 > enrollment-customization > {id} > sso > {panel-id}"
        ],
        "summary": "Get a single SSO Panel for a single Enrollment Customization\n",
        "description": "Get a single SSO panel for a single enrollment customization",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<integer>"
          },
          {
            "name": "panel-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Panel object identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "displayName": "<string>",
                  "groupEnrollmentAccessName": "",
                  "isGroupEnrollmentAccessEnabled": "<boolean>",
                  "isUseJamfConnect": "<boolean>",
                  "longNameAttribute": "<string>",
                  "rank": "<integer>",
                  "shortNameAttribute": "<string>",
                  "id": "<integer>",
                  "type": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_enrollment-customization_id_sso_panel-id"
      },
      "put": {
        "tags": [
          "v1 > enrollment-customization > {id} > sso > {panel-id}"
        ],
        "summary": "Update a single SSO Panel for a single Enrollment Customization\n",
        "description": "Update a single SSO panel for a single enrollment customization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "displayName": "<string>",
                  "groupEnrollmentAccessName": "",
                  "isGroupEnrollmentAccessEnabled": "<boolean>",
                  "isUseJamfConnect": "<boolean>",
                  "longNameAttribute": "<string>",
                  "rank": "<integer>",
                  "shortNameAttribute": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<integer>"
          },
          {
            "name": "panel-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Panel object identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "displayName": "<string>",
                  "groupEnrollmentAccessName": "",
                  "isGroupEnrollmentAccessEnabled": "<boolean>",
                  "isUseJamfConnect": "<boolean>",
                  "longNameAttribute": "<string>",
                  "rank": "<integer>",
                  "shortNameAttribute": "<string>",
                  "id": "<integer>",
                  "type": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_enrollment-customization_id_sso_panel-id"
      },
      "delete": {
        "tags": [
          "v1 > enrollment-customization > {id} > sso > {panel-id}"
        ],
        "summary": "Delete a single SSO Panel from an Enrollment Customization\n",
        "description": "Delete a single SSO panel from an Enrollment Customization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<integer>"
          },
          {
            "name": "panel-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Panel object identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v1_enrollment-customization_id_sso_panel-id"
      }
    },
    "/v1/enrollment-customization/{id}/sso": {
      "post": {
        "tags": [
          "v1 > enrollment-customization > {id} > sso"
        ],
        "summary": "Create an SSO Panel for a single Enrollment Customization\n",
        "description": "Create an SSO panel for a single enrollment customization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "displayName": "<string>",
                  "groupEnrollmentAccessName": "",
                  "isGroupEnrollmentAccessEnabled": "<boolean>",
                  "isUseJamfConnect": "<boolean>",
                  "longNameAttribute": "<string>",
                  "rank": "<integer>",
                  "shortNameAttribute": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "displayName": "<string>",
                  "groupEnrollmentAccessName": "",
                  "isGroupEnrollmentAccessEnabled": "<boolean>",
                  "isUseJamfConnect": "<boolean>",
                  "longNameAttribute": "<string>",
                  "rank": "<integer>",
                  "shortNameAttribute": "<string>",
                  "id": "<integer>",
                  "type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_enrollment-customization_id_sso"
      }
    },
    "/v1/enrollment-customization/{id}/text/{panel-id}/markdown": {
      "get": {
        "tags": [
          "v1 > enrollment-customization > {id} > text > {panel-id} > markdown"
        ],
        "summary": "Get the markdown output of a single Text Panel for a single Enrollment\n",
        "description": "Get the markdown output of a single Text panel for a single enrollment customization",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<integer>"
          },
          {
            "name": "panel-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Panel object identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "markdown": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_enrollment-customization_id_text_panel-id_markdown"
      }
    },
    "/v1/enrollment-customization/{id}/text/{panel-id}": {
      "get": {
        "tags": [
          "v1 > enrollment-customization > {id} > text > {panel-id}"
        ],
        "summary": "Get a single Text Panel for a single Enrollment Customization\n",
        "description": "Get a single Text panel for a single enrollment customization",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<integer>"
          },
          {
            "name": "panel-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Panel object identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "backButtonText": "<string>",
                  "body": "<string>",
                  "continueButtonText": "<string>",
                  "displayName": "<string>",
                  "rank": "<integer>",
                  "title": "<string>",
                  "subtext": "<string>",
                  "id": "<integer>",
                  "type": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_enrollment-customization_id_text_panel-id"
      },
      "put": {
        "tags": [
          "v1 > enrollment-customization > {id} > text > {panel-id}"
        ],
        "summary": "Update a single Text Panel for a single Enrollment Customization\n",
        "description": "Update a single Text panel for a single enrollment customization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "backButtonText": "<string>",
                  "body": "<string>",
                  "continueButtonText": "<string>",
                  "displayName": "<string>",
                  "rank": "<integer>",
                  "title": "<string>",
                  "subtext": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<integer>"
          },
          {
            "name": "panel-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Panel object identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "backButtonText": "<string>",
                  "body": "<string>",
                  "continueButtonText": "<string>",
                  "displayName": "<string>",
                  "rank": "<integer>",
                  "title": "<string>",
                  "subtext": "<string>",
                  "id": "<integer>",
                  "type": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_enrollment-customization_id_text_panel-id"
      },
      "delete": {
        "tags": [
          "v1 > enrollment-customization > {id} > text > {panel-id}"
        ],
        "summary": "Delete a Text single Panel from an Enrollment Customization\n",
        "description": "Delete a Text single panel from an Enrollment Customization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<integer>"
          },
          {
            "name": "panel-id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Panel object identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v1_enrollment-customization_id_text_panel-id"
      }
    },
    "/v1/enrollment-customization/{id}/text": {
      "post": {
        "tags": [
          "v1 > enrollment-customization > {id} > text"
        ],
        "summary": "Create a Text Panel for a single Enrollment Customization\n",
        "description": "Create a Text panel for a single enrollment customization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "backButtonText": "<string>",
                  "body": "<string>",
                  "continueButtonText": "<string>",
                  "displayName": "<string>",
                  "rank": "<integer>",
                  "title": "<string>",
                  "subtext": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "backButtonText": "<string>",
                  "body": "<string>",
                  "continueButtonText": "<string>",
                  "displayName": "<string>",
                  "rank": "<integer>",
                  "title": "<string>",
                  "subtext": "<string>",
                  "id": "<integer>",
                  "type": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_enrollment-customization_id_text"
      }
    },
    "/v1/enrollment-customization/{id}": {
      "get": {
        "tags": [
          "v1 > enrollment-customization > {id}"
        ],
        "summary": "Retrieve an Enrollment Customization with the supplied id\n",
        "description": "Retrieves an Enrollment Customization with the supplied id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "description": "<string>",
                  "displayName": "<string>",
                  "enrollmentCustomizationBrandingSettings": {
                    "backgroundColor": "<string>",
                    "buttonColor": "<string>",
                    "buttonTextColor": "<string>",
                    "iconUrl": "<string>",
                    "textColor": "<string>"
                  },
                  "siteId": "<integer>",
                  "id": "<integer>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_enrollment-customization_id"
      },
      "put": {
        "tags": [
          "v1 > enrollment-customization > {id}"
        ],
        "summary": "Update an Enrollment Customization\n",
        "description": "Updates an Enrollment Customization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "description": "<string>",
                  "displayName": "<string>",
                  "enrollmentCustomizationBrandingSettings": {
                    "backgroundColor": "<string>",
                    "buttonColor": "<string>",
                    "buttonTextColor": "<string>",
                    "iconUrl": "<string>",
                    "textColor": "<string>"
                  },
                  "siteId": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "description": "<string>",
                  "displayName": "<string>",
                  "enrollmentCustomizationBrandingSettings": {
                    "backgroundColor": "<string>",
                    "buttonColor": "<string>",
                    "buttonTextColor": "<string>",
                    "iconUrl": "<string>",
                    "textColor": "<string>"
                  },
                  "siteId": "<integer>",
                  "id": "<integer>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_enrollment-customization_id"
      },
      "delete": {
        "tags": [
          "v1 > enrollment-customization > {id}"
        ],
        "summary": "Delete an Enrollment Customization with the supplied id\n",
        "description": "Deletes an Enrollment Customization with the supplied id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v1_enrollment-customization_id"
      }
    },
    "/v1/enrollment-customization/parse-markdown": {
      "post": {
        "tags": [
          "v1 > enrollment-customization > parse-markdown"
        ],
        "summary": "Parse the given string as markdown text and return Html output\n",
        "description": "Parse the given string as markdown text and return Html output",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "markdown": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "markdown": "<string>"
                }
              }
            }
          }
        },
        "operationId": "post_v1_enrollment-customization_parse-markdown"
      }
    },
    "/v1/enrollment-customization": {
      "get": {
        "tags": [
          "v1 > enrollment-customization"
        ],
        "summary": "Retrieve sorted and paged Enrollment Customizations\n",
        "description": "Retrieves sorted and paged Enrollment Customizations",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "id:asc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "description": "<string>",
                      "displayName": "<string>",
                      "enrollmentCustomizationBrandingSettings": {
                        "backgroundColor": "<string>",
                        "buttonColor": "<string>",
                        "buttonTextColor": "<string>",
                        "iconUrl": "<string>",
                        "textColor": "<string>"
                      },
                      "siteId": "<integer>",
                      "id": "<integer>"
                    },
                    {
                      "description": "<string>",
                      "displayName": "<string>",
                      "enrollmentCustomizationBrandingSettings": {
                        "backgroundColor": "<string>",
                        "buttonColor": "<string>",
                        "buttonTextColor": "<string>",
                        "iconUrl": "<string>",
                        "textColor": "<string>"
                      },
                      "siteId": "<integer>",
                      "id": "<integer>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_enrollment-customization"
      },
      "post": {
        "tags": [
          "v1 > enrollment-customization"
        ],
        "summary": "Create an Enrollment Customization\n",
        "description": "Create an enrollment customization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "description": "<string>",
                  "displayName": "<string>",
                  "enrollmentCustomizationBrandingSettings": {
                    "backgroundColor": "<string>",
                    "buttonColor": "<string>",
                    "buttonTextColor": "<string>",
                    "iconUrl": "<string>",
                    "textColor": "<string>"
                  },
                  "siteId": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "description": "<string>",
                  "displayName": "<string>",
                  "enrollmentCustomizationBrandingSettings": {
                    "backgroundColor": "<string>",
                    "buttonColor": "<string>",
                    "buttonTextColor": "<string>",
                    "iconUrl": "<string>",
                    "textColor": "<string>"
                  },
                  "siteId": "<integer>",
                  "id": "<integer>"
                }
              }
            }
          }
        },
        "operationId": "post_v1_enrollment-customization"
      }
    },
    "/v1/gsx-connection/history": {
      "get": {
        "tags": [
          "v1 > gsx-connection > history"
        ],
        "summary": "Get specified GSX Connection History object\n",
        "description": "Gets specified GSX Connection history object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "date:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<string>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<string>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_gsx-connection_history"
      },
      "post": {
        "tags": [
          "v1 > gsx-connection > history"
        ],
        "summary": "Add specified GSX Connection history object notes\n",
        "description": "Adds specified GSX Connection history object notes\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_gsx-connection_history"
      }
    },
    "/v1/gsx-connection/test": {
      "post": {
        "tags": [
          "v1 > gsx-connection > test"
        ],
        "summary": "Test functionality of an GSX Connection",
        "description": "Test functionality of an GSX Connection",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "message": "<string>",
                  "request": "<string>",
                  "response": "<string>"
                }
              }
            }
          }
        },
        "operationId": "post_v1_gsx-connection_test"
      }
    },
    "/v1/gsx-connection": {
      "get": {
        "tags": [
          "v1 > gsx-connection"
        ],
        "summary": "Finds the Jamf Pro GSX Connection information\n",
        "description": "Finds the Jamf Pro GSX Connection information\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "enabled": false,
                  "gsxKeystore": {
                    "name": " ",
                    "expirationEpoch": "<long>",
                    "errorMessage": "<string>"
                  },
                  "serviceAccountNo": "<string>",
                  "username": " ",
                  "shipToNo": "<string>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_gsx-connection"
      },
      "put": {
        "tags": [
          "v1 > gsx-connection"
        ],
        "summary": "Updates Jamf Pro GSX Connection information\n",
        "description": "Updates Jamf Pro GSX Connection information\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "enabled": false,
                  "gsxKeystore": {
                    "keystorePassword": "<string>",
                    "name": " ",
                    "keystoreBytes": "S1/Nsj=="
                  },
                  "serviceAccountNo": "<string>",
                  "token": "<string>",
                  "username": " ",
                  "shipToNo": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/merge-patch+json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "enabled": false,
                  "gsxKeystore": {
                    "name": " ",
                    "expirationEpoch": "<long>",
                    "errorMessage": "<string>"
                  },
                  "serviceAccountNo": "<string>",
                  "username": " ",
                  "shipToNo": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_gsx-connection"
      },
      "patch": {
        "tags": [
          "v1 > gsx-connection"
        ],
        "summary": "Updates Jamf Pro GSX Connection information\n",
        "description": "Updates Jamf Pro GSX Connection information\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "enabled": false,
                  "username": " ",
                  "serviceAccountNo": "<string>",
                  "shipToNo": "<string>",
                  "token": "<string>",
                  "gsxKeystore": {
                    "keystorePassword": "<string>",
                    "name": " ",
                    "keystoreBytes": "sZeguSijY6ajEM=="
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/merge-patch+json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "enabled": false,
                  "gsxKeystore": {
                    "name": " ",
                    "expirationEpoch": "<long>",
                    "errorMessage": "<string>"
                  },
                  "serviceAccountNo": "<string>",
                  "username": " ",
                  "shipToNo": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "patch_v1_gsx-connection"
      }
    },
    "/v1/health-check": {
      "get": {
        "tags": [
          "v1 > health-check"
        ],
        "summary": "Get Jamf Pro API status",
        "description": "Get Jamf Pro API status. Which response codes might be returned in error states will depend on the specific state encountered.",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "get_v1_health-check"
      }
    },
    "/v1/icon/download/{id}": {
      "get": {
        "tags": [
          "v1 > icon > download > {id}"
        ],
        "summary": "Download a self service icon\n",
        "description": "Download a self service icon",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "image/*"
          },
          {
            "name": "res",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "request a specific resolution of original, 300, or 512; invalid options will result in original resolution",
            "example": "original"
          },
          {
            "name": "scale",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "request a scale; 0 results in original image, non-0 results in scaled to 300",
            "example": "0"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) id of the self service icon",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "image/*"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<binary>"
              }
            }
          }
        },
        "operationId": "get_v1_icon_download_id"
      }
    },
    "/v1/icon/{id}": {
      "get": {
        "tags": [
          "v1 > icon > {id}"
        ],
        "summary": "Get an icon\n",
        "description": "Get an icon",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) id of the icon",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "url": "<string>",
                  "id": "<integer>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_icon_id"
      }
    },
    "/v1/icon": {
      "post": {
        "tags": [
          "v1 > icon"
        ],
        "summary": "Upload an icon\n",
        "description": "Uploads an icon",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "(Required) The file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "multipart/form-data"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "url": "<string>",
                  "id": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_icon"
      }
    },
    "/v1/inventory-information": {
      "get": {
        "tags": [
          "v1 > inventory-information"
        ],
        "summary": "Get statistics about managed/unmanaged devices and computers in the inventory\n",
        "description": "Gets statistics about managed/unmanaged devices and computers in the inventory.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "managedComputers": "<integer>",
                  "unmanagedComputers": "<integer>",
                  "managedDevices": "<integer>",
                  "unmanagedDevices": "<integer>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_inventory-information"
      }
    },
    "/v1/inventory-preload/csv-template": {
      "get": {
        "tags": [
          "v1 > inventory-preload > csv-template"
        ],
        "summary": "Retrieve the Inventory Preload CSV template\n",
        "description": "Retrieves the Inventory Preload CSV template.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/csv"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/csv"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{}"
              }
            }
          }
        },
        "operationId": "get_v1_inventory-preload_csv-template"
      }
    },
    "/v1/inventory-preload/history": {
      "get": {
        "tags": [
          "v1 > inventory-preload > history"
        ],
        "summary": "Get Inventory Preload history entries\n",
        "description": "Gets Inventory Preload history entries.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "date:desc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_inventory-preload_history"
      },
      "post": {
        "tags": [
          "v1 > inventory-preload > history"
        ],
        "summary": "Add Inventory Preload history object notes\n",
        "description": "Adds Inventory Preload history object notes.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<integer>",
                  "username": "<string>",
                  "date": "<string>",
                  "note": "<string>",
                  "details": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_inventory-preload_history"
      }
    },
    "/v1/inventory-preload/validate-csv": {
      "post": {
        "tags": [
          "v1 > inventory-preload > validate-csv"
        ],
        "summary": "Validate a given CSV file\n",
        "description": "Validate a given CSV file.\nSerial number and device type are required. All other fields are optional.\nA CSV template can be downloaded from /api/inventory-preload/csv-template.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {}
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/csv"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "recordCount": "<integer>"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpsStatus": "<integer>",
                  "errors": [
                    {
                      "code": "<string>",
                      "description": "<string>",
                      "field": "<string>",
                      "value": "<string>",
                      "serialNumber": "<string>",
                      "line": "<integer>",
                      "fieldSize": "<integer>",
                      "deviceType": "<string>"
                    },
                    {
                      "code": "<string>",
                      "description": "<string>",
                      "field": "<string>",
                      "value": "<string>",
                      "serialNumber": "<string>",
                      "line": "<integer>",
                      "fieldSize": "<integer>",
                      "deviceType": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_inventory-preload_validate-csv"
      }
    },
    "/v1/inventory-preload/{id}": {
      "get": {
        "tags": [
          "v1 > inventory-preload > {id}"
        ],
        "summary": "Get an Inventory Preload record\n",
        "description": "Retrieves an Inventory Preload record.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Inventory Preload identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "deviceType": "Mobile Device",
                  "serialNumber": "<string>",
                  "id": "<integer>",
                  "username": "<string>",
                  "fullName": "<string>",
                  "emailAddress": "<string>",
                  "phoneNumber": "<string>",
                  "position": "<string>",
                  "department": "<string>",
                  "building": "<string>",
                  "room": "<string>",
                  "poNumber": "<string>",
                  "poDate": "<string>",
                  "warrantyExpiration": "<string>",
                  "appleCareId": "<string>",
                  "lifeExpectancy": "<string>",
                  "purchasePrice": "<string>",
                  "purchasingContact": "<string>",
                  "purchasingAccount": "<string>",
                  "leaseExpiration": "<string>",
                  "barCode1": "<string>",
                  "barCode2": "<string>",
                  "assetTag": "<string>",
                  "vendor": "<string>",
                  "extensionAttributes": [
                    {
                      "name": "<string>",
                      "value": "<string>"
                    },
                    {
                      "name": "<string>",
                      "value": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_inventory-preload_id"
      },
      "put": {
        "tags": [
          "v1 > inventory-preload > {id}"
        ],
        "summary": "Update an Inventory Preload record\n",
        "description": "Updates an Inventory Preload record.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "deviceType": "Computer",
                  "serialNumber": "<string>",
                  "username": "<string>",
                  "fullName": "<string>",
                  "emailAddress": "<string>",
                  "phoneNumber": "<string>",
                  "position": "<string>",
                  "department": "<string>",
                  "building": "<string>",
                  "room": "<string>",
                  "poNumber": "<string>",
                  "poDate": "<string>",
                  "warrantyExpiration": "<string>",
                  "appleCareId": "<string>",
                  "lifeExpectancy": "<string>",
                  "purchasePrice": "<string>",
                  "purchasingContact": "<string>",
                  "purchasingAccount": "<string>",
                  "leaseExpiration": "<string>",
                  "barCode1": "<string>",
                  "barCode2": "<string>",
                  "assetTag": "<string>",
                  "vendor": "<string>",
                  "extensionAttributes": [
                    {
                      "name": "<string>",
                      "value": "<string>"
                    },
                    {
                      "name": "<string>",
                      "value": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Inventory Preload identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "deviceType": "Mobile Device",
                  "serialNumber": "<string>",
                  "id": "<integer>",
                  "username": "<string>",
                  "fullName": "<string>",
                  "emailAddress": "<string>",
                  "phoneNumber": "<string>",
                  "position": "<string>",
                  "department": "<string>",
                  "building": "<string>",
                  "room": "<string>",
                  "poNumber": "<string>",
                  "poDate": "<string>",
                  "warrantyExpiration": "<string>",
                  "appleCareId": "<string>",
                  "lifeExpectancy": "<string>",
                  "purchasePrice": "<string>",
                  "purchasingContact": "<string>",
                  "purchasingAccount": "<string>",
                  "leaseExpiration": "<string>",
                  "barCode1": "<string>",
                  "barCode2": "<string>",
                  "assetTag": "<string>",
                  "vendor": "<string>",
                  "extensionAttributes": [
                    {
                      "name": "<string>",
                      "value": "<string>"
                    },
                    {
                      "name": "<string>",
                      "value": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_inventory-preload_id"
      },
      "delete": {
        "tags": [
          "v1 > inventory-preload > {id}"
        ],
        "summary": "Delete an Inventory Preload record\n",
        "description": "Deletes an Inventory Preload record.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Inventory Preload identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_inventory-preload_id"
      }
    },
    "/v1/inventory-preload": {
      "get": {
        "tags": [
          "v1 > inventory-preload"
        ],
        "summary": "Return all Inventory Preload records\n",
        "description": "Returns all Inventory Preload records.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "id:asc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "deviceType": "Unknown",
                      "serialNumber": "<string>",
                      "id": "<integer>",
                      "username": "<string>",
                      "fullName": "<string>",
                      "emailAddress": "<string>",
                      "phoneNumber": "<string>",
                      "position": "<string>",
                      "department": "<string>",
                      "building": "<string>",
                      "room": "<string>",
                      "poNumber": "<string>",
                      "poDate": "<string>",
                      "warrantyExpiration": "<string>",
                      "appleCareId": "<string>",
                      "lifeExpectancy": "<string>",
                      "purchasePrice": "<string>",
                      "purchasingContact": "<string>",
                      "purchasingAccount": "<string>",
                      "leaseExpiration": "<string>",
                      "barCode1": "<string>",
                      "barCode2": "<string>",
                      "assetTag": "<string>",
                      "vendor": "<string>",
                      "extensionAttributes": [
                        {
                          "name": "<string>",
                          "value": "<string>"
                        },
                        {
                          "name": "<string>",
                          "value": "<string>"
                        }
                      ]
                    },
                    {
                      "deviceType": "Mobile Device",
                      "serialNumber": "<string>",
                      "id": "<integer>",
                      "username": "<string>",
                      "fullName": "<string>",
                      "emailAddress": "<string>",
                      "phoneNumber": "<string>",
                      "position": "<string>",
                      "department": "<string>",
                      "building": "<string>",
                      "room": "<string>",
                      "poNumber": "<string>",
                      "poDate": "<string>",
                      "warrantyExpiration": "<string>",
                      "appleCareId": "<string>",
                      "lifeExpectancy": "<string>",
                      "purchasePrice": "<string>",
                      "purchasingContact": "<string>",
                      "purchasingAccount": "<string>",
                      "leaseExpiration": "<string>",
                      "barCode1": "<string>",
                      "barCode2": "<string>",
                      "assetTag": "<string>",
                      "vendor": "<string>",
                      "extensionAttributes": [
                        {
                          "name": "<string>",
                          "value": "<string>"
                        },
                        {
                          "name": "<string>",
                          "value": "<string>"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_inventory-preload"
      },
      "post": {
        "tags": [
          "v1 > inventory-preload"
        ],
        "summary": "Create a new Inventory Preload record using JSON or CSV\n",
        "description": "Create a new Inventory Preload record using JSON or CSV.\nA CSV template can be downloaded from /api/inventory-preload/csv-template.\nSerial number and device type are required. All other fields are optional.\nWhen a matching serial number exists in the Inventory Preload data, the record will be overwritten with the CSV data.\nIf the CSV file contains a new username and an email address is provided, the new user is created in Jamf Pro.\nIf the CSV file contains an existing username, the following user-related fields are updated in Jamf Pro.\nFull Name,\nEmail Address,\nPhone Number,\nPosition.\nThis endpoint does not do full validation of each record in the CSV data.\nTo do full validation, use the /inventory-preload/validate-csv endpoint first.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "deviceType": "Computer",
                  "serialNumber": "<string>",
                  "username": "<string>",
                  "fullName": "<string>",
                  "emailAddress": "<string>",
                  "phoneNumber": "<string>",
                  "position": "<string>",
                  "department": "<string>",
                  "building": "<string>",
                  "room": "<string>",
                  "poNumber": "<string>",
                  "poDate": "<string>",
                  "warrantyExpiration": "<string>",
                  "appleCareId": "<string>",
                  "lifeExpectancy": "<string>",
                  "purchasePrice": "<string>",
                  "purchasingContact": "<string>",
                  "purchasingAccount": "<string>",
                  "leaseExpiration": "<string>",
                  "barCode1": "<string>",
                  "barCode2": "<string>",
                  "assetTag": "<string>",
                  "vendor": "<string>",
                  "extensionAttributes": [
                    {
                      "name": "<string>",
                      "value": "<string>"
                    },
                    {
                      "name": "<string>",
                      "value": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "deviceType": "Mobile Device",
                  "serialNumber": "<string>",
                  "id": "<integer>",
                  "username": "<string>",
                  "fullName": "<string>",
                  "emailAddress": "<string>",
                  "phoneNumber": "<string>",
                  "position": "<string>",
                  "department": "<string>",
                  "building": "<string>",
                  "room": "<string>",
                  "poNumber": "<string>",
                  "poDate": "<string>",
                  "warrantyExpiration": "<string>",
                  "appleCareId": "<string>",
                  "lifeExpectancy": "<string>",
                  "purchasePrice": "<string>",
                  "purchasingContact": "<string>",
                  "purchasingAccount": "<string>",
                  "leaseExpiration": "<string>",
                  "barCode1": "<string>",
                  "barCode2": "<string>",
                  "assetTag": "<string>",
                  "vendor": "<string>",
                  "extensionAttributes": [
                    {
                      "name": "<string>",
                      "value": "<string>"
                    },
                    {
                      "name": "<string>",
                      "value": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_inventory-preload"
      },
      "delete": {
        "tags": [
          "v1 > inventory-preload"
        ],
        "summary": "Delete all Inventory Preload records\n",
        "description": "Deletes all Inventory Preload records.",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v1_inventory-preload"
      }
    },
    "/v1/jamf-connect/config-profiles/{id}": {
      "put": {
        "tags": [
          "v1 > jamf-connect > config-profiles > {id}"
        ],
        "summary": "Update the way the Jamf Connect app gets updated on computers within scope of the associated configuration profile.\n",
        "description": "Update the way the Jamf Connect app gets updated on computers within scope of the associated configuration profile.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "version": "<string>",
                  "autoDeploymentType": "NONE"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) the UUID of the profile to update",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "uuid": "<string>",
                  "profileId": "<string>",
                  "profileName": "<string>",
                  "profileScopeDescription": "<string>",
                  "version": "<string>",
                  "autoDeploymentType": "NONE"
                }
              }
            }
          }
        },
        "operationId": "put_v1_jamf-connect_config-profiles_id"
      }
    },
    "/v1/jamf-connect/config-profiles": {
      "get": {
        "tags": [
          "v1 > jamf-connect > config-profiles"
        ],
        "summary": "Search for config profiles linked to Jamf Connect\n",
        "description": "Search for config profiles linked to Jamf Connect",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "uuid": "<string>",
                      "profileId": "<string>",
                      "profileName": "<string>",
                      "profileScopeDescription": "<string>",
                      "version": "<string>",
                      "autoDeploymentType": "NONE"
                    },
                    {
                      "uuid": "<string>",
                      "profileId": "<string>",
                      "profileName": "<string>",
                      "profileScopeDescription": "<string>",
                      "version": "<string>",
                      "autoDeploymentType": "NONE"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_jamf-connect_config-profiles"
      }
    },
    "/v1/jamf-connect/deployments/{id}/tasks/retry": {
      "post": {
        "tags": [
          "v1 > jamf-connect > deployments > {id} > tasks > retry"
        ],
        "summary": "Request a retry of Connect install tasks\n",
        "description": "Request a retry of Connect install tasks\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "ids": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) the UUID of the deployment associated with the retry",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_jamf-connect_deployments_id_tasks_retry"
      }
    },
    "/v1/jamf-connect/deployments/{id}/tasks": {
      "get": {
        "tags": [
          "v1 > jamf-connect > deployments > {id} > tasks"
        ],
        "summary": "Search for deployment tasks for a config profile linked to Jamf Connect\n",
        "description": "Search for config profiles linked to Jamf Connect",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) the UUID of the Jamf Connect deployment",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<string>",
                      "computerId": "<string>",
                      "computerName": "<string>",
                      "version": "<string>",
                      "updated": "<dateTime>",
                      "status": "UNKNOWN"
                    },
                    {
                      "id": "<string>",
                      "computerId": "<string>",
                      "computerName": "<string>",
                      "version": "<string>",
                      "updated": "<dateTime>",
                      "status": "COMMAND_QUEUED"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_jamf-connect_deployments_id_tasks"
      }
    },
    "/v1/jamf-connect/history": {
      "get": {
        "tags": [
          "v1 > jamf-connect > history"
        ],
        "summary": "Get Jamf Connect history\n",
        "description": "Get Jamf Connect history\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_jamf-connect_history"
      },
      "post": {
        "tags": [
          "v1 > jamf-connect > history"
        ],
        "summary": "Add Jamf Connect history notes\n",
        "description": "Add Jamf Connect history notes\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_jamf-connect_history"
      }
    },
    "/v1/jamf-connect": {
      "get": {
        "tags": [
          "v1 > jamf-connect"
        ],
        "summary": "Get the Jamf Connect settings that you have access to see\n",
        "description": "Get the Jamf Connect settings that you have access to see.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_jamf-connect"
      }
    },
    "/v1/jcds/files/{fileName}": {
      "get": {
        "tags": [
          "v1 > jcds > files > {fileName}"
        ],
        "summary": "Retrieve a download URL for a specific file from the Jamf Content Distribution Server",
        "description": "Retrieve a download URL for a specific file from the Jamf Content Distribution Server.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "fileName",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Name of the file stored in the Jamf Content Distribution Server.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "uri": "<string>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_jcds_files_fileName"
      },
      "delete": {
        "tags": [
          "v1 > jcds > files > {fileName}"
        ],
        "summary": "Delete a file from the Jamf Content Distribution Server",
        "description": "Delete a file by filename from the Jamf Content Distribution Server.",
        "parameters": [
          {
            "name": "fileName",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Name of the file that will be deleted from the Jamf Content Distribution Server.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v1_jcds_files_fileName"
      }
    },
    "/v1/jcds/files": {
      "get": {
        "tags": [
          "v1 > jcds > files"
        ],
        "summary": "Retrieve a list of files and file metadata from the Jamf Content Distribution Server",
        "description": "Retrieve a list of files and file metadata from the Jamf Content Distribution Server.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "fileName": "<string>",
                    "length": "<integer>",
                    "md5": "<string>",
                    "region": "<string>",
                    "sha3": "<string>"
                  },
                  {
                    "fileName": "<string>",
                    "length": "<integer>",
                    "md5": "<string>",
                    "region": "<string>",
                    "sha3": "<string>"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v1_jcds_files"
      },
      "post": {
        "tags": [
          "v1 > jcds > files"
        ],
        "summary": "Initiate an upload to the Jamf Content Distribution Server",
        "description": "Creates a temporary record and returns the credentials and information needed for uploading the file to the Jamf Content Distribution Server.",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "accessKeyID": "<string>",
                  "expiration": "<long>",
                  "secretAccessKey": "<string>",
                  "sessionToken": "<string>",
                  "region": "<string>",
                  "bucketName": "<string>",
                  "path": "<string>",
                  "uuid": "<string>"
                }
              }
            }
          }
        },
        "operationId": "post_v1_jcds_files"
      }
    },
    "/v1/jcds/properties": {
      "get": {
        "tags": [
          "v1 > jcds > properties"
        ],
        "summary": "Gets information about JCDS distribution points.\n",
        "description": "Gets string values of jcds2Enabled, fileStreamEndpointEnabled, and maxChunkSize properties\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "jcds2Enabled": "<boolean>",
                  "fileStreamEndpointEnabled": "<boolean>",
                  "maxChunkSize": "<integer>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_jcds_properties"
      }
    },
    "/v1/jcds/renew-credentials": {
      "post": {
        "tags": [
          "v1 > jcds > renew-credentials"
        ],
        "summary": "Renew credentials for an upload to the Jamf Content Distribution Server",
        "description": "Renews the credentials needed for uploading the file to the Jamf Content Distribution Server.",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "accessKeyID": "<string>",
                  "expiration": "<long>",
                  "secretAccessKey": "<string>",
                  "sessionToken": "<string>",
                  "region": "<string>",
                  "bucketName": "<string>",
                  "path": "<string>",
                  "uuid": "<string>"
                }
              }
            }
          }
        },
        "operationId": "post_v1_jcds_renew-credentials"
      }
    },
    "/v1/jamf-management-framework/redeploy/{id}": {
      "post": {
        "tags": [
          "v1 > jamf-management-framework > redeploy > {id}"
        ],
        "summary": "Redeploy Jamf Management Framework\n",
        "description": "Redeploys the Jamf Management Framework for enrolled device\n",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of computer",
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "deviceId": "<string>",
                  "commandUuid": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_jamf-management-framework_redeploy_id"
      }
    },
    "/v1/jamf-package": {
      "get": {
        "tags": [
          "v1 > jamf-package"
        ],
        "summary": "Get the packages for a given Jamf application\n",
        "description": "Get the packages for a given Jamf application.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "application",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The Jamf Application key. The only supported values are protect and connect.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "id": "<string>",
                    "filename": "<string>",
                    "version": "<string>",
                    "created": "<string>",
                    "url": "<string>"
                  },
                  {
                    "id": "<string>",
                    "filename": "<string>",
                    "version": "<string>",
                    "created": "<string>",
                    "url": "<string>"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_jamf-package"
      }
    },
    "/v1/jamf-pro-information": {
      "get": {
        "tags": [
          "v1 > jamf-pro-information"
        ],
        "summary": "Get basic information about the Jamf Pro Server\n",
        "description": "Deprecated version of the endpoint.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "isVppTokenEnabled": "<boolean>",
                  "isDepAccountEnabled": "<boolean>",
                  "isByodEnabled": "<boolean>",
                  "isUserMigrationEnabled": "<boolean>",
                  "isCloudDeploymentsEnabled": "<boolean>",
                  "isPatchEnabled": "<boolean>",
                  "isSsoSamlEnabled": "<boolean>",
                  "isSmtpEnabled": "<boolean>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_jamf-pro-information"
      }
    },
    "/v1/system/initialize": {
      "post": {
        "tags": [
          "v1 > system > initialize"
        ],
        "summary": "Set up fresh installed Jamf Pro Server\n",
        "description": "Set up fresh installed Jamf Pro Server\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "activationCode": "<string>",
                  "eulaAccepted": "<boolean>",
                  "institutionName": "<string>",
                  "jssUrl": "<string>",
                  "password": "<string>",
                  "username": "<string>",
                  "email": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_system_initialize"
      }
    },
    "/v1/system/initialize-database-connection": {
      "post": {
        "tags": [
          "v1 > system > initialize-database-connection"
        ],
        "summary": "Provide Database Password during startup\n",
        "description": "Provide database password during startup. Endpoint is accessible when database password was not configured and Jamf Pro server has not been initialized yet.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "password": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_system_initialize-database-connection"
      }
    },
    "/v1/notifications/{type}/{id}": {
      "delete": {
        "tags": [
          "v1 > notifications > {type} > {id}"
        ],
        "summary": "Delete Notifications\n",
        "description": "Deletes notifications with given type and id.\n",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) type of the notification",
            "example": "VPP_ACCOUNT_EXPIRED"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance ID of the notification",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v1_notifications_type_id"
      }
    },
    "/v1/notifications": {
      "get": {
        "tags": [
          "v1 > notifications"
        ],
        "summary": "Get Notifications for user and site\n",
        "description": "Gets notifications for user and site\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "type": "APP_INSTALLERS_NEW_APP_VERSION_DEPLOYMENT_STARTED",
                    "id": "<string>",
                    "params": {
                      "sitf5": {}
                    }
                  },
                  {
                    "type": "VPP_ACCOUNT_WILL_EXPIRE",
                    "id": "<string>",
                    "params": {
                      "Ut_d": {},
                      "adipisicing3e": {}
                    }
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v1_notifications"
      }
    },
    "/v1/jamf-pro-server-url/history": {
      "get": {
        "tags": [
          "v1 > jamf-pro-server-url > history"
        ],
        "summary": "Get Jamf Pro Server URL settings history\n",
        "description": "Gets Jamf Pro Server URL settings history",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "date:desc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_jamf-pro-server-url_history"
      },
      "post": {
        "tags": [
          "v1 > jamf-pro-server-url > history"
        ],
        "summary": "Add Jamf Pro Server URL settings history notes\n",
        "description": "Adds Jamf Pro Server URL settings history notes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<integer>",
                  "username": "<string>",
                  "date": "<string>",
                  "note": "<string>",
                  "details": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_jamf-pro-server-url_history"
      }
    },
    "/v1/jamf-pro-server-url": {
      "get": {
        "tags": [
          "v1 > jamf-pro-server-url"
        ],
        "summary": "Get Jamf Pro Server URL settings\n",
        "description": "Get Jamf Pro Server URL settings",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "url": "<string>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_jamf-pro-server-url"
      },
      "put": {
        "tags": [
          "v1 > jamf-pro-server-url"
        ],
        "summary": "Update Jamf Pro Server URL settings\n",
        "description": "Update Jamf Pro Server URL settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "url": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "url": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_jamf-pro-server-url"
      }
    },
    "/v1/user/preferences/settings/{keyId}": {
      "get": {
        "tags": [
          "v1 > user > preferences > settings > {keyId}"
        ],
        "summary": "Get the user preferences for the authenticated user and key.\n",
        "description": "Gets the user preferences for the authenticated user and key.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "keyId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) user setting to be retrieved",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "key": "<string>",
                  "username": "<string>",
                  "values": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_user_preferences_settings_keyId"
      }
    },
    "/v1/user/preferences/{keyId}": {
      "get": {
        "tags": [
          "v1 > user > preferences > {keyId}"
        ],
        "summary": "Get the user setting for the authenticated user and key\n",
        "description": "Gets the user setting for the authenticated user and key.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "keyId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) user setting to be retrieved",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {}
              }
            }
          }
        },
        "operationId": "get_v1_user_preferences_keyId"
      },
      "put": {
        "tags": [
          "v1 > user > preferences > {keyId}"
        ],
        "summary": "Persist the user setting\n",
        "description": "Persists the user setting\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {}
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "keyId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) unique key of user setting to be persisted",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {}
              }
            }
          }
        },
        "operationId": "put_v1_user_preferences_keyId"
      },
      "delete": {
        "tags": [
          "v1 > user > preferences > {keyId}"
        ],
        "summary": "Remove specified setting for authenticated user\n",
        "description": "Remove specified setting for authenticated user\n",
        "parameters": [
          {
            "name": "keyId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) unique key of user setting to be persisted",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v1_user_preferences_keyId"
      }
    },
    "/v1/user/change-password": {
      "post": {
        "tags": [
          "v1 > user > change-password"
        ],
        "summary": "Changes the user account password.\n",
        "description": "Changes the account password for a currently authenticated user.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "currentPassword": "<string>",
                  "newPassword": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_user_change-password"
      }
    },
    "/v1/jamf-pro-version": {
      "get": {
        "tags": [
          "v1 > jamf-pro-version"
        ],
        "summary": "Return information about the Jamf Pro including the current version\n",
        "description": "Returns information about the Jamf Pro including the current version.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "version": "<string>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_jamf-pro-version"
      }
    },
    "/v1/jamf-protect/deployments/{id}/tasks/retry": {
      "post": {
        "tags": [
          "v1 > jamf-protect > deployments > {id} > tasks > retry"
        ],
        "summary": "Request a retry of Protect install tasks\n",
        "description": "Request a retry of Protect install tasks\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "ids": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) the UUID of the deployment associated with the retry",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_jamf-protect_deployments_id_tasks_retry"
      }
    },
    "/v1/jamf-protect/deployments/{id}/tasks": {
      "get": {
        "tags": [
          "v1 > jamf-protect > deployments > {id} > tasks"
        ],
        "summary": "Search for deployment tasks for a config profile linked to Jamf Protect\n",
        "description": "Search for config profiles linked to Jamf Protect",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) the UUID of the Jamf Protect deployment",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<string>",
                      "computerId": "<string>",
                      "computerName": "<string>",
                      "version": "<string>",
                      "updated": "<dateTime>",
                      "status": "UNKNOWN"
                    },
                    {
                      "id": "<string>",
                      "computerId": "<string>",
                      "computerName": "<string>",
                      "version": "<string>",
                      "updated": "<dateTime>",
                      "status": "COMMAND_QUEUED"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_jamf-protect_deployments_id_tasks"
      }
    },
    "/v1/jamf-protect/history": {
      "get": {
        "tags": [
          "v1 > jamf-protect > history"
        ],
        "summary": "Get Jamf Protect history\n",
        "description": "Get Jamf Protect history\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_jamf-protect_history"
      },
      "post": {
        "tags": [
          "v1 > jamf-protect > history"
        ],
        "summary": "Add Jamf Protect history notes\n",
        "description": "Add Jamf Protect history notes\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_jamf-protect_history"
      }
    },
    "/v1/jamf-protect/plans/sync": {
      "post": {
        "tags": [
          "v1 > jamf-protect > plans > sync"
        ],
        "summary": "Sync Plans with Jamf Protect",
        "description": "Sync Plans with Jamf Protect. Configuration profiles associated with new plans will be imported to Jamf Pro.",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_jamf-protect_plans_sync"
      }
    },
    "/v1/jamf-protect/plans": {
      "get": {
        "tags": [
          "v1 > jamf-protect > plans"
        ],
        "summary": "Get all of the previously synced Jamf Protect Plans with information about their associated configuration profile",
        "description": "Get all of the previously synced Jamf Protect Plans with information about their associated configuration profile",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "uuid": "<string>",
                      "id": "<string>",
                      "name": "<string>",
                      "description": "<string>",
                      "profileId": "<integer>",
                      "profileName": "<string>",
                      "scopeDescription": "<string>"
                    },
                    {
                      "uuid": "<string>",
                      "id": "<string>",
                      "name": "<string>",
                      "description": "<string>",
                      "profileId": "<integer>",
                      "profileName": "<string>",
                      "scopeDescription": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_jamf-protect_plans"
      }
    },
    "/v1/jamf-protect/register": {
      "post": {
        "tags": [
          "v1 > jamf-protect > register"
        ],
        "summary": "Register a Jamf Protect API configuration with Jamf Pro",
        "description": "Register a Jamf Protect API configuration with Jamf Pro",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "clientId": "<string>",
                  "password": "<string>",
                  "protectUrl": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "apiClientId": "<string>",
                  "apiClientName": "<string>",
                  "registrationId": "<string>",
                  "protectUrl": "<string>",
                  "lastSyncTime": "<string>",
                  "syncStatus": "ERROR",
                  "autoInstall": "<boolean>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_jamf-protect_register"
      }
    },
    "/v1/jamf-protect": {
      "get": {
        "tags": [
          "v1 > jamf-protect"
        ],
        "summary": "Jamf Protect integration settings",
        "description": "Jamf Protect integration settings",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "apiClientId": "<string>",
                  "apiClientName": "<string>",
                  "registrationId": "<string>",
                  "protectUrl": "<string>",
                  "lastSyncTime": "<string>",
                  "syncStatus": "ERROR",
                  "autoInstall": "<boolean>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_jamf-protect"
      },
      "put": {
        "tags": [
          "v1 > jamf-protect"
        ],
        "summary": "Jamf Protect integration settings",
        "description": "Jamf Protect integration settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "autoInstall": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "apiClientId": "<string>",
                  "apiClientName": "<string>",
                  "registrationId": "<string>",
                  "protectUrl": "<string>",
                  "lastSyncTime": "<string>",
                  "syncStatus": "ERROR",
                  "autoInstall": "<boolean>"
                }
              }
            }
          }
        },
        "operationId": "put_v1_jamf-protect"
      },
      "delete": {
        "tags": [
          "v1 > jamf-protect"
        ],
        "summary": "Delete Jamf Protect API registration.",
        "description": "Deletes an existing Jamf Protect API registration if present. Jamf Protect API integration will be disabled.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_jamf-protect"
      }
    },
    "/v1/jamf-remote-assist/session/{id}": {
      "get": {
        "tags": [
          "v1 > jamf-remote-assist > session > {id}"
        ],
        "summary": "Gets single session history item.\n",
        "description": "Returns tenants session history for specific session.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of session",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "tenantId": "<string>",
                  "sessionId": "<string>",
                  "deviceId": "<string>",
                  "sessionStartedTimestamp": "<dateTime>",
                  "sessionEndedTimestamp": "<dateTime>",
                  "sessionType": "UNATTENDED",
                  "statusType": "STARTED",
                  "sessionAdminId": "<string>",
                  "comment": "<string>",
                  "details": {
                    "fileTransferItemList": [
                      {
                        "filePath": "<string>",
                        "transferTimestamp": "<dateTime>",
                        "fileTransferType": "DOWNLOAD"
                      },
                      {
                        "filePath": "<string>",
                        "transferTimestamp": "<dateTime>",
                        "fileTransferType": "DOWNLOAD"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_jamf-remote-assist_session_id"
      }
    },
    "/v1/jamf-remote-assist/session": {
      "get": {
        "tags": [
          "v1 > jamf-remote-assist > session"
        ],
        "summary": "Gets session history items.\n",
        "description": "Returns tenants sessions history.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "tenantId": "<string>",
                    "sessionId": "<string>",
                    "deviceId": "<string>",
                    "sessionStartedTimestamp": "<dateTime>",
                    "sessionEndedTimestamp": "<dateTime>",
                    "sessionType": "ATTENDED",
                    "statusType": "FINISHED",
                    "sessionAdminId": "<string>",
                    "comment": "<string>"
                  },
                  {
                    "tenantId": "<string>",
                    "sessionId": "<string>",
                    "deviceId": "<string>",
                    "sessionStartedTimestamp": "<dateTime>",
                    "sessionEndedTimestamp": "<dateTime>",
                    "sessionType": "UNATTENDED",
                    "statusType": "STARTED",
                    "sessionAdminId": "<string>",
                    "comment": "<string>"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v1_jamf-remote-assist_session"
      }
    },
    "/v1/ldap/groups": {
      "get": {
        "tags": [
          "v1 > ldap > groups"
        ],
        "summary": "Retrieve the configured access groups that contain the text in the search param\n",
        "description": "Retrieves the configured access groups that contain the text in the searchParam.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Will perform a \"contains\" search on the names of access groups",
            "example": "null"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<string>",
                      "uuid": "<string>",
                      "ldapServerId": "<integer>",
                      "name": "<string>",
                      "distinguishedName": "<string>"
                    },
                    {
                      "id": "<string>",
                      "uuid": "<string>",
                      "ldapServerId": "<integer>",
                      "name": "<string>",
                      "distinguishedName": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_ldap_groups"
      }
    },
    "/v1/ldap/ldap-servers": {
      "get": {
        "tags": [
          "v1 > ldap > ldap-servers"
        ],
        "summary": "Retrieve all LDAP Servers.\n",
        "description": "Retrieves all not migrated, LDAP Servers.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "id": "<integer>",
                    "name": "<string>"
                  },
                  {
                    "id": "<integer>",
                    "name": "<string>"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v1_ldap_ldap-servers"
      }
    },
    "/v1/ldap/servers": {
      "get": {
        "tags": [
          "v1 > ldap > servers"
        ],
        "summary": "Retrieve all Servers including LDAP and Cloud Identity Providers.\n",
        "description": "Retrieve all active Servers including LDAP and Cloud Identity Providers.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "id": "<integer>",
                    "name": "<string>"
                  },
                  {
                    "id": "<integer>",
                    "name": "<string>"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v1_ldap_servers"
      }
    },
    "/v1/locales": {
      "get": {
        "tags": [
          "v1 > locales"
        ],
        "summary": "Return locales that can be used in other features\n",
        "description": "Returns locales that can be used in other features.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "description": "<string>",
                    "identifier": "<string>"
                  },
                  {
                    "description": "<string>",
                    "identifier": "<string>"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v1_locales"
      }
    },
    "/v1/login-customization": {
      "get": {
        "tags": [
          "v1 > login-customization"
        ],
        "summary": "Get current login disclaimer settings",
        "description": "Returns knob whether disclaimer is enabled and if saved, its contents.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "includeCustomDisclaimer": "<boolean>",
                  "rampInstance": "<boolean>",
                  "disclaimerHeading": "<string>",
                  "disclaimerMainText": "<string>",
                  "actionText": "<string>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_login-customization"
      },
      "put": {
        "tags": [
          "v1 > login-customization"
        ],
        "summary": "Update current login disclaimer settings.",
        "description": "Update current login disclaimer settings.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "includeCustomDisclaimer": "<boolean>",
                  "disclaimerHeading": "<string>",
                  "disclaimerMainText": "<string>",
                  "actionText": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "includeCustomDisclaimer": "<boolean>",
                  "disclaimerHeading": "<string>",
                  "disclaimerMainText": "<string>",
                  "actionText": "<string>"
                }
              }
            }
          }
        },
        "operationId": "put_v1_login-customization"
      }
    },
    "/v1/macos-managed-software-updates/available-updates": {
      "get": {
        "tags": [
          "v1 > macos-managed-software-updates > available-updates"
        ],
        "summary": "Retrieve available MacOs Managed Software Updates",
        "description": "Retrieves available MacOs Managed Software Updates",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "availableUpdates": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_macos-managed-software-updates_available-updates"
      }
    },
    "/v1/macos-managed-software-updates/send-updates": {
      "post": {
        "tags": [
          "v1 > macos-managed-software-updates > send-updates"
        ],
        "summary": "Send MacOs Managed Software Updates",
        "description": "Sends MacOs Managed Software Updates",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "deviceIds": [
                    "<string>",
                    "<string>"
                  ],
                  "groupId": "<string>",
                  "maxDeferrals": "<integer>",
                  "version": "<string>",
                  "skipVersionVerification": false,
                  "applyMajorUpdate": false,
                  "updateAction": "DOWNLOAD_AND_INSTALL",
                  "forceRestart": false,
                  "priority": "HIGH"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "processManagerUuids": [
                    "<string>",
                    "<string>"
                  ],
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_macos-managed-software-updates_send-updates"
      }
    },
    "/v1/managed-software-updates/available-updates": {
      "get": {
        "tags": [
          "v1 > managed-software-updates > available-updates"
        ],
        "summary": "Retrieve available macOS and iOS Managed Software Updates",
        "description": "Retrieves available macOS and iOS Managed Software Updates\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "availableUpdates": {
                    "macOS": [
                      "<string>",
                      "<string>"
                    ],
                    "iOS": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get_v1_managed-software-updates_available-updates"
      }
    },
    "/v1/managed-software-updates/plans/feature-toggle/abandon": {
      "post": {
        "tags": [
          "v1 > managed-software-updates > plans > feature-toggle > abandon"
        ],
        "summary": "Force stops any ongoing or stalled feature-toggle processes",
        "description": "\"Break Glass\" endpoint, not for nominal usage.\nUse this endpoint to forcefully abandon the feature-toggle background process if the status of the feature-toggle is 'stuck' or has reached an non-restartable failed state.\nUsage of this endpoint under nominal conditions is undefined and unsupported.\n",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_managed-software-updates_plans_feature-toggle_abandon"
      }
    },
    "/v1/managed-software-updates/plans/feature-toggle/status": {
      "get": {
        "tags": [
          "v1 > managed-software-updates > plans > feature-toggle > status"
        ],
        "summary": "Retrieves background status of the Feature Toggle",
        "description": "Retrieves background status of the Feature Toggle\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "toggleOff": {
                    "startTime": "<string>",
                    "endTime": "<string>",
                    "elapsedTime": "<integer>",
                    "state": "RUNNING",
                    "totalRecords": "<long>",
                    "processedRecords": "<long>",
                    "percentComplete": "<double>",
                    "formattedPercentComplete": "<string>",
                    "exitState": "UNKNOWN",
                    "exitMessage": "<string>"
                  },
                  "toggleOn": {
                    "startTime": "<string>",
                    "endTime": "<string>",
                    "elapsedTime": "<integer>",
                    "state": "NEVER_RAN",
                    "totalRecords": "<long>",
                    "processedRecords": "<long>",
                    "percentComplete": "<double>",
                    "formattedPercentComplete": "<string>",
                    "exitState": "COMPLETED",
                    "exitMessage": "<string>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_managed-software-updates_plans_feature-toggle_status"
      }
    },
    "/v1/managed-software-updates/plans/feature-toggle": {
      "get": {
        "tags": [
          "v1 > managed-software-updates > plans > feature-toggle"
        ],
        "summary": "Retrieve current value of the Feature Toggle",
        "description": "Retrieves current value of the Feature Toggle\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "toggle": "<boolean>",
                  "forceInstallLocalDateEnabled": "<boolean>",
                  "customVersionEnabled": "<boolean>",
                  "dssEnabled": "<boolean>",
                  "recipeEnabled": "<boolean>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_managed-software-updates_plans_feature-toggle"
      },
      "put": {
        "tags": [
          "v1 > managed-software-updates > plans > feature-toggle"
        ],
        "summary": "Updates Feature Toggle Value",
        "description": "Updates the value of the Feature Toggle - This endpoint is asynchronous, the provided value will not be immediately updated. Please use the following endpoint to track the status of your toggle request. /v1/managed-software-updates/plans/feature-toggle/status:\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "toggle": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "toggle": "<boolean>",
                  "forceInstallLocalDateEnabled": "<boolean>",
                  "customVersionEnabled": "<boolean>",
                  "dssEnabled": "<boolean>",
                  "recipeEnabled": "<boolean>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_managed-software-updates_plans_feature-toggle"
      }
    },
    "/v1/managed-software-updates/plans/group/{id}": {
      "get": {
        "tags": [
          "v1 > managed-software-updates > plans > group > {id}"
        ],
        "summary": "Retrieve Managed Software Update Plans for a Group",
        "description": "Retrieves Managed Software Update Plans for a Group\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "group-type",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "(Required) Managed Software Update Group Type, Available options are \"COMPUTER_GROUP\" or \"MOBILE_DEVICE_GROUP\"",
            "example": "COMPUTER_GROUP"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Managed Software Update Group Id",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "device": {
                        "deviceId": "<string>",
                        "objectType": "APPLE_TV",
                        "href": "<string>"
                      },
                      "maxDeferrals": "<integer>",
                      "planUuid": "<string>",
                      "status": {
                        "state": "CollectingOSUpdateStatus",
                        "errorReasons": [
                          "EXISTING_PLAN_FOR_DEVICE_IN_PROGRESS",
                          "EXISTING_PLAN_FOR_DEVICE_IN_PROGRESS"
                        ]
                      },
                      "updateAction": "DOWNLOAD_ONLY",
                      "versionType": "LATEST_MAJOR",
                      "specificVersion": "NO_SPECIFIC_VERSION",
                      "buildVersion": "<string>",
                      "forceInstallLocalDateTime": "<string>",
                      "recipeId": "-1"
                    },
                    {
                      "device": {
                        "deviceId": "<string>",
                        "objectType": "APPLE_TV",
                        "href": "<string>"
                      },
                      "maxDeferrals": "<integer>",
                      "planUuid": "<string>",
                      "status": {
                        "state": "WaitingToCollectOSUpdateStatus",
                        "errorReasons": [
                          "IS_LATEST_FAILURE",
                          "SCAN_WAIT_FINISHED_FAILURE"
                        ]
                      },
                      "updateAction": "DOWNLOAD_INSTALL_SCHEDULE",
                      "versionType": "SPECIFIC_VERSION",
                      "specificVersion": "NO_SPECIFIC_VERSION",
                      "buildVersion": "<string>",
                      "forceInstallLocalDateTime": "<string>",
                      "recipeId": "-1"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_managed-software-updates_plans_group_id"
      }
    },
    "/v1/managed-software-updates/plans/group": {
      "post": {
        "tags": [
          "v1 > managed-software-updates > plans > group"
        ],
        "summary": "Create Managed Software Update Plans for a Group",
        "description": "Creates Managed Software Update Plans for a Group\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "config": {
                    "updateAction": "UNKNOWN",
                    "versionType": "LATEST_MINOR",
                    "specificVersion": "NO_SPECIFIC_VERSION",
                    "buildVersion": "<string>",
                    "maxDeferrals": "<integer>",
                    "forceInstallLocalDateTime": "<string>"
                  },
                  "group": {
                    "groupId": "<string>",
                    "objectType": "MOBILE_DEVICE_GROUP"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "plans": [
                    {
                      "device": {
                        "deviceId": "<string>",
                        "objectType": "MOBILE_DEVICE",
                        "href": "<string>"
                      },
                      "planId": "<string>",
                      "href": "<string>"
                    },
                    {
                      "device": {
                        "deviceId": "<string>",
                        "objectType": "COMPUTER",
                        "href": "<string>"
                      },
                      "planId": "<string>",
                      "href": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_managed-software-updates_plans_group"
      }
    },
    "/v1/managed-software-updates/plans/{id}/declarations": {
      "get": {
        "tags": [
          "v1 > managed-software-updates > plans > {id} > declarations"
        ],
        "summary": "Retrieve all Declarations associated with a Managed Software Update Plan",
        "description": "Retrieves all Declarations associated with a Managed Software Update Plan\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Managed Software Update Plan Uuid",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_managed-software-updates_plans_id_declarations"
      }
    },
    "/v1/managed-software-updates/plans/{id}/events": {
      "get": {
        "tags": [
          "v1 > managed-software-updates > plans > {id} > events"
        ],
        "summary": "Retrieve a Managed Software Update Plan Event Store",
        "description": "Retrieves a Managed Software Update Plan Event Store\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Managed Software Update Plan Uuid",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "events": ""
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_managed-software-updates_plans_id_events"
      }
    },
    "/v1/managed-software-updates/plans/{id}": {
      "get": {
        "tags": [
          "v1 > managed-software-updates > plans > {id}"
        ],
        "summary": "Retrieve a Managed Software Update Plan",
        "description": "Retrieves a Managed Software Update Plan\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Managed Software Update Plan Uuid",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "device": {
                    "deviceId": "<string>",
                    "objectType": "COMPUTER",
                    "href": "<string>"
                  },
                  "maxDeferrals": "<integer>",
                  "planUuid": "<string>",
                  "status": {
                    "state": "RejectingPlan",
                    "errorReasons": [
                      "ILLEGAL_ARGUMENT_EXCEPTION",
                      "START_PLAN_FAILURE"
                    ]
                  },
                  "updateAction": "DOWNLOAD_INSTALL_SCHEDULE",
                  "versionType": "SPECIFIC_VERSION",
                  "specificVersion": "NO_SPECIFIC_VERSION",
                  "buildVersion": "<string>",
                  "forceInstallLocalDateTime": "<string>",
                  "recipeId": "-1"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_managed-software-updates_plans_id"
      }
    },
    "/v1/managed-software-updates/plans": {
      "get": {
        "tags": [
          "v1 > managed-software-updates > plans"
        ],
        "summary": "Retrieve Managed Software Update Plans",
        "description": "Retrieve Managed Software Update Plans\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is planUuid:asc. Multiple sort criteria are supported and must be separated with a comma.",
            "example": "planUuid:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter Managed Software Updates collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: planUuid, device.deviceId, device.objectType, updateAction, versionType, specificVersion, maxDeferrals, recipeId, forceInstallLocalDateTime, state."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "device": {
                        "deviceId": "<string>",
                        "objectType": "APPLE_TV",
                        "href": "<string>"
                      },
                      "maxDeferrals": "<integer>",
                      "planUuid": "<string>",
                      "status": {
                        "state": "CollectingOSUpdateStatus",
                        "errorReasons": [
                          "EXISTING_PLAN_FOR_DEVICE_IN_PROGRESS",
                          "EXISTING_PLAN_FOR_DEVICE_IN_PROGRESS"
                        ]
                      },
                      "updateAction": "DOWNLOAD_ONLY",
                      "versionType": "LATEST_MAJOR",
                      "specificVersion": "NO_SPECIFIC_VERSION",
                      "buildVersion": "<string>",
                      "forceInstallLocalDateTime": "<string>",
                      "recipeId": "-1"
                    },
                    {
                      "device": {
                        "deviceId": "<string>",
                        "objectType": "APPLE_TV",
                        "href": "<string>"
                      },
                      "maxDeferrals": "<integer>",
                      "planUuid": "<string>",
                      "status": {
                        "state": "WaitingToCollectOSUpdateStatus",
                        "errorReasons": [
                          "IS_LATEST_FAILURE",
                          "SCAN_WAIT_FINISHED_FAILURE"
                        ]
                      },
                      "updateAction": "DOWNLOAD_INSTALL_SCHEDULE",
                      "versionType": "SPECIFIC_VERSION",
                      "specificVersion": "NO_SPECIFIC_VERSION",
                      "buildVersion": "<string>",
                      "forceInstallLocalDateTime": "<string>",
                      "recipeId": "-1"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_managed-software-updates_plans"
      },
      "post": {
        "tags": [
          "v1 > managed-software-updates > plans"
        ],
        "summary": "Create a Managed Software Update Plan",
        "description": "Creates a Managed Software Update Plan.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "config": {
                    "updateAction": "DOWNLOAD_ONLY",
                    "versionType": "UNKNOWN",
                    "specificVersion": "NO_SPECIFIC_VERSION",
                    "buildVersion": "<string>",
                    "maxDeferrals": "<integer>",
                    "forceInstallLocalDateTime": "<string>"
                  },
                  "devices": [
                    {
                      "deviceId": "<string>",
                      "objectType": "COMPUTER"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "plans": [
                    {
                      "device": {
                        "deviceId": "<string>",
                        "objectType": "MOBILE_DEVICE",
                        "href": "<string>"
                      },
                      "planId": "<string>",
                      "href": "<string>"
                    },
                    {
                      "device": {
                        "deviceId": "<string>",
                        "objectType": "COMPUTER",
                        "href": "<string>"
                      },
                      "planId": "<string>",
                      "href": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_managed-software-updates_plans"
      }
    },
    "/v1/managed-software-updates/update-statuses/computer-groups/{id}": {
      "get": {
        "tags": [
          "v1 > managed-software-updates > update-statuses > computer-groups > {id}"
        ],
        "summary": "Retrieve Managed Software Update Statuses for Computer Groups",
        "description": "Retrieve Managed Software Update Statuses for Computer Groups\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Computer Group identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "osUpdatesStatusId": "<string>",
                      "device": {
                        "deviceId": "<string>",
                        "objectType": "COMPUTER",
                        "href": "<string>"
                      },
                      "downloadPercentComplete": "<number>",
                      "downloaded": "<boolean>",
                      "productKey": "<string>",
                      "status": "INSTALL_INSUFFICIENT_POWER",
                      "deferralsRemaining": "<integer>",
                      "maxDeferrals": "<integer>",
                      "nextScheduledInstall": "<dateTime>",
                      "pastNotifications": [
                        "<dateTime>",
                        "<dateTime>"
                      ],
                      "created": "<dateTime>",
                      "updated": "<dateTime>"
                    },
                    {
                      "osUpdatesStatusId": "<string>",
                      "device": {
                        "deviceId": "<string>",
                        "objectType": "COMPUTER",
                        "href": "<string>"
                      },
                      "downloadPercentComplete": "<number>",
                      "downloaded": "<boolean>",
                      "productKey": "<string>",
                      "status": "DOWNLOAD_INSUFFICIENT_POWER",
                      "deferralsRemaining": "<integer>",
                      "maxDeferrals": "<integer>",
                      "nextScheduledInstall": "<dateTime>",
                      "pastNotifications": [
                        "<dateTime>",
                        "<dateTime>"
                      ],
                      "created": "<dateTime>",
                      "updated": "<dateTime>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_managed-software-updates_update-statuses_computer-groups_id"
      }
    },
    "/v1/managed-software-updates/update-statuses/computers/{id}": {
      "get": {
        "tags": [
          "v1 > managed-software-updates > update-statuses > computers > {id}"
        ],
        "summary": "Retrieve Managed Software Update Statuses for Computers",
        "description": "Retrieve Managed Software Update Statuses for Computers\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Computer identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "osUpdatesStatusId": "<string>",
                      "device": {
                        "deviceId": "<string>",
                        "objectType": "COMPUTER",
                        "href": "<string>"
                      },
                      "downloadPercentComplete": "<number>",
                      "downloaded": "<boolean>",
                      "productKey": "<string>",
                      "status": "INSTALL_INSUFFICIENT_POWER",
                      "deferralsRemaining": "<integer>",
                      "maxDeferrals": "<integer>",
                      "nextScheduledInstall": "<dateTime>",
                      "pastNotifications": [
                        "<dateTime>",
                        "<dateTime>"
                      ],
                      "created": "<dateTime>",
                      "updated": "<dateTime>"
                    },
                    {
                      "osUpdatesStatusId": "<string>",
                      "device": {
                        "deviceId": "<string>",
                        "objectType": "COMPUTER",
                        "href": "<string>"
                      },
                      "downloadPercentComplete": "<number>",
                      "downloaded": "<boolean>",
                      "productKey": "<string>",
                      "status": "DOWNLOAD_INSUFFICIENT_POWER",
                      "deferralsRemaining": "<integer>",
                      "maxDeferrals": "<integer>",
                      "nextScheduledInstall": "<dateTime>",
                      "pastNotifications": [
                        "<dateTime>",
                        "<dateTime>"
                      ],
                      "created": "<dateTime>",
                      "updated": "<dateTime>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_managed-software-updates_update-statuses_computers_id"
      }
    },
    "/v1/managed-software-updates/update-statuses/mobile-device-groups/{id}": {
      "get": {
        "tags": [
          "v1 > managed-software-updates > update-statuses > mobile-device-groups > {id}"
        ],
        "summary": "Retrieve Managed Software Update Statuses for Mobile Device Groups",
        "description": "Retrieve Managed Software Update Statuses for Mobile Device Groups\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Group identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "osUpdatesStatusId": "<string>",
                      "device": {
                        "deviceId": "<string>",
                        "objectType": "COMPUTER",
                        "href": "<string>"
                      },
                      "downloadPercentComplete": "<number>",
                      "downloaded": "<boolean>",
                      "productKey": "<string>",
                      "status": "INSTALL_INSUFFICIENT_POWER",
                      "deferralsRemaining": "<integer>",
                      "maxDeferrals": "<integer>",
                      "nextScheduledInstall": "<dateTime>",
                      "pastNotifications": [
                        "<dateTime>",
                        "<dateTime>"
                      ],
                      "created": "<dateTime>",
                      "updated": "<dateTime>"
                    },
                    {
                      "osUpdatesStatusId": "<string>",
                      "device": {
                        "deviceId": "<string>",
                        "objectType": "COMPUTER",
                        "href": "<string>"
                      },
                      "downloadPercentComplete": "<number>",
                      "downloaded": "<boolean>",
                      "productKey": "<string>",
                      "status": "DOWNLOAD_INSUFFICIENT_POWER",
                      "deferralsRemaining": "<integer>",
                      "maxDeferrals": "<integer>",
                      "nextScheduledInstall": "<dateTime>",
                      "pastNotifications": [
                        "<dateTime>",
                        "<dateTime>"
                      ],
                      "created": "<dateTime>",
                      "updated": "<dateTime>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_managed-software-updates_update-statuses_mobile-device-groups_id"
      }
    },
    "/v1/managed-software-updates/update-statuses/mobile-devices/{id}": {
      "get": {
        "tags": [
          "v1 > managed-software-updates > update-statuses > mobile-devices > {id}"
        ],
        "summary": "Retrieve Managed Software Update Statuses for Mobile Devices",
        "description": "Retrieve Managed Software Update Statuses for Mobile Devices\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "osUpdatesStatusId": "<string>",
                      "device": {
                        "deviceId": "<string>",
                        "objectType": "COMPUTER",
                        "href": "<string>"
                      },
                      "downloadPercentComplete": "<number>",
                      "downloaded": "<boolean>",
                      "productKey": "<string>",
                      "status": "INSTALL_INSUFFICIENT_POWER",
                      "deferralsRemaining": "<integer>",
                      "maxDeferrals": "<integer>",
                      "nextScheduledInstall": "<dateTime>",
                      "pastNotifications": [
                        "<dateTime>",
                        "<dateTime>"
                      ],
                      "created": "<dateTime>",
                      "updated": "<dateTime>"
                    },
                    {
                      "osUpdatesStatusId": "<string>",
                      "device": {
                        "deviceId": "<string>",
                        "objectType": "COMPUTER",
                        "href": "<string>"
                      },
                      "downloadPercentComplete": "<number>",
                      "downloaded": "<boolean>",
                      "productKey": "<string>",
                      "status": "DOWNLOAD_INSUFFICIENT_POWER",
                      "deferralsRemaining": "<integer>",
                      "maxDeferrals": "<integer>",
                      "nextScheduledInstall": "<dateTime>",
                      "pastNotifications": [
                        "<dateTime>",
                        "<dateTime>"
                      ],
                      "created": "<dateTime>",
                      "updated": "<dateTime>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_managed-software-updates_update-statuses_mobile-devices_id"
      }
    },
    "/v1/managed-software-updates/update-statuses": {
      "get": {
        "tags": [
          "v1 > managed-software-updates > update-statuses"
        ],
        "summary": "Retrieve Managed Software Update Statuses",
        "description": "Retrieve Managed Software Update Statuses\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter Managed Software Updates collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: osUpdatesStatusId, device.deviceId, device.objectType, downloaded, downloadPercentComplete, productKey, status, deferralsRemaining, maxDeferrals, nextScheduledInstall, created and updated."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "osUpdatesStatusId": "<string>",
                      "device": {
                        "deviceId": "<string>",
                        "objectType": "COMPUTER",
                        "href": "<string>"
                      },
                      "downloadPercentComplete": "<number>",
                      "downloaded": "<boolean>",
                      "productKey": "<string>",
                      "status": "INSTALL_INSUFFICIENT_POWER",
                      "deferralsRemaining": "<integer>",
                      "maxDeferrals": "<integer>",
                      "nextScheduledInstall": "<dateTime>",
                      "pastNotifications": [
                        "<dateTime>",
                        "<dateTime>"
                      ],
                      "created": "<dateTime>",
                      "updated": "<dateTime>"
                    },
                    {
                      "osUpdatesStatusId": "<string>",
                      "device": {
                        "deviceId": "<string>",
                        "objectType": "COMPUTER",
                        "href": "<string>"
                      },
                      "downloadPercentComplete": "<number>",
                      "downloaded": "<boolean>",
                      "productKey": "<string>",
                      "status": "DOWNLOAD_INSUFFICIENT_POWER",
                      "deferralsRemaining": "<integer>",
                      "maxDeferrals": "<integer>",
                      "nextScheduledInstall": "<dateTime>",
                      "pastNotifications": [
                        "<dateTime>",
                        "<dateTime>"
                      ],
                      "created": "<dateTime>",
                      "updated": "<dateTime>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_managed-software-updates_update-statuses"
      }
    },
    "/v1/deploy-package": {
      "post": {
        "tags": [
          "v1 > deploy-package"
        ],
        "summary": "Deploy packages using MDM",
        "description": "Deploys packages to macOS devices using the InstallEnterpriseApplication MDM command.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "manifest": {
                    "bundleId": "<string>",
                    "bundleVersion": "<string>",
                    "hash": "<string>",
                    "hashType": "MD5",
                    "sizeInBytes": "<integer>",
                    "title": "<string>",
                    "url": "<string>",
                    "displayImageUrl": "<string>",
                    "fullSizeImageUrl": "<string>",
                    "subtitle": "<string>"
                  },
                  "installAsManaged": "<boolean>",
                  "devices": [
                    "<integer>",
                    "<integer>"
                  ],
                  "groupId": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "verbose",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Enables the 'verbose' response, which includes information about the commands queued as well as information about commands that failed to queue.",
            "example": "false"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "queuedCommands": [
                    {
                      "device": "<integer>",
                      "commandUuid": "<string>"
                    },
                    {
                      "device": "<integer>",
                      "commandUuid": "<string>"
                    }
                  ],
                  "errors": [
                    {
                      "device": "<integer>",
                      "group": "<integer>",
                      "reason": "<string>"
                    },
                    {
                      "device": "<integer>",
                      "group": "<integer>",
                      "reason": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "post_v1_deploy-package"
      }
    },
    "/v1/mdm/commands": {
      "get": {
        "tags": [
          "v1 > mdm > commands"
        ],
        "summary": "Get information about mdm commands made by Jamf Pro.",
        "description": "Get information about mdm commands made by Jamf Pro.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "uuids",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "A list of the UUIDs of the commands being searched for.  Limited to 40 UUIDs in length. Choose one of two parameters, but not both.",
            "example": "<string>"
          },
          {
            "name": "client-management-id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The client management id used to search for a list of commands. Choose one of two parameters, but not both.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "uuid": "<string>",
                    "dateSent": "<dateTime>",
                    "client": {
                      "managementId": "<string>",
                      "clientType": "COMPUTER"
                    },
                    "commandState": "ERROR",
                    "commandType": "SET_AUTO_ADMIN_PASSWORD"
                  },
                  {
                    "uuid": "<string>",
                    "dateSent": "<dateTime>",
                    "client": {
                      "managementId": "<string>",
                      "clientType": "MOBILE_DEVICE_USER"
                    },
                    "commandState": "ERROR",
                    "commandType": "ERASE_DEVICE"
                  }
                ]
              }
            }
          },
          "414": {
            "description": "Request-URI Too Long",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_mdm_commands"
      }
    },
    "/v1/mdm/renew-profile": {
      "post": {
        "tags": [
          "v1 > mdm > renew-profile"
        ],
        "summary": "Renew MDM Profile\n",
        "description": "Renews the device's MDM Profile, including the device identity certificate within the MDM Profile.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "udids": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "udidsNotProcessed": {
                    "udids": [
                      "<string>",
                      "<string>"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "post_v1_mdm_renew-profile"
      }
    },
    "/v1/mobile-device-apps/reinstall-app-config": {
      "post": {
        "tags": [
          "v1 > mobile-device-apps > reinstall-app-config"
        ],
        "summary": "Reinstall App Config for Managed iOS Apps\n",
        "description": "Redeploys the managed app configuration for a specific app on a specific device using the $APP_CONFIG_REINSTALL_CODE generated during deployment. \nThis endpoint does not require authorization, only the re-install code. The code does not contain any user authentication information. \nFor example usage, see the following Teacher app documentation: [Teacher App Manged App Configuration](https://learn.jamf.com/bundle/jamf-teacher-configuration-guide/page/Jamf_Teacher_Integration_with_Jamf_Pro.html)\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "reinstallCode": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "post_v1_mobile-device-apps_reinstall-app-config"
      }
    },
    "/v1/mobile-device-enrollment-profile/{id}/download-profile": {
      "get": {
        "tags": [
          "v1 > mobile-device-enrollment-profile > {id} > download-profile"
        ],
        "summary": "Retrieve the MDM Enrollment Profile\n",
        "description": "Retrieve the MDM Enrollment Profile",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/x-apple-aspen-config"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) MDM Enrollment Profile identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/x-apple-aspen-config"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<binary>"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "get_v1_mobile-device-enrollment-profile_id_download-profile"
      }
    },
    "/v1/mobile-device-groups/static-group-membership/{id}": {
      "get": {
        "tags": [
          "v1 > mobile-device-groups > static-group-membership > {id}"
        ],
        "summary": "Get Static Group Membership by Id\n",
        "description": "Get Static Group Membership by Id\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort\nis mobileDeviceId:asc. Multiple sort criteria are supported and must be separated with\na comma. \n\nFields allowed in the sort: `airPlayPassword`, `appAnalyticsEnabled`, `assetTag`, `availableSpaceMb`, \n`batteryLevel`, `bluetoothLowEnergyCapable`, `bluetoothMacAddress`, `capacityMb`, \n`lostModeEnabledDate`, `declarativeDeviceManagementEnabled`, `deviceId`, `deviceLocatorServiceEnabled`,\n`devicePhoneNumber`, `diagnosticAndUsageReportingEnabled`, `displayName`, `doNotDisturbEnabled`, \n`enrollmentSessionTokenValid`, `exchangeDeviceId`, `cloudBackupEnabled`, `osBuild`,\n`osRapidSecurityResponse`, `osSupplementalBuildVersion`, `osVersion`, `ipAddress`, `itunesStoreAccountActive`,\n`mobileDeviceId`, `languages`, `lastBackupDate`, `lastEnrolledDate`, `lastCloudBackupDate`,\n`lastInventoryUpdateDate`, `locales`, `locationServicesForSelfServiceMobileEnabled`, `lostModeEnabled`,\n`managed`, `mdmProfileExpirationDate`, `model`, `modelIdentifier`,\n`modelNumber`, `modemFirmwareVersion`, `quotaSize`, `residentUsers`,\n`serialNumber`, `sharedIpad`, `supervised`, `tethered`,\n`timeZone`, `udid`, `usedSpacePercentage`, `wifiMacAddress`,\n`deviceOwnershipType`, `building`, `department`, `emailAddress`,\n`fullName`, `userPhoneNumber`, `position`, `room`,\n`username`, `appleCareId`, `leaseExpirationDate`,`lifeExpectancyYears`,\n`poDate`, `poNumber`, `purchasePrice`, `purchasedOrLeased`,\n`purchasingAccount`, `purchasingContact`, `vendor`, `warrantyExpirationDate`,\n`activationLockEnabled`, `blockEncryptionCapable`, `dataProtection`, `fileEncryptionCapable`,\n`hardwareEncryptionSupported`, `jailbreakStatus`, `passcodeCompliant`, `passcodeCompliantWithProfile`,\n`passcodeLockGracePeriodEnforcedSeconds`, `passcodePresent`, `personalDeviceProfileCurrent`, `carrierSettingsVersion`,\n`cellularTechnology`, `currentCarrierNetwork`, `currentMobileCountryCode`, `currentMobileNetworkCode`, \n`dataRoamingEnabled`, `eid`, `network`, `homeMobileCountryCode`, \n`homeMobileNetworkCode`, `iccid`, `imei`, `imei2`,\n`meid`, `personalHotspotEnabled`, `voiceRoamingEnabled`, `roaming`\n\nExample: `sort=displayName:desc,username:asc`\n",
            "example": "displayName:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter mobile device collection.\nDefault filter is empty query - returning all results for the requested page.\n\nFields allowed in the query: `airPlayPassword`, `appAnalyticsEnabled`, `assetTag`, `availableSpaceMb`, \n`batteryLevel`, `bluetoothLowEnergyCapable`, `bluetoothMacAddress`, `capacityMb`, \n`declarativeDeviceManagementEnabled`, `deviceId`, `deviceLocatorServiceEnabled`, `devicePhoneNumber`,\n`diagnosticAndUsageReportingEnabled`, `displayName`, `doNotDisturbEnabled`, `exchangeDeviceId`, \n`cloudBackupEnabled`, `osBuild`, `osSupplementalBuildVersion`, `osVersion`, `osRapidSecurityResponse`, `ipAddress`, \n`itunesStoreAccountActive`, `mobileDeviceId`, `languages`, `lastInventoryUpdateDate`, `locales`,\n`locationServicesForSelfServiceMobileEnabled`, `lostModeEnabled`, `managed`, `model`, \n`modelIdentifier`, `modelNumber`, `modemFirmwareVersion`, `quotaSize`, \n`residentUsers`, `serialNumber`, `sharedIpad`, `supervised`,\n`tethered`, `timeZone`, `udid`, `usedSpacePercentage`, \n`wifiMacAddress`, `building`, `department`, `emailAddress`,\n`fullName`, `userPhoneNumber`, `position`, `room`,\n`username`, `appleCareId`, `lifeExpectancyYears`, `poNumber`, \n`purchasePrice`, `purchasedOrLeased`, `purchasingAccount`, `purchasingContact`,\n`vendor`, `activationLockEnabled`, `blockEncryptionCapable`, `dataProtection`, \n`fileEncryptionCapable`, `passcodeCompliant`, `passcodeCompliantWithProfile`, `passcodeLockGracePeriodEnforcedSeconds`,\n`passcodePresent`, `personalDeviceProfileCurrent`, `carrierSettingsVersion`, `currentCarrierNetwork`,\n`currentMobileCountryCode`, `currentMobileNetworkCode`, `dataRoamingEnabled`, `eid`,\n`network`, `homeMobileCountryCode`, `homeMobileNetworkCode`, `iccid`,\n`imei`, `imei2`, `meid`, `personalHotspotEnabled`, \n`roaming`\n\nThis param can be combined with paging and sorting.\nExample: `filter=displayName==\"iPad\"`\n"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of static-group",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "mobileDeviceId": "<string>",
                      "udid": "<string>",
                      "airPlayPassword": "<string>",
                      "appAnalyticsEnabled": "<boolean>",
                      "assetTag": "<string>",
                      "availableSpaceMb": "<integer>",
                      "batteryLevel": "<integer>",
                      "bluetoothLowEnergyCapable": "<boolean>",
                      "bluetoothMacAddress": "<string>",
                      "capacityMb": "<integer>",
                      "lostModeEnabledDate": "<dateTime>",
                      "declarativeDeviceManagementEnabled": "<boolean>",
                      "deviceId": "<string>",
                      "deviceLocatorServiceEnabled": "<boolean>",
                      "deviceOwnershipType": "<string>",
                      "devicePhoneNumber": "<string>",
                      "diagnosticAndUsageReportingEnabled": "<boolean>",
                      "displayName": "<string>",
                      "doNotDisturbEnabled": "<boolean>",
                      "enrollmentSessionTokenValid": "<boolean>",
                      "exchangeDeviceId": "<string>",
                      "cloudBackupEnabled": "<boolean>",
                      "osBuild": "<string>",
                      "osSupplementalBuildVersion": "<string>",
                      "osRapidSecurityResponse": "<string>",
                      "osVersion": "<string>",
                      "ipAddress": "<string>",
                      "itunesStoreAccountActive": "<boolean>",
                      "jamfParentPairings": "<integer>",
                      "languages": "<string>",
                      "lastBackupDate": "<dateTime>",
                      "lastEnrolledDate": "<dateTime>",
                      "lastCloudBackupDate": "<dateTime>",
                      "lastInventoryUpdateDate": "<dateTime>",
                      "locales": "<string>",
                      "locationServicesForSelfServiceMobileEnabled": "<boolean>",
                      "lostModeEnabled": "<boolean>",
                      "managed": "<boolean>",
                      "mdmProfileExpirationDate": "<dateTime>",
                      "model": "<string>",
                      "modelIdentifier": "<string>",
                      "modelNumber": "<string>",
                      "modemFirmwareVersion": "<string>",
                      "quotaSize": "<integer>",
                      "residentUsers": "<integer>",
                      "serialNumber": "<string>",
                      "sharedIpad": "<boolean>",
                      "supervised": "<boolean>",
                      "tethered": "<boolean>",
                      "timeZone": "<string>",
                      "usedSpacePercentage": "<integer>",
                      "wifiMacAddress": "<string>",
                      "building": "<string>",
                      "department": "<string>",
                      "emailAddress": "<string>",
                      "fullName": "<string>",
                      "position": "<string>",
                      "room": "<string>",
                      "userPhoneNumber": "<string>",
                      "username": "<string>",
                      "appleCareId": "<string>",
                      "leaseExpirationDate": "<dateTime>",
                      "lifeExpectancyYears": "<integer>",
                      "poDate": "<dateTime>",
                      "poNumber": "<string>",
                      "purchasePrice": "<string>",
                      "purchasedOrLeased": "<boolean>",
                      "purchasingAccount": "<string>",
                      "purchasingContact": "<string>",
                      "vendor": "<string>",
                      "warrantyExpirationDate": "<dateTime>",
                      "activationLockEnabled": "<boolean>",
                      "blockEncryptionCapable": "<boolean>",
                      "dataProtection": "<boolean>",
                      "fileEncryptionCapable": "<boolean>",
                      "hardwareEncryptionSupported": "<boolean>",
                      "jailbreakStatus": "<string>",
                      "passcodeCompliant": "<boolean>",
                      "passcodeCompliantWithProfile": "<boolean>",
                      "passcodeLockGracePeriodEnforcedSeconds": "<integer>",
                      "passcodePresent": "<boolean>",
                      "personalDeviceProfileCurrent": "<boolean>",
                      "carrierSettingsVersion": "<string>",
                      "cellularTechnology": "<string>",
                      "currentCarrierNetwork": "<string>",
                      "currentMobileCountryCode": "<string>",
                      "currentMobileNetworkCode": "<string>",
                      "dataRoamingEnabled": "<boolean>",
                      "eid": "<string>",
                      "homeCarrierNetwork": "<string>",
                      "homeMobileCountryCode": "<string>",
                      "homeMobileNetworkCode": "<string>",
                      "iccid": "<string>",
                      "imei": "<string>",
                      "imei2": "<string>",
                      "meid": "<string>",
                      "personalHotspotEnabled": "<boolean>",
                      "roaming": "<boolean>",
                      "voiceRoamingEnabled": "<string>"
                    },
                    {
                      "mobileDeviceId": "<string>",
                      "udid": "<string>",
                      "airPlayPassword": "<string>",
                      "appAnalyticsEnabled": "<boolean>",
                      "assetTag": "<string>",
                      "availableSpaceMb": "<integer>",
                      "batteryLevel": "<integer>",
                      "bluetoothLowEnergyCapable": "<boolean>",
                      "bluetoothMacAddress": "<string>",
                      "capacityMb": "<integer>",
                      "lostModeEnabledDate": "<dateTime>",
                      "declarativeDeviceManagementEnabled": "<boolean>",
                      "deviceId": "<string>",
                      "deviceLocatorServiceEnabled": "<boolean>",
                      "deviceOwnershipType": "<string>",
                      "devicePhoneNumber": "<string>",
                      "diagnosticAndUsageReportingEnabled": "<boolean>",
                      "displayName": "<string>",
                      "doNotDisturbEnabled": "<boolean>",
                      "enrollmentSessionTokenValid": "<boolean>",
                      "exchangeDeviceId": "<string>",
                      "cloudBackupEnabled": "<boolean>",
                      "osBuild": "<string>",
                      "osSupplementalBuildVersion": "<string>",
                      "osRapidSecurityResponse": "<string>",
                      "osVersion": "<string>",
                      "ipAddress": "<string>",
                      "itunesStoreAccountActive": "<boolean>",
                      "jamfParentPairings": "<integer>",
                      "languages": "<string>",
                      "lastBackupDate": "<dateTime>",
                      "lastEnrolledDate": "<dateTime>",
                      "lastCloudBackupDate": "<dateTime>",
                      "lastInventoryUpdateDate": "<dateTime>",
                      "locales": "<string>",
                      "locationServicesForSelfServiceMobileEnabled": "<boolean>",
                      "lostModeEnabled": "<boolean>",
                      "managed": "<boolean>",
                      "mdmProfileExpirationDate": "<dateTime>",
                      "model": "<string>",
                      "modelIdentifier": "<string>",
                      "modelNumber": "<string>",
                      "modemFirmwareVersion": "<string>",
                      "quotaSize": "<integer>",
                      "residentUsers": "<integer>",
                      "serialNumber": "<string>",
                      "sharedIpad": "<boolean>",
                      "supervised": "<boolean>",
                      "tethered": "<boolean>",
                      "timeZone": "<string>",
                      "usedSpacePercentage": "<integer>",
                      "wifiMacAddress": "<string>",
                      "building": "<string>",
                      "department": "<string>",
                      "emailAddress": "<string>",
                      "fullName": "<string>",
                      "position": "<string>",
                      "room": "<string>",
                      "userPhoneNumber": "<string>",
                      "username": "<string>",
                      "appleCareId": "<string>",
                      "leaseExpirationDate": "<dateTime>",
                      "lifeExpectancyYears": "<integer>",
                      "poDate": "<dateTime>",
                      "poNumber": "<string>",
                      "purchasePrice": "<string>",
                      "purchasedOrLeased": "<boolean>",
                      "purchasingAccount": "<string>",
                      "purchasingContact": "<string>",
                      "vendor": "<string>",
                      "warrantyExpirationDate": "<dateTime>",
                      "activationLockEnabled": "<boolean>",
                      "blockEncryptionCapable": "<boolean>",
                      "dataProtection": "<boolean>",
                      "fileEncryptionCapable": "<boolean>",
                      "hardwareEncryptionSupported": "<boolean>",
                      "jailbreakStatus": "<string>",
                      "passcodeCompliant": "<boolean>",
                      "passcodeCompliantWithProfile": "<boolean>",
                      "passcodeLockGracePeriodEnforcedSeconds": "<integer>",
                      "passcodePresent": "<boolean>",
                      "personalDeviceProfileCurrent": "<boolean>",
                      "carrierSettingsVersion": "<string>",
                      "cellularTechnology": "<string>",
                      "currentCarrierNetwork": "<string>",
                      "currentMobileCountryCode": "<string>",
                      "currentMobileNetworkCode": "<string>",
                      "dataRoamingEnabled": "<boolean>",
                      "eid": "<string>",
                      "homeCarrierNetwork": "<string>",
                      "homeMobileCountryCode": "<string>",
                      "homeMobileNetworkCode": "<string>",
                      "iccid": "<string>",
                      "imei": "<string>",
                      "imei2": "<string>",
                      "meid": "<string>",
                      "personalHotspotEnabled": "<boolean>",
                      "roaming": "<boolean>",
                      "voiceRoamingEnabled": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_mobile-device-groups_static-group-membership_id"
      }
    },
    "/v1/mobile-device-groups/static-groups/{id}": {
      "get": {
        "tags": [
          "v1 > mobile-device-groups > static-groups > {id}"
        ],
        "summary": "Get Static Group by Id\n",
        "description": "Get Static Group by Id\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of static-group",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "groupId": "<string>",
                  "groupName": "<string>",
                  "siteId": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_mobile-device-groups_static-groups_id"
      },
      "delete": {
        "tags": [
          "v1 > mobile-device-groups > static-groups > {id}"
        ],
        "summary": "Remove Static Group by Id\n",
        "description": "Remove Static Group by Id\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of static-group",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v1_mobile-device-groups_static-groups_id"
      },
      "patch": {
        "tags": [
          "v1 > mobile-device-groups > static-groups > {id}"
        ],
        "summary": "Update membership of a static group.\n",
        "description": "Update membership of a static group.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "groupName": "<string>",
                  "siteId": "<string>",
                  "assignments": [
                    {
                      "mobileDeviceId": "<string>",
                      "selected": "<boolean>"
                    },
                    {
                      "mobileDeviceId": "<string>",
                      "selected": "<boolean>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of a static group",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "groupId": "<string>",
                  "groupName": "<string>",
                  "siteId": "<string>",
                  "assignments": [
                    {
                      "mobileDeviceId": "<string>",
                      "selected": "<boolean>"
                    },
                    {
                      "mobileDeviceId": "<string>",
                      "selected": "<boolean>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "patch_v1_mobile-device-groups_static-groups_id"
      }
    },
    "/v1/mobile-device-groups/static-groups": {
      "get": {
        "tags": [
          "v1 > mobile-device-groups > static-groups"
        ],
        "summary": "Get Static Groups\n",
        "description": "Get Static Groups\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Available criteria to sort on: groupId, groupName, siteId.",
            "example": "groupId:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter department collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: groupId, groupName, siteId. The siteId field can only be filtered by admins with full access. Any sited admin will have siteId filtered automatically. This param can be combined with paging and sorting. Example: groupName==\"staticGroup1\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "groupId": "<string>",
                      "groupName": "<string>",
                      "siteId": "<string>",
                      "count": "<integer>"
                    },
                    {
                      "groupId": "<string>",
                      "groupName": "<string>",
                      "siteId": "<string>",
                      "count": "<integer>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_mobile-device-groups_static-groups"
      },
      "post": {
        "tags": [
          "v1 > mobile-device-groups > static-groups"
        ],
        "summary": "Create membership of a static group.\n",
        "description": "Create membership of a static group.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "groupName": "<string>",
                  "siteId": "<string>",
                  "assignments": [
                    {
                      "mobileDeviceId": "<string>",
                      "selected": "<boolean>"
                    },
                    {
                      "mobileDeviceId": "<string>",
                      "selected": "<boolean>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_mobile-device-groups_static-groups"
      }
    },
    "/v1/mobile-device-groups": {
      "get": {
        "tags": [
          "v1 > mobile-device-groups"
        ],
        "summary": "Return the list of all Mobile Device Groups\n",
        "description": "Returns the list of all mobile device groups.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "id": "<integer>",
                    "name": "<string>",
                    "isSmartGroup": "<boolean>"
                  },
                  {
                    "id": "<integer>",
                    "name": "<string>",
                    "isSmartGroup": "<boolean>"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v1_mobile-device-groups"
      }
    },
    "/v1/mobile-device-prestages/scope": {
      "get": {
        "tags": [
          "v1 > mobile-device-prestages > scope"
        ],
        "summary": "Get all Device Scope for all Mobile Device Prestages\n",
        "description": "Get all device scope for all mobile device prestages",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "serialsByPrestageId": {
                    "ine3": "<integer>"
                  }
                }
              }
            }
          }
        },
        "operationId": "get_v1_mobile-device-prestages_scope"
      }
    },
    "/v1/mobile-device-prestages/sync/{id}/latest": {
      "get": {
        "tags": [
          "v1 > mobile-device-prestages > sync > {id} > latest"
        ],
        "summary": "Get the latest Sync State for a single Prestage\n",
        "description": "Get the latest sync state for a single prestage",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "syncState": "<string>",
                  "prestageId": "<integer>",
                  "timestamp": "<string>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_mobile-device-prestages_sync_id_latest"
      }
    },
    "/v1/mobile-device-prestages/sync/{id}": {
      "get": {
        "tags": [
          "v1 > mobile-device-prestages > sync > {id}"
        ],
        "summary": "Get all prestage sync states for a single prestage\n",
        "description": "Get all prestage sync states for a single prestage",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "syncState": "<string>",
                    "prestageId": "<integer>",
                    "timestamp": "<string>"
                  },
                  {
                    "syncState": "<string>",
                    "prestageId": "<integer>",
                    "timestamp": "<string>"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v1_mobile-device-prestages_sync_id"
      }
    },
    "/v1/mobile-device-prestages/sync": {
      "get": {
        "tags": [
          "v1 > mobile-device-prestages > sync"
        ],
        "summary": "Get all Prestage sync States for all prestages\n",
        "description": "Get all prestage sync states for all prestages",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "syncState": "<string>",
                    "prestageId": "<integer>",
                    "timestamp": "<string>"
                  },
                  {
                    "syncState": "<string>",
                    "prestageId": "<integer>",
                    "timestamp": "<string>"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v1_mobile-device-prestages_sync"
      }
    },
    "/v1/mobile-device-prestages/{id}/attachments": {
      "get": {
        "tags": [
          "v1 > mobile-device-prestages > {id} > attachments"
        ],
        "summary": "Get attachments for a Mobile Device Prestage\n",
        "description": "Get attachments for a Mobile Device Prestage",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "id": "<integer>",
                    "name": "<string>"
                  },
                  {
                    "id": "<integer>",
                    "name": "<string>"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_mobile-device-prestages_id_attachments"
      },
      "post": {
        "tags": [
          "v1 > mobile-device-prestages > {id} > attachments"
        ],
        "summary": "Add an attachment to a Mobile Device Prestage\n",
        "description": "Add an attachment to a Mobile Device prestage",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "(Required) The file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "multipart/form-data"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Identifier of the Mobile Device Prestage the attachment should be assigned to",
            "example": "<integer>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<integer>",
                  "name": "<string>",
                  "fileType": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_mobile-device-prestages_id_attachments"
      },
      "delete": {
        "tags": [
          "v1 > mobile-device-prestages > {id} > attachments"
        ],
        "summary": "Remove an attachment for a Mobile Device Prestage\n",
        "description": "Remove an attachment for a Mobile Device Prestage",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v1_mobile-device-prestages_id_attachments"
      }
    },
    "/v1/mobile-device-prestages/{id}/history": {
      "get": {
        "tags": [
          "v1 > mobile-device-prestages > {id} > history"
        ],
        "summary": "Get sorted and paged Mobile Device Prestage history objects\n",
        "description": "Gets sorted and paged mobile device prestage history objects",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc",
            "example": "date:desc"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_mobile-device-prestages_id_history"
      },
      "post": {
        "tags": [
          "v1 > mobile-device-prestages > {id} > history"
        ],
        "summary": "Add Mobile Device Prestage history object notes\n",
        "description": "Adds mobile device prestage history object notes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<integer>",
                  "username": "<string>",
                  "date": "<string>",
                  "note": "<string>",
                  "details": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_mobile-device-prestages_id_history"
      }
    },
    "/v1/mobile-device-prestages/{id}/scope": {
      "get": {
        "tags": [
          "v1 > mobile-device-prestages > {id} > scope"
        ],
        "summary": "Get Device Scope for a specific Mobile Device Prestage\n",
        "description": "Get device scope for a specific mobile device prestage",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "prestageId": "<integer>",
                  "assignments": [
                    {
                      "serialNumber": "<string>",
                      "assignmentEpoch": "<integer>",
                      "userAssigned": "<string>"
                    },
                    {
                      "serialNumber": "<string>",
                      "assignmentEpoch": "<integer>",
                      "userAssigned": "<string>"
                    }
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_mobile-device-prestages_id_scope"
      },
      "put": {
        "tags": [
          "v1 > mobile-device-prestages > {id} > scope"
        ],
        "summary": "Replace Device Scope for a specific Mobile Device Prestage\n",
        "description": "Replace device scope for a specific mobile device prestage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "serialNumbers": [
                    "<string>",
                    "<string>"
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "prestageId": "<integer>",
                  "assignments": [
                    {
                      "serialNumber": "<string>",
                      "assignmentEpoch": "<integer>",
                      "userAssigned": "<string>"
                    },
                    {
                      "serialNumber": "<string>",
                      "assignmentEpoch": "<integer>",
                      "userAssigned": "<string>"
                    }
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_mobile-device-prestages_id_scope"
      },
      "post": {
        "tags": [
          "v1 > mobile-device-prestages > {id} > scope"
        ],
        "summary": "Add Device Scope for a specific Mobile Device Prestage\n",
        "description": "Add device scope for a specific mobile device prestage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "serialNumbers": [
                    "<string>",
                    "<string>"
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "prestageId": "<integer>",
                  "assignments": [
                    {
                      "serialNumber": "<string>",
                      "assignmentEpoch": "<integer>",
                      "userAssigned": "<string>"
                    },
                    {
                      "serialNumber": "<string>",
                      "assignmentEpoch": "<integer>",
                      "userAssigned": "<string>"
                    }
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_mobile-device-prestages_id_scope"
      },
      "delete": {
        "tags": [
          "v1 > mobile-device-prestages > {id} > scope"
        ],
        "summary": "Remove Device Scope for a specific Mobile Device Prestage\n",
        "description": "Remove device scope for a specific mobile device prestage",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "prestageId": "<integer>",
                  "assignments": [
                    {
                      "serialNumber": "<string>",
                      "assignmentEpoch": "<integer>",
                      "userAssigned": "<string>"
                    },
                    {
                      "serialNumber": "<string>",
                      "assignmentEpoch": "<integer>",
                      "userAssigned": "<string>"
                    }
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_mobile-device-prestages_id_scope"
      }
    },
    "/v1/mobile-device-prestages/{id}": {
      "get": {
        "tags": [
          "v1 > mobile-device-prestages > {id}"
        ],
        "summary": "Retrieve a Mobile Device Prestage with the supplied id\n",
        "description": "Retrieves a Mobile Device Prestage with the supplied id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "authenticationPrompt": "<string>",
                  "department": "<string>",
                  "deviceEnrollmentProgramInstanceId": "<integer>",
                  "displayName": "<string>",
                  "enrollmentSiteId": "<integer>",
                  "isAllowPairing": "<boolean>",
                  "isAutoAdvanceSetup": "<boolean>",
                  "isConfigureDeviceBeforeSetupAssistant": "<boolean>",
                  "isDefaultPrestage": "<boolean>",
                  "isEnableDeviceBasedActivationLock": "<boolean>",
                  "isKeepExistingLocationInformation": "<boolean>",
                  "isKeepExistingSiteMembership": "<boolean>",
                  "isMandatory": "<boolean>",
                  "isMdmRemovable": "<boolean>",
                  "isMultiUser": "<boolean>",
                  "isPreventActivationLock": "<boolean>",
                  "isRequireAuthentication": "<boolean>",
                  "isSupervised": "<boolean>",
                  "locationInformation": {
                    "buildingId": "<integer>",
                    "departmentId": "<integer>",
                    "email": "<string>",
                    "id": "<integer>",
                    "phone": "<string>",
                    "position": "<string>",
                    "realname": "<string>",
                    "room": "<string>",
                    "username": "<string>",
                    "versionLock": "<integer>"
                  },
                  "maximumSharedAccounts": "<integer>",
                  "purchasingInformation": {
                    "appleCareID": "<string>",
                    "id": "<integer>",
                    "isLeased": "<boolean>",
                    "isPurchased": "<boolean>",
                    "leaseDate": "<string>",
                    "lifeExpectancy": "<integer>",
                    "poDate": "<string>",
                    "poNumber": "<string>",
                    "purchasePrice": "<string>",
                    "purchasingAccount": "<string>",
                    "purchasingContact": "<string>",
                    "vendor": "<string>",
                    "versionLock": "<integer>",
                    "warrantyDate": "<string>"
                  },
                  "supportEmailAddress": "<string>",
                  "supportPhoneNumber": "<string>",
                  "skipSetupItems": {
                    "aute0c6": "<boolean>",
                    "ex_3": "<boolean>",
                    "enim_2_": "<boolean>"
                  },
                  "anchorCertificates": [
                    "<string>",
                    "<string>"
                  ],
                  "enrollmentCustomizationId": "<integer>",
                  "language": "<string>",
                  "region": "<string>",
                  "names": {
                    "assignNamesUsing": "<string>",
                    "prestageDeviceNames": [
                      {
                        "id": "<integer>",
                        "deviceName": "<string>",
                        "isUsed": "<boolean>"
                      },
                      {
                        "id": "<integer>",
                        "deviceName": "<string>",
                        "isUsed": "<boolean>"
                      }
                    ],
                    "deviceNamePrefix": "<string>",
                    "deviceNameSuffix": "<string>",
                    "singleDeviceName": "<string>",
                    "isManageNames": "<boolean>",
                    "isDeviceNamingConfigured": "<boolean>"
                  },
                  "id": "<integer>",
                  "profileUUID": "<string>",
                  "siteId": "<integer>",
                  "versionLock": "<integer>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_mobile-device-prestages_id"
      },
      "put": {
        "tags": [
          "v1 > mobile-device-prestages > {id}"
        ],
        "summary": "Update a Mobile Device Prestage\n",
        "description": "Updates a Mobile Device Prestage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "authenticationPrompt": "<string>",
                  "department": "<string>",
                  "deviceEnrollmentProgramInstanceId": "<integer>",
                  "displayName": "<string>",
                  "enrollmentSiteId": "<integer>",
                  "isAllowPairing": "<boolean>",
                  "isAutoAdvanceSetup": "<boolean>",
                  "isConfigureDeviceBeforeSetupAssistant": "<boolean>",
                  "isDefaultPrestage": "<boolean>",
                  "isEnableDeviceBasedActivationLock": "<boolean>",
                  "isKeepExistingLocationInformation": "<boolean>",
                  "isKeepExistingSiteMembership": "<boolean>",
                  "isMandatory": "<boolean>",
                  "isMdmRemovable": "<boolean>",
                  "isMultiUser": "<boolean>",
                  "isPreventActivationLock": "<boolean>",
                  "isRequireAuthentication": "<boolean>",
                  "isSupervised": "<boolean>",
                  "locationInformation": {
                    "buildingId": "<integer>",
                    "departmentId": "<integer>",
                    "email": "<string>",
                    "id": "<integer>",
                    "phone": "<string>",
                    "position": "<string>",
                    "realname": "<string>",
                    "room": "<string>",
                    "username": "<string>",
                    "versionLock": "<integer>"
                  },
                  "maximumSharedAccounts": "<integer>",
                  "purchasingInformation": {
                    "appleCareID": "<string>",
                    "id": "<integer>",
                    "isLeased": "<boolean>",
                    "isPurchased": "<boolean>",
                    "leaseDate": "<string>",
                    "lifeExpectancy": "<integer>",
                    "poDate": "<string>",
                    "poNumber": "<string>",
                    "purchasePrice": "<string>",
                    "purchasingAccount": "<string>",
                    "purchasingContact": "<string>",
                    "vendor": "<string>",
                    "versionLock": "<integer>",
                    "warrantyDate": "<string>"
                  },
                  "supportEmailAddress": "<string>",
                  "supportPhoneNumber": "<string>",
                  "skipSetupItems": {
                    "esse_3": "<boolean>",
                    "aliqua_3": "<boolean>",
                    "anim_6": "<boolean>"
                  },
                  "anchorCertificates": [
                    "<string>",
                    "<string>"
                  ],
                  "enrollmentCustomizationId": "<integer>",
                  "language": "<string>",
                  "region": "<string>",
                  "names": {
                    "assignNamesUsing": "<string>",
                    "prestageDeviceNames": [
                      {
                        "id": "<integer>",
                        "deviceName": "<string>",
                        "isUsed": "<boolean>"
                      },
                      {
                        "id": "<integer>",
                        "deviceName": "<string>",
                        "isUsed": "<boolean>"
                      }
                    ],
                    "deviceNamePrefix": "<string>",
                    "deviceNameSuffix": "<string>",
                    "singleDeviceName": "<string>",
                    "isManageNames": "<boolean>",
                    "isDeviceNamingConfigured": "<boolean>"
                  },
                  "versionLock": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "authenticationPrompt": "<string>",
                  "department": "<string>",
                  "deviceEnrollmentProgramInstanceId": "<integer>",
                  "displayName": "<string>",
                  "enrollmentSiteId": "<integer>",
                  "isAllowPairing": "<boolean>",
                  "isAutoAdvanceSetup": "<boolean>",
                  "isConfigureDeviceBeforeSetupAssistant": "<boolean>",
                  "isDefaultPrestage": "<boolean>",
                  "isEnableDeviceBasedActivationLock": "<boolean>",
                  "isKeepExistingLocationInformation": "<boolean>",
                  "isKeepExistingSiteMembership": "<boolean>",
                  "isMandatory": "<boolean>",
                  "isMdmRemovable": "<boolean>",
                  "isMultiUser": "<boolean>",
                  "isPreventActivationLock": "<boolean>",
                  "isRequireAuthentication": "<boolean>",
                  "isSupervised": "<boolean>",
                  "locationInformation": {
                    "buildingId": "<integer>",
                    "departmentId": "<integer>",
                    "email": "<string>",
                    "id": "<integer>",
                    "phone": "<string>",
                    "position": "<string>",
                    "realname": "<string>",
                    "room": "<string>",
                    "username": "<string>",
                    "versionLock": "<integer>"
                  },
                  "maximumSharedAccounts": "<integer>",
                  "purchasingInformation": {
                    "appleCareID": "<string>",
                    "id": "<integer>",
                    "isLeased": "<boolean>",
                    "isPurchased": "<boolean>",
                    "leaseDate": "<string>",
                    "lifeExpectancy": "<integer>",
                    "poDate": "<string>",
                    "poNumber": "<string>",
                    "purchasePrice": "<string>",
                    "purchasingAccount": "<string>",
                    "purchasingContact": "<string>",
                    "vendor": "<string>",
                    "versionLock": "<integer>",
                    "warrantyDate": "<string>"
                  },
                  "supportEmailAddress": "<string>",
                  "supportPhoneNumber": "<string>",
                  "skipSetupItems": {
                    "aute0c6": "<boolean>",
                    "ex_3": "<boolean>",
                    "enim_2_": "<boolean>"
                  },
                  "anchorCertificates": [
                    "<string>",
                    "<string>"
                  ],
                  "enrollmentCustomizationId": "<integer>",
                  "language": "<string>",
                  "region": "<string>",
                  "names": {
                    "assignNamesUsing": "<string>",
                    "prestageDeviceNames": [
                      {
                        "id": "<integer>",
                        "deviceName": "<string>",
                        "isUsed": "<boolean>"
                      },
                      {
                        "id": "<integer>",
                        "deviceName": "<string>",
                        "isUsed": "<boolean>"
                      }
                    ],
                    "deviceNamePrefix": "<string>",
                    "deviceNameSuffix": "<string>",
                    "singleDeviceName": "<string>",
                    "isManageNames": "<boolean>",
                    "isDeviceNamingConfigured": "<boolean>"
                  },
                  "id": "<integer>",
                  "profileUUID": "<string>",
                  "siteId": "<integer>",
                  "versionLock": "<integer>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_mobile-device-prestages_id"
      },
      "delete": {
        "tags": [
          "v1 > mobile-device-prestages > {id}"
        ],
        "summary": "Delete a Mobile Device Prestage with the supplied id\n",
        "description": "Deletes a Mobile Device Prestage with the supplied id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v1_mobile-device-prestages_id"
      }
    },
    "/v1/mobile-device-prestages": {
      "get": {
        "tags": [
          "v1 > mobile-device-prestages"
        ],
        "summary": "Search for sorted and paged Mobile Device Prestages\n",
        "description": "Search for sorted and paged mobile device prestages",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "id:asc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "authenticationPrompt": "<string>",
                      "department": "<string>",
                      "deviceEnrollmentProgramInstanceId": "<integer>",
                      "displayName": "<string>",
                      "enrollmentSiteId": "<integer>",
                      "isAllowPairing": "<boolean>",
                      "isAutoAdvanceSetup": "<boolean>",
                      "isConfigureDeviceBeforeSetupAssistant": "<boolean>",
                      "isDefaultPrestage": "<boolean>",
                      "isEnableDeviceBasedActivationLock": "<boolean>",
                      "isKeepExistingLocationInformation": "<boolean>",
                      "isKeepExistingSiteMembership": "<boolean>",
                      "isMandatory": "<boolean>",
                      "isMdmRemovable": "<boolean>",
                      "isMultiUser": "<boolean>",
                      "isPreventActivationLock": "<boolean>",
                      "isRequireAuthentication": "<boolean>",
                      "isSupervised": "<boolean>",
                      "locationInformation": {
                        "buildingId": "<integer>",
                        "departmentId": "<integer>",
                        "email": "<string>",
                        "id": "<integer>",
                        "phone": "<string>",
                        "position": "<string>",
                        "realname": "<string>",
                        "room": "<string>",
                        "username": "<string>",
                        "versionLock": "<integer>"
                      },
                      "maximumSharedAccounts": "<integer>",
                      "purchasingInformation": {
                        "appleCareID": "<string>",
                        "id": "<integer>",
                        "isLeased": "<boolean>",
                        "isPurchased": "<boolean>",
                        "leaseDate": "<string>",
                        "lifeExpectancy": "<integer>",
                        "poDate": "<string>",
                        "poNumber": "<string>",
                        "purchasePrice": "<string>",
                        "purchasingAccount": "<string>",
                        "purchasingContact": "<string>",
                        "vendor": "<string>",
                        "versionLock": "<integer>",
                        "warrantyDate": "<string>"
                      },
                      "supportEmailAddress": "<string>",
                      "supportPhoneNumber": "<string>",
                      "skipSetupItems": {
                        "tempor_77c": "<boolean>",
                        "occaecat_4b": "<boolean>"
                      },
                      "anchorCertificates": [
                        "<string>",
                        "<string>"
                      ],
                      "enrollmentCustomizationId": "<integer>",
                      "language": "<string>",
                      "region": "<string>",
                      "names": {
                        "assignNamesUsing": "<string>",
                        "prestageDeviceNames": [
                          {
                            "id": "<integer>",
                            "deviceName": "<string>",
                            "isUsed": "<boolean>"
                          },
                          {
                            "id": "<integer>",
                            "deviceName": "<string>",
                            "isUsed": "<boolean>"
                          }
                        ],
                        "deviceNamePrefix": "<string>",
                        "deviceNameSuffix": "<string>",
                        "singleDeviceName": "<string>",
                        "isManageNames": "<boolean>",
                        "isDeviceNamingConfigured": "<boolean>"
                      },
                      "id": "<integer>",
                      "profileUUID": "<string>",
                      "siteId": "<integer>",
                      "versionLock": "<integer>"
                    },
                    {
                      "authenticationPrompt": "<string>",
                      "department": "<string>",
                      "deviceEnrollmentProgramInstanceId": "<integer>",
                      "displayName": "<string>",
                      "enrollmentSiteId": "<integer>",
                      "isAllowPairing": "<boolean>",
                      "isAutoAdvanceSetup": "<boolean>",
                      "isConfigureDeviceBeforeSetupAssistant": "<boolean>",
                      "isDefaultPrestage": "<boolean>",
                      "isEnableDeviceBasedActivationLock": "<boolean>",
                      "isKeepExistingLocationInformation": "<boolean>",
                      "isKeepExistingSiteMembership": "<boolean>",
                      "isMandatory": "<boolean>",
                      "isMdmRemovable": "<boolean>",
                      "isMultiUser": "<boolean>",
                      "isPreventActivationLock": "<boolean>",
                      "isRequireAuthentication": "<boolean>",
                      "isSupervised": "<boolean>",
                      "locationInformation": {
                        "buildingId": "<integer>",
                        "departmentId": "<integer>",
                        "email": "<string>",
                        "id": "<integer>",
                        "phone": "<string>",
                        "position": "<string>",
                        "realname": "<string>",
                        "room": "<string>",
                        "username": "<string>",
                        "versionLock": "<integer>"
                      },
                      "maximumSharedAccounts": "<integer>",
                      "purchasingInformation": {
                        "appleCareID": "<string>",
                        "id": "<integer>",
                        "isLeased": "<boolean>",
                        "isPurchased": "<boolean>",
                        "leaseDate": "<string>",
                        "lifeExpectancy": "<integer>",
                        "poDate": "<string>",
                        "poNumber": "<string>",
                        "purchasePrice": "<string>",
                        "purchasingAccount": "<string>",
                        "purchasingContact": "<string>",
                        "vendor": "<string>",
                        "versionLock": "<integer>",
                        "warrantyDate": "<string>"
                      },
                      "supportEmailAddress": "<string>",
                      "supportPhoneNumber": "<string>",
                      "skipSetupItems": {
                        "id__": "<boolean>"
                      },
                      "anchorCertificates": [
                        "<string>",
                        "<string>"
                      ],
                      "enrollmentCustomizationId": "<integer>",
                      "language": "<string>",
                      "region": "<string>",
                      "names": {
                        "assignNamesUsing": "<string>",
                        "prestageDeviceNames": [
                          {
                            "id": "<integer>",
                            "deviceName": "<string>",
                            "isUsed": "<boolean>"
                          },
                          {
                            "id": "<integer>",
                            "deviceName": "<string>",
                            "isUsed": "<boolean>"
                          }
                        ],
                        "deviceNamePrefix": "<string>",
                        "deviceNameSuffix": "<string>",
                        "singleDeviceName": "<string>",
                        "isManageNames": "<boolean>",
                        "isDeviceNamingConfigured": "<boolean>"
                      },
                      "id": "<integer>",
                      "profileUUID": "<string>",
                      "siteId": "<integer>",
                      "versionLock": "<integer>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_mobile-device-prestages"
      },
      "post": {
        "tags": [
          "v1 > mobile-device-prestages"
        ],
        "summary": "Create a Mobile Device Prestage\n",
        "description": "Create a mobile device prestage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "authenticationPrompt": "<string>",
                  "department": "<string>",
                  "deviceEnrollmentProgramInstanceId": "<integer>",
                  "displayName": "<string>",
                  "enrollmentSiteId": "<integer>",
                  "isAllowPairing": "<boolean>",
                  "isAutoAdvanceSetup": "<boolean>",
                  "isConfigureDeviceBeforeSetupAssistant": "<boolean>",
                  "isDefaultPrestage": "<boolean>",
                  "isEnableDeviceBasedActivationLock": "<boolean>",
                  "isKeepExistingLocationInformation": "<boolean>",
                  "isKeepExistingSiteMembership": "<boolean>",
                  "isMandatory": "<boolean>",
                  "isMdmRemovable": "<boolean>",
                  "isMultiUser": "<boolean>",
                  "isPreventActivationLock": "<boolean>",
                  "isRequireAuthentication": "<boolean>",
                  "isSupervised": "<boolean>",
                  "locationInformation": {
                    "buildingId": "<integer>",
                    "departmentId": "<integer>",
                    "email": "<string>",
                    "id": "<integer>",
                    "phone": "<string>",
                    "position": "<string>",
                    "realname": "<string>",
                    "room": "<string>",
                    "username": "<string>",
                    "versionLock": "<integer>"
                  },
                  "maximumSharedAccounts": "<integer>",
                  "purchasingInformation": {
                    "appleCareID": "<string>",
                    "id": "<integer>",
                    "isLeased": "<boolean>",
                    "isPurchased": "<boolean>",
                    "leaseDate": "<string>",
                    "lifeExpectancy": "<integer>",
                    "poDate": "<string>",
                    "poNumber": "<string>",
                    "purchasePrice": "<string>",
                    "purchasingAccount": "<string>",
                    "purchasingContact": "<string>",
                    "vendor": "<string>",
                    "versionLock": "<integer>",
                    "warrantyDate": "<string>"
                  },
                  "supportEmailAddress": "<string>",
                  "supportPhoneNumber": "<string>",
                  "skipSetupItems": {
                    "deseruntb25": "<boolean>",
                    "reprehenderit_49": "<boolean>",
                    "iruredb": "<boolean>"
                  },
                  "anchorCertificates": [
                    "<string>",
                    "<string>"
                  ],
                  "enrollmentCustomizationId": "<integer>",
                  "language": "<string>",
                  "region": "<string>",
                  "names": {
                    "assignNamesUsing": "<string>",
                    "prestageDeviceNames": [
                      {
                        "id": "<integer>",
                        "deviceName": "<string>",
                        "isUsed": "<boolean>"
                      },
                      {
                        "id": "<integer>",
                        "deviceName": "<string>",
                        "isUsed": "<boolean>"
                      }
                    ],
                    "deviceNamePrefix": "<string>",
                    "deviceNameSuffix": "<string>",
                    "singleDeviceName": "<string>",
                    "isManageNames": "<boolean>",
                    "isDeviceNamingConfigured": "<boolean>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "authenticationPrompt": "<string>",
                  "department": "<string>",
                  "deviceEnrollmentProgramInstanceId": "<integer>",
                  "displayName": "<string>",
                  "enrollmentSiteId": "<integer>",
                  "isAllowPairing": "<boolean>",
                  "isAutoAdvanceSetup": "<boolean>",
                  "isConfigureDeviceBeforeSetupAssistant": "<boolean>",
                  "isDefaultPrestage": "<boolean>",
                  "isEnableDeviceBasedActivationLock": "<boolean>",
                  "isKeepExistingLocationInformation": "<boolean>",
                  "isKeepExistingSiteMembership": "<boolean>",
                  "isMandatory": "<boolean>",
                  "isMdmRemovable": "<boolean>",
                  "isMultiUser": "<boolean>",
                  "isPreventActivationLock": "<boolean>",
                  "isRequireAuthentication": "<boolean>",
                  "isSupervised": "<boolean>",
                  "locationInformation": {
                    "buildingId": "<integer>",
                    "departmentId": "<integer>",
                    "email": "<string>",
                    "id": "<integer>",
                    "phone": "<string>",
                    "position": "<string>",
                    "realname": "<string>",
                    "room": "<string>",
                    "username": "<string>",
                    "versionLock": "<integer>"
                  },
                  "maximumSharedAccounts": "<integer>",
                  "purchasingInformation": {
                    "appleCareID": "<string>",
                    "id": "<integer>",
                    "isLeased": "<boolean>",
                    "isPurchased": "<boolean>",
                    "leaseDate": "<string>",
                    "lifeExpectancy": "<integer>",
                    "poDate": "<string>",
                    "poNumber": "<string>",
                    "purchasePrice": "<string>",
                    "purchasingAccount": "<string>",
                    "purchasingContact": "<string>",
                    "vendor": "<string>",
                    "versionLock": "<integer>",
                    "warrantyDate": "<string>"
                  },
                  "supportEmailAddress": "<string>",
                  "supportPhoneNumber": "<string>",
                  "skipSetupItems": {
                    "aute0c6": "<boolean>",
                    "ex_3": "<boolean>",
                    "enim_2_": "<boolean>"
                  },
                  "anchorCertificates": [
                    "<string>",
                    "<string>"
                  ],
                  "enrollmentCustomizationId": "<integer>",
                  "language": "<string>",
                  "region": "<string>",
                  "names": {
                    "assignNamesUsing": "<string>",
                    "prestageDeviceNames": [
                      {
                        "id": "<integer>",
                        "deviceName": "<string>",
                        "isUsed": "<boolean>"
                      },
                      {
                        "id": "<integer>",
                        "deviceName": "<string>",
                        "isUsed": "<boolean>"
                      }
                    ],
                    "deviceNamePrefix": "<string>",
                    "deviceNameSuffix": "<string>",
                    "singleDeviceName": "<string>",
                    "isManageNames": "<boolean>",
                    "isDeviceNamingConfigured": "<boolean>"
                  },
                  "id": "<integer>",
                  "profileUUID": "<string>",
                  "siteId": "<integer>",
                  "versionLock": "<integer>"
                }
              }
            }
          }
        },
        "operationId": "post_v1_mobile-device-prestages"
      }
    },
    "/v1/oidc/dispatch": {
      "post": {
        "tags": [
          "v1 > oidc > dispatch"
        ],
        "summary": "Provide the url to redirect for OIDC login",
        "description": "Provide the url to redirect for OIDC login based on email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "emailAddress": "<string>",
                  "originalUrl": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "redirectUrl": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_oidc_dispatch"
      }
    },
    "/v1/oidc/generate-certificate": {
      "post": {
        "tags": [
          "v1 > oidc > generate-certificate"
        ],
        "summary": "Generate a new keystore used for signing OIDC messages\n",
        "description": "Generates a new certificate used for signing OIDC messages",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_oidc_generate-certificate"
      }
    },
    "/v1/oidc/public-key": {
      "get": {
        "tags": [
          "v1 > oidc > public-key"
        ],
        "summary": "Get the public key of the keystore used for signing OIDC messages as a JWT\n",
        "description": "Gets the public key of the keystore used for signing OIDC messages as a JWT",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "keys": [
                    {
                      "kty": "<string>",
                      "e": "<string>",
                      "use": "<string>",
                      "kid": "<string>",
                      "alg": "<string>",
                      "iat": "<integer>",
                      "n": "<string>"
                    },
                    {
                      "kty": "<string>",
                      "e": "<string>",
                      "use": "<string>",
                      "kid": "<string>",
                      "alg": "<string>",
                      "iat": "<integer>",
                      "n": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_oidc_public-key"
      }
    },
    "/v1/onboarding/eligible-apps": {
      "get": {
        "tags": [
          "v1 > onboarding > eligible-apps"
        ],
        "summary": "Retrieves a list of applications that are eligible to be used in an onboarding configuration",
        "description": "Retrieves a list of applications that are eligible to be used in an onboarding configuration",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "id:asc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "scopeDescription": "<string>",
                      "siteDescription": "<string>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "scopeDescription": "<string>",
                      "siteDescription": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_onboarding_eligible-apps"
      }
    },
    "/v1/onboarding/eligible-configuration-profiles": {
      "get": {
        "tags": [
          "v1 > onboarding > eligible-configuration-profiles"
        ],
        "summary": "Retrieves a list of configuration profiles that are eligible to be used in an onboarding configuration",
        "description": "Retrieves a list of configuration profiles that are eligible to be used in an onboarding configuration",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "id:asc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "scopeDescription": "<string>",
                      "siteDescription": "<string>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "scopeDescription": "<string>",
                      "siteDescription": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_onboarding_eligible-configuration-profiles"
      }
    },
    "/v1/onboarding/eligible-policies": {
      "get": {
        "tags": [
          "v1 > onboarding > eligible-policies"
        ],
        "summary": "Retrieves a list of policies that are eligible to be used in an onboarding configuration",
        "description": "Retrieves a list of policies that are eligible to be used in an onboarding configuration",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "id:asc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "scopeDescription": "<string>",
                      "siteDescription": "<string>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "scopeDescription": "<string>",
                      "siteDescription": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_onboarding_eligible-policies"
      }
    },
    "/v1/onboarding/history/export": {
      "post": {
        "tags": [
          "v1 > onboarding > history > export"
        ],
        "summary": "Export history object collection in specified format for Onboarding\n",
        "description": "Export history object collection in specified format for Onboarding\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "page": 0,
                  "pageSize": 100,
                  "sort": [
                    "id:desc"
                  ],
                  "filter": "<string>",
                  "fields": [
                    {
                      "fieldName": "<string>",
                      "fieldLabelOverride": "<string>"
                    },
                    {
                      "fieldName": "<string>",
                      "fieldLabelOverride": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/csv"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "date:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and date<2019-12-15"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/csv"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n  \"format\": \"binary\",\n  \"example\": \"username,date,note,details\\nadmin,2019-02-04 21:09:31,Edited,item detail\\n\"\n}"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_onboarding_history_export"
      }
    },
    "/v1/onboarding/history": {
      "get": {
        "tags": [
          "v1 > onboarding > history"
        ],
        "summary": "Get Onboarding history object\n",
        "description": "Gets Onboarding history object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "date:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and date<2019-12-15"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_onboarding_history"
      },
      "post": {
        "tags": [
          "v1 > onboarding > history"
        ],
        "summary": "Add Onboarding history object notes\n",
        "description": "Adds Onboarding history object notes\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_onboarding_history"
      }
    },
    "/v1/onboarding": {
      "get": {
        "tags": [
          "v1 > onboarding"
        ],
        "summary": "Get the current onboarding settings configuration.",
        "description": "Get the current onboarding settings configuration.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "enabled": "<boolean>",
                  "onboardingItems": [
                    {
                      "entityId": "<string>",
                      "priority": "<integer>",
                      "selfServiceEntityType": "OS_X_APP_INSTALLER",
                      "id": "<string>",
                      "entityName": "<string>",
                      "scopeDescription": "<string>",
                      "siteDescription": "<string>"
                    },
                    {
                      "entityId": "<string>",
                      "priority": "<integer>",
                      "selfServiceEntityType": "UNKNOWN",
                      "id": "<string>",
                      "entityName": "<string>",
                      "scopeDescription": "<string>",
                      "siteDescription": "<string>"
                    }
                  ],
                  "id": "<string>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_onboarding"
      },
      "put": {
        "tags": [
          "v1 > onboarding"
        ],
        "summary": "Update the onboarding configuration.",
        "description": "Update the onboarding configuration.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "enabled": "<boolean>",
                  "onboardingItems": [
                    {
                      "entityId": "<string>",
                      "priority": "<integer>",
                      "selfServiceEntityType": "OS_X_POLICY",
                      "id": "<string>"
                    },
                    {
                      "entityId": "<string>",
                      "priority": "<integer>",
                      "selfServiceEntityType": "OS_X_PATCH_POLICY",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "enabled": "<boolean>",
                  "onboardingItems": [
                    {
                      "entityId": "<string>",
                      "priority": "<integer>",
                      "selfServiceEntityType": "OS_X_APP_INSTALLER",
                      "id": "<string>",
                      "entityName": "<string>",
                      "scopeDescription": "<string>",
                      "siteDescription": "<string>"
                    },
                    {
                      "entityId": "<string>",
                      "priority": "<integer>",
                      "selfServiceEntityType": "UNKNOWN",
                      "id": "<string>",
                      "entityName": "<string>",
                      "scopeDescription": "<string>",
                      "siteDescription": "<string>"
                    }
                  ],
                  "id": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_onboarding"
      }
    },
    "/v1/packages/delete-multiple": {
      "post": {
        "tags": [
          "v1 > packages > delete-multiple"
        ],
        "summary": "Delete multiple packages at once",
        "description": "IDs of the packages to be deleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "ids": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_packages_delete-multiple"
      }
    },
    "/v1/packages/export": {
      "post": {
        "tags": [
          "v1 > packages > export"
        ],
        "summary": "Export Packages collection\n",
        "description": "Export Packages collection\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "page": 0,
                  "pageSize": 100,
                  "sort": [
                    "id:desc"
                  ],
                  "filter": "<string>",
                  "fields": [
                    {
                      "fieldName": "<string>",
                      "fieldLabelOverride": "<string>"
                    },
                    {
                      "fieldName": "<string>",
                      "fieldLabelOverride": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/csv"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorts results by one or more criteria, following the format property:asc/desc. Default sort is ID:asc. If using multiple criteria, separate with commas.",
            "example": "id:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filters results. Use RSQL format for query. Allows for many fields, including ID, name, etc. Can be combined with paging and sorting. Default filter is an empty query and returns all results from the requested page."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/csv"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n  \"format\": \"binary\",\n  \"example\": \"id,packageName\\n1,Chrome\\n2,Firefox\\n\"\n}"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_packages_export"
      }
    },
    "/v1/packages/{id}/history/export": {
      "post": {
        "tags": [
          "v1 > packages > {id} > history > export"
        ],
        "summary": "Export history object collection in specified format for specified Packages\n",
        "description": "Export history object collection in specified format for specified Packages\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "page": 0,
                  "pageSize": 100,
                  "sort": [
                    "id:desc"
                  ],
                  "filter": "<string>",
                  "fields": [
                    {
                      "fieldName": "<string>",
                      "fieldLabelOverride": "<string>"
                    },
                    {
                      "fieldName": "<string>",
                      "fieldLabelOverride": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/csv"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorts results by one or more criteria, following the format property:asc/desc. Default sort is ID:asc. If using multiple criteria, separate with commas.",
            "example": "date:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filters results. Use RSQL format for query. Allows for many fields, including ID, name, etc. Can be combined with paging and sorting. Default filter is an empty query and returns all results from the requested page."
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Instance ID of package history note",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/csv"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n  \"format\": \"binary\",\n  \"example\": \"id,username,date,note,details\\n1,admin,2019-02-04 21:09:31,Packages update,Some details\\n\"\n}"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_packages_id_history_export"
      }
    },
    "/v1/packages/{id}/history": {
      "get": {
        "tags": [
          "v1 > packages > {id} > history"
        ],
        "summary": "Get specified Package History object\n",
        "description": "Gets specified Package history object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorts results by one or more criteria, following the format property:asc/desc. Default sort is ID:asc. If using multiple criteria, separate with commas.",
            "example": "date:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filters results. Use RSQL format for query. Allows for many fields, including ID, name, etc. Can be combined with paging and sorting. Default filter is an empty query and returns all results from the requested page."
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Instance ID of package history",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_packages_id_history"
      },
      "post": {
        "tags": [
          "v1 > packages > {id} > history"
        ],
        "summary": "Add specified Package history object notes\n",
        "description": "Adds specified Package history object notes\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Instance ID of package history",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<integer>",
                  "username": "<string>",
                  "date": "<string>",
                  "note": "<string>",
                  "details": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_packages_id_history"
      }
    },
    "/v1/packages/{id}/manifest": {
      "post": {
        "tags": [
          "v1 > packages > {id} > manifest"
        ],
        "summary": "Add a manifest to a package\n",
        "description": "Add a manifest to a package",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "(Required) The manifest file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "multipart/form-data"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Id of the package the manifest should be assigned to",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "categoryId": "<string>",
                  "fileName": "<string>",
                  "fillUserTemplate": "<boolean>",
                  "osInstall": "<boolean>",
                  "packageName": "<string>",
                  "priority": "<integer>",
                  "rebootRequired": "<boolean>",
                  "suppressEula": "<boolean>",
                  "suppressFromDock": "<boolean>",
                  "suppressRegistration": "<boolean>",
                  "suppressUpdates": "<boolean>",
                  "id": "<string>",
                  "info": "<string>",
                  "notes": "<string>",
                  "osRequirements": "<string>",
                  "indexed": "<boolean>",
                  "fillExistingUsers": "<boolean>",
                  "swu": "<boolean>",
                  "selfHealNotify": "<boolean>",
                  "selfHealingAction": "<string>",
                  "serialNumber": "<string>",
                  "parentPackageId": "<string>",
                  "basePath": "<string>",
                  "cloudTransferStatus": "<string>",
                  "ignoreConflicts": "<boolean>",
                  "installLanguage": "<string>",
                  "md5": "<string>",
                  "sha256": "<string>",
                  "hashType": "<string>",
                  "hashValue": "<string>",
                  "size": "<string>",
                  "osInstallerVersion": "<string>",
                  "manifest": "<string>",
                  "manifestFileName": "<string>",
                  "format": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_packages_id_manifest"
      },
      "delete": {
        "tags": [
          "v1 > packages > {id} > manifest"
        ],
        "summary": "Delete the manifest for a specified package\n",
        "description": "Delete the manifest file for a specified package\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Id of the package to delete manifest from",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_packages_id_manifest"
      }
    },
    "/v1/packages/{id}/upload": {
      "post": {
        "tags": [
          "v1 > packages > {id} > upload"
        ],
        "summary": "Upload package",
        "description": "Uploads a package",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "(Required) The file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "multipart/form-data"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of package",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_packages_id_upload"
      }
    },
    "/v1/packages/{id}": {
      "get": {
        "tags": [
          "v1 > packages > {id}"
        ],
        "summary": "Get specified Package object\n",
        "description": "Gets specified Package object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of package",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "categoryId": "<string>",
                  "fileName": "<string>",
                  "fillUserTemplate": "<boolean>",
                  "osInstall": "<boolean>",
                  "packageName": "<string>",
                  "priority": "<integer>",
                  "rebootRequired": "<boolean>",
                  "suppressEula": "<boolean>",
                  "suppressFromDock": "<boolean>",
                  "suppressRegistration": "<boolean>",
                  "suppressUpdates": "<boolean>",
                  "id": "<string>",
                  "info": "<string>",
                  "notes": "<string>",
                  "osRequirements": "<string>",
                  "indexed": "<boolean>",
                  "fillExistingUsers": "<boolean>",
                  "swu": "<boolean>",
                  "selfHealNotify": "<boolean>",
                  "selfHealingAction": "<string>",
                  "serialNumber": "<string>",
                  "parentPackageId": "<string>",
                  "basePath": "<string>",
                  "cloudTransferStatus": "<string>",
                  "ignoreConflicts": "<boolean>",
                  "installLanguage": "<string>",
                  "md5": "<string>",
                  "sha256": "<string>",
                  "hashType": "<string>",
                  "hashValue": "<string>",
                  "size": "<string>",
                  "osInstallerVersion": "<string>",
                  "manifest": "<string>",
                  "manifestFileName": "<string>",
                  "format": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_packages_id"
      },
      "put": {
        "tags": [
          "v1 > packages > {id}"
        ],
        "summary": "Update specified package object\n",
        "description": "Update specified package object\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "categoryId": "<string>",
                  "fileName": "<string>",
                  "fillUserTemplate": "<boolean>",
                  "osInstall": "<boolean>",
                  "packageName": "<string>",
                  "priority": "<integer>",
                  "rebootRequired": "<boolean>",
                  "suppressEula": "<boolean>",
                  "suppressFromDock": "<boolean>",
                  "suppressRegistration": "<boolean>",
                  "suppressUpdates": "<boolean>",
                  "info": "<string>",
                  "notes": "<string>",
                  "osRequirements": "<string>",
                  "fillExistingUsers": "<boolean>",
                  "swu": "<boolean>",
                  "selfHealNotify": "<boolean>",
                  "selfHealingAction": "<string>",
                  "serialNumber": "<string>",
                  "parentPackageId": "<string>",
                  "basePath": "<string>",
                  "ignoreConflicts": "<boolean>",
                  "installLanguage": "<string>",
                  "md5": "<string>",
                  "sha256": "<string>",
                  "hashType": "<string>",
                  "hashValue": "<string>",
                  "osInstallerVersion": "<string>",
                  "manifest": "<string>",
                  "manifestFileName": "<string>",
                  "format": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Instance ID of package",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "categoryId": "<string>",
                  "fileName": "<string>",
                  "fillUserTemplate": "<boolean>",
                  "osInstall": "<boolean>",
                  "packageName": "<string>",
                  "priority": "<integer>",
                  "rebootRequired": "<boolean>",
                  "suppressEula": "<boolean>",
                  "suppressFromDock": "<boolean>",
                  "suppressRegistration": "<boolean>",
                  "suppressUpdates": "<boolean>",
                  "id": "<string>",
                  "info": "<string>",
                  "notes": "<string>",
                  "osRequirements": "<string>",
                  "indexed": "<boolean>",
                  "fillExistingUsers": "<boolean>",
                  "swu": "<boolean>",
                  "selfHealNotify": "<boolean>",
                  "selfHealingAction": "<string>",
                  "serialNumber": "<string>",
                  "parentPackageId": "<string>",
                  "basePath": "<string>",
                  "cloudTransferStatus": "<string>",
                  "ignoreConflicts": "<boolean>",
                  "installLanguage": "<string>",
                  "md5": "<string>",
                  "sha256": "<string>",
                  "hashType": "<string>",
                  "hashValue": "<string>",
                  "size": "<string>",
                  "osInstallerVersion": "<string>",
                  "manifest": "<string>",
                  "manifestFileName": "<string>",
                  "format": "<string>"
                }
              }
            }
          }
        },
        "operationId": "put_v1_packages_id"
      },
      "delete": {
        "tags": [
          "v1 > packages > {id}"
        ],
        "summary": "Remove specified package\n",
        "description": "Removes specified package\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Instance ID of package",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v1_packages_id"
      }
    },
    "/v1/packages": {
      "get": {
        "tags": [
          "v1 > packages"
        ],
        "summary": "Retrieve Packages",
        "description": "Retrieves packages",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorts results by one or more criteria, following the format property:asc/desc. Default sort is ID:asc. If using multiple criteria, separate with commas.",
            "example": "id:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filters results. Use RSQL format for query. Allows for many fields, including ID, name, etc. Can be combined with paging and sorting. Fields allowed in the query: id, fileName, packageName, categoryId, info, notes, manifestFileName. Default filter is an empty query and returns all results from the requested page."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "categoryId": "<string>",
                      "fileName": "<string>",
                      "fillUserTemplate": "<boolean>",
                      "osInstall": "<boolean>",
                      "packageName": "<string>",
                      "priority": "<integer>",
                      "rebootRequired": "<boolean>",
                      "suppressEula": "<boolean>",
                      "suppressFromDock": "<boolean>",
                      "suppressRegistration": "<boolean>",
                      "suppressUpdates": "<boolean>",
                      "id": "<string>",
                      "info": "<string>",
                      "notes": "<string>",
                      "osRequirements": "<string>",
                      "indexed": "<boolean>",
                      "fillExistingUsers": "<boolean>",
                      "swu": "<boolean>",
                      "selfHealNotify": "<boolean>",
                      "selfHealingAction": "<string>",
                      "serialNumber": "<string>",
                      "parentPackageId": "<string>",
                      "basePath": "<string>",
                      "cloudTransferStatus": "<string>",
                      "ignoreConflicts": "<boolean>",
                      "installLanguage": "<string>",
                      "md5": "<string>",
                      "sha256": "<string>",
                      "hashType": "<string>",
                      "hashValue": "<string>",
                      "size": "<string>",
                      "osInstallerVersion": "<string>",
                      "manifest": "<string>",
                      "manifestFileName": "<string>",
                      "format": "<string>"
                    },
                    {
                      "categoryId": "<string>",
                      "fileName": "<string>",
                      "fillUserTemplate": "<boolean>",
                      "osInstall": "<boolean>",
                      "packageName": "<string>",
                      "priority": "<integer>",
                      "rebootRequired": "<boolean>",
                      "suppressEula": "<boolean>",
                      "suppressFromDock": "<boolean>",
                      "suppressRegistration": "<boolean>",
                      "suppressUpdates": "<boolean>",
                      "id": "<string>",
                      "info": "<string>",
                      "notes": "<string>",
                      "osRequirements": "<string>",
                      "indexed": "<boolean>",
                      "fillExistingUsers": "<boolean>",
                      "swu": "<boolean>",
                      "selfHealNotify": "<boolean>",
                      "selfHealingAction": "<string>",
                      "serialNumber": "<string>",
                      "parentPackageId": "<string>",
                      "basePath": "<string>",
                      "cloudTransferStatus": "<string>",
                      "ignoreConflicts": "<boolean>",
                      "installLanguage": "<string>",
                      "md5": "<string>",
                      "sha256": "<string>",
                      "hashType": "<string>",
                      "hashValue": "<string>",
                      "size": "<string>",
                      "osInstallerVersion": "<string>",
                      "manifest": "<string>",
                      "manifestFileName": "<string>",
                      "format": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_packages"
      },
      "post": {
        "tags": [
          "v1 > packages"
        ],
        "summary": "Create package",
        "description": "Create package",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "categoryId": "<string>",
                  "fileName": "<string>",
                  "fillUserTemplate": "<boolean>",
                  "osInstall": "<boolean>",
                  "packageName": "<string>",
                  "priority": "<integer>",
                  "rebootRequired": "<boolean>",
                  "suppressEula": "<boolean>",
                  "suppressFromDock": "<boolean>",
                  "suppressRegistration": "<boolean>",
                  "suppressUpdates": "<boolean>",
                  "info": "<string>",
                  "notes": "<string>",
                  "osRequirements": "<string>",
                  "fillExistingUsers": "<boolean>",
                  "swu": "<boolean>",
                  "selfHealNotify": "<boolean>",
                  "selfHealingAction": "<string>",
                  "serialNumber": "<string>",
                  "parentPackageId": "<string>",
                  "basePath": "<string>",
                  "ignoreConflicts": "<boolean>",
                  "installLanguage": "<string>",
                  "md5": "<string>",
                  "sha256": "<string>",
                  "hashType": "<string>",
                  "hashValue": "<string>",
                  "osInstallerVersion": "<string>",
                  "manifest": "<string>",
                  "manifestFileName": "<string>",
                  "format": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          }
        },
        "operationId": "post_v1_packages"
      }
    },
    "/v1/parent-app/history": {
      "get": {
        "tags": [
          "v1 > parent-app > history"
        ],
        "summary": "Get Jamf Parent app settings history\n",
        "description": "Gets Jamf Parent app settings history\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "date:desc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_parent-app_history"
      },
      "post": {
        "tags": [
          "v1 > parent-app > history"
        ],
        "summary": "Add Jamf Parent app settings history notes\n",
        "description": "Adds Jamf Parent app settings history notes\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<integer>",
                  "username": "<string>",
                  "date": "<string>",
                  "note": "<string>",
                  "details": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_parent-app_history"
      }
    },
    "/v1/parent-app": {
      "get": {
        "tags": [
          "v1 > parent-app"
        ],
        "summary": "Get the current Jamf Parent app settings\n",
        "description": "Get the current Jamf Parent app settings\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "deviceGroupId": "<integer>",
                  "isEnabled": "<boolean>",
                  "restrictedTimes": {
                    "key": "SUNDAY",
                    "magna878": {
                      "beginTime": "<string>",
                      "endTime": "<string>"
                    }
                  },
                  "timezoneId": "<string>",
                  "allowTemplates": "<boolean>",
                  "disassociateOnWipeAndReEnroll": "<boolean>",
                  "allowClearPasscode": "<boolean>",
                  "safelistedApps": [
                    {
                      "name": "<string>",
                      "bundleId": "<string>"
                    },
                    {
                      "name": "<string>",
                      "bundleId": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_parent-app"
      },
      "put": {
        "tags": [
          "v1 > parent-app"
        ],
        "summary": "Update Jamf Parent app settings\n",
        "description": "Update Jamf Parent app settings\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "deviceGroupId": "<integer>",
                  "isEnabled": "<boolean>",
                  "restrictedTimes": {
                    "key": "SUNDAY",
                    "magna878": {
                      "beginTime": "<string>",
                      "endTime": "<string>"
                    }
                  },
                  "timezoneId": "<string>",
                  "allowTemplates": "<boolean>",
                  "disassociateOnWipeAndReEnroll": "<boolean>",
                  "allowClearPasscode": "<boolean>",
                  "safelistedApps": [
                    {
                      "name": "<string>",
                      "bundleId": "<string>"
                    },
                    {
                      "name": "<string>",
                      "bundleId": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "deviceGroupId": "<integer>",
                  "isEnabled": "<boolean>",
                  "restrictedTimes": {
                    "key": "SUNDAY",
                    "magna878": {
                      "beginTime": "<string>",
                      "endTime": "<string>"
                    }
                  },
                  "timezoneId": "<string>",
                  "allowTemplates": "<boolean>",
                  "disassociateOnWipeAndReEnroll": "<boolean>",
                  "allowClearPasscode": "<boolean>",
                  "safelistedApps": [
                    {
                      "name": "<string>",
                      "bundleId": "<string>"
                    },
                    {
                      "name": "<string>",
                      "bundleId": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_parent-app"
      }
    },
    "/v1/policy-properties": {
      "get": {
        "tags": [
          "v1 > policy-properties"
        ],
        "summary": "Get Policy Properties object\n",
        "description": "Gets `Policy Properties` object.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "policiesRequireNetworkStateChange": false,
                  "allowNetworkStateChangeTriggers": true
                }
              }
            }
          }
        },
        "operationId": "get_v1_policy-properties"
      },
      "put": {
        "tags": [
          "v1 > policy-properties"
        ],
        "summary": "Update Policy Properties object\n",
        "description": "Update Policy Properties object\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "policiesRequireNetworkStateChange": false,
                  "allowNetworkStateChangeTriggers": true
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "policiesRequireNetworkStateChange": false,
                  "allowNetworkStateChangeTriggers": true
                }
              }
            }
          }
        },
        "operationId": "put_v1_policy-properties"
      }
    },
    "/v1/reenrollment/history/export": {
      "post": {
        "tags": [
          "v1 > reenrollment > history > export"
        ],
        "summary": "Export reenrollment history collection\n",
        "description": "Export reenrollment history collection\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "page": 0,
                  "pageSize": 100,
                  "sort": [
                    "id:desc"
                  ],
                  "filter": "<string>",
                  "fields": [
                    {
                      "fieldName": "<string>",
                      "fieldLabelOverride": "<string>"
                    },
                    {
                      "fieldName": "<string>",
                      "fieldLabelOverride": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/csv,application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is id:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=id:desc,name:asc ",
            "example": "id:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name. This param can be combined with paging and sorting. Example: name==\"*script*\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/csv,application/json"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n  \"format\": \"binary\",\n  \"example\": \"Username,DATE,NOTES,Details\\nadmin, 2022-02-04T11:56:26.343Z, Edited ,Re-enrollment Restricted true\\n\"\n}"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_reenrollment_history_export"
      }
    },
    "/v1/reenrollment/history": {
      "get": {
        "tags": [
          "v1 > reenrollment > history"
        ],
        "summary": "Get Re-enrollment history object\n",
        "description": "Gets Re-enrollment history object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "date:desc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_reenrollment_history"
      },
      "post": {
        "tags": [
          "v1 > reenrollment > history"
        ],
        "summary": "Add specified Re-enrollment history object notes\n",
        "description": "Adds specified Re-enrollment history object notes\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<integer>",
                  "username": "<string>",
                  "date": "<string>",
                  "note": "<string>",
                  "details": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_reenrollment_history"
      }
    },
    "/v1/reenrollment": {
      "get": {
        "tags": [
          "v1 > reenrollment"
        ],
        "summary": "Get Re-enrollment object\n",
        "description": "Gets Re-enrollment object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "flushMDMQueue": "DELETE_NOTHING",
                  "isFlushPolicyHistoryEnabled": false,
                  "isFlushLocationInformationEnabled": false,
                  "isFlushLocationInformationHistoryEnabled": false,
                  "isFlushExtensionAttributesEnabled": false,
                  "isFlushSoftwareUpdatePlansEnabled": false
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_reenrollment"
      },
      "put": {
        "tags": [
          "v1 > reenrollment"
        ],
        "summary": "Update the Re-enrollment object\n",
        "description": "Update the Re-enrollment object\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "flushMDMQueue": "DELETE_NOTHING",
                  "isFlushPolicyHistoryEnabled": false,
                  "isFlushLocationInformationEnabled": false,
                  "isFlushLocationInformationHistoryEnabled": false,
                  "isFlushExtensionAttributesEnabled": false,
                  "isFlushSoftwareUpdatePlansEnabled": false
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "flushMDMQueue": "DELETE_NOTHING",
                  "isFlushPolicyHistoryEnabled": false,
                  "isFlushLocationInformationEnabled": false,
                  "isFlushLocationInformationHistoryEnabled": false,
                  "isFlushExtensionAttributesEnabled": false,
                  "isFlushSoftwareUpdatePlansEnabled": false
                }
              }
            }
          }
        },
        "operationId": "put_v1_reenrollment"
      }
    },
    "/v1/return-to-service/{id}": {
      "get": {
        "tags": [
          "v1 > return-to-service > {id}"
        ],
        "summary": "Retrieve a Return to Service Configuration with the supplied id\n",
        "description": "Retrieves a Return to Service Configuration with the supplied id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Return to Service Configuration identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "displayName": "false",
                  "wifiProfileId": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_return-to-service_id"
      },
      "put": {
        "tags": [
          "v1 > return-to-service > {id}"
        ],
        "summary": "Update a Return to Service Configuration\n",
        "description": "Updates a Return to Service Configuration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "displayName": "false",
                  "wifiProfileId": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Return to Service Configuration identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "displayName": "false",
                  "wifiProfileId": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_return-to-service_id"
      },
      "delete": {
        "tags": [
          "v1 > return-to-service > {id}"
        ],
        "summary": "Delete a Return To Service Configuration with the supplied id\n",
        "description": "Deletes a Return To Service Configuration with the supplied id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Return To Service Configurations identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_return-to-service_id"
      }
    },
    "/v1/return-to-service": {
      "get": {
        "tags": [
          "v1 > return-to-service"
        ],
        "summary": "Get all Return to Service Configurations\n",
        "description": "Gets all return to service configurations.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<string>",
                      "displayName": "false",
                      "wifiProfileId": "<string>"
                    },
                    {
                      "id": "<string>",
                      "displayName": "false",
                      "wifiProfileId": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_return-to-service"
      },
      "post": {
        "tags": [
          "v1 > return-to-service"
        ],
        "summary": "Create a Return to Service Configuration\n",
        "description": "Create a return to service configuration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "displayName": "false",
                  "wifiProfileId": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_return-to-service"
      }
    },
    "/v1/scheduler/jobs/{jobKey}/triggers": {
      "get": {
        "tags": [
          "v1 > scheduler > jobs > {jobKey} > triggers"
        ],
        "summary": "Retrieve all triggers for a Jamf Pro Scheduler job",
        "description": "Retrieves all triggers for a Jamf Pro Scheduler job",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorts results by one or more criteria, following the format property:asc/desc. Default sort is nextFireTime:asc. If using multiple criteria, separate with commas.",
            "example": "nextFireTime:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter the Jamf Pro Scheduler triggers collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: triggerKey, previousFireTime, nextFireTime."
          },
          {
            "name": "jobKey",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Jamf Pro Scheduler Job Key",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "triggerKey": "<string>",
                      "previousFireTime": "<dateTime>",
                      "nextFireTime": "<dateTime>"
                    },
                    {
                      "triggerKey": "<string>",
                      "previousFireTime": "<dateTime>",
                      "nextFireTime": "<dateTime>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_scheduler_jobs_jobKey_triggers"
      }
    },
    "/v1/scheduler/jobs": {
      "get": {
        "tags": [
          "v1 > scheduler > jobs"
        ],
        "summary": "Retrieve all Jamf Pro Scheduler jobs",
        "description": "Retrieves the names of all Jamf Pro Scheduler jobs",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "jobKeys": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_scheduler_jobs"
      }
    },
    "/v1/scheduler/summary": {
      "get": {
        "tags": [
          "v1 > scheduler > summary"
        ],
        "summary": "Retrieve a summary of the Jamf Pro Scheduler",
        "description": "Retrieves a summary of the Jamf Pro Scheduler",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "numberOfPendingJobs": "<integer>",
                  "numberOfExecutingJobs": "<integer>",
                  "numberOfExecutedJobs": "<integer>",
                  "started": "<boolean>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_scheduler_summary"
      }
    },
    "/v1/scripts/{id}/download": {
      "get": {
        "tags": [
          "v1 > scripts > {id} > download"
        ],
        "summary": "Download a text file of the Script contents\n",
        "description": "Download a text file of the script contents",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/plain"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) id of the script to be downloaded",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<binary>"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_scripts_id_download"
      }
    },
    "/v1/scripts/{id}/history": {
      "get": {
        "tags": [
          "v1 > scripts > {id} > history"
        ],
        "summary": "Get specified Script history object\n",
        "description": "Gets specified Script history object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "date:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) id of script history record",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_scripts_id_history"
      },
      "post": {
        "tags": [
          "v1 > scripts > {id} > history"
        ],
        "summary": "Add specified Script history object notes\n",
        "description": "Adds specified Script history object notes\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of script history record",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<integer>",
                  "username": "<string>",
                  "date": "<string>",
                  "note": "<string>",
                  "details": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_scripts_id_history"
      }
    },
    "/v1/scripts/{id}": {
      "get": {
        "tags": [
          "v1 > scripts > {id}"
        ],
        "summary": "Retrieve a full script object\n",
        "description": "Retrieves a full script object",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Script object identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "<string>",
                  "id": "<string>",
                  "info": "<string>",
                  "notes": "<string>",
                  "priority": "BEFORE",
                  "categoryId": "<string>",
                  "categoryName": "<string>",
                  "parameter4": "<string>",
                  "parameter5": "<string>",
                  "parameter6": "<string>",
                  "parameter7": "<string>",
                  "parameter8": "<string>",
                  "parameter9": "<string>",
                  "parameter10": "<string>",
                  "parameter11": "<string>",
                  "osRequirements": "<string>",
                  "scriptContents": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_scripts_id"
      },
      "put": {
        "tags": [
          "v1 > scripts > {id}"
        ],
        "summary": "Replace the script at the id with the supplied information\n",
        "description": "Replaces the script at the id with the supplied information",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "info": "<string>",
                  "notes": "<string>",
                  "priority": "AT_REBOOT",
                  "categoryId": "<string>",
                  "categoryName": "<string>",
                  "parameter4": "<string>",
                  "parameter5": "<string>",
                  "parameter6": "<string>",
                  "parameter7": "<string>",
                  "parameter8": "<string>",
                  "parameter9": "<string>",
                  "parameter10": "<string>",
                  "parameter11": "<string>",
                  "osRequirements": "<string>",
                  "scriptContents": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Script object identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "<string>",
                  "id": "<string>",
                  "info": "<string>",
                  "notes": "<string>",
                  "priority": "BEFORE",
                  "categoryId": "<string>",
                  "categoryName": "<string>",
                  "parameter4": "<string>",
                  "parameter5": "<string>",
                  "parameter6": "<string>",
                  "parameter7": "<string>",
                  "parameter8": "<string>",
                  "parameter9": "<string>",
                  "parameter10": "<string>",
                  "parameter11": "<string>",
                  "osRequirements": "<string>",
                  "scriptContents": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_scripts_id"
      },
      "delete": {
        "tags": [
          "v1 > scripts > {id}"
        ],
        "summary": "Delete a Script at the specified id\n",
        "description": "Deletes a script at the specified id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Script object identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v1_scripts_id"
      }
    },
    "/v1/scripts": {
      "get": {
        "tags": [
          "v1 > scripts"
        ],
        "summary": "Search for sorted and paged Scripts\n",
        "description": "Search for sorted and paged scripts",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Fields allowed in the query: `id`, `name`, `info`, `notes`, `priority`, `categoryId`, `categoryName`, `parameter4` up to `parameter11`, `osRequirements`, `scriptContents`. Example: sort=date:desc,name:asc ",
            "example": "name:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter scripts collection. Default search is empty query - returning all results for the requested page. Fields allowed in the query: `id`, `name`, `info`, `notes`, `priority`, `categoryId`, `categoryName`, `parameter4` up to `parameter11`, `osRequirements`, `scriptContents`. This param can be combined with paging and sorting. Example: filter=categoryName==\"Category\" and name==\"*script name*\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "name": "<string>",
                      "id": "<string>",
                      "info": "<string>",
                      "notes": "<string>",
                      "priority": "BEFORE",
                      "categoryId": "<string>",
                      "categoryName": "<string>",
                      "parameter4": "<string>",
                      "parameter5": "<string>",
                      "parameter6": "<string>",
                      "parameter7": "<string>",
                      "parameter8": "<string>",
                      "parameter9": "<string>",
                      "parameter10": "<string>",
                      "parameter11": "<string>",
                      "osRequirements": "<string>",
                      "scriptContents": "<string>"
                    },
                    {
                      "name": "<string>",
                      "id": "<string>",
                      "info": "<string>",
                      "notes": "<string>",
                      "priority": "BEFORE",
                      "categoryId": "<string>",
                      "categoryName": "<string>",
                      "parameter4": "<string>",
                      "parameter5": "<string>",
                      "parameter6": "<string>",
                      "parameter7": "<string>",
                      "parameter8": "<string>",
                      "parameter9": "<string>",
                      "parameter10": "<string>",
                      "parameter11": "<string>",
                      "osRequirements": "<string>",
                      "scriptContents": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_scripts"
      },
      "post": {
        "tags": [
          "v1 > scripts"
        ],
        "summary": "Create a Script\n",
        "description": "Creates a script",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "info": "<string>",
                  "notes": "<string>",
                  "priority": "AT_REBOOT",
                  "categoryId": "<string>",
                  "categoryName": "<string>",
                  "parameter4": "<string>",
                  "parameter5": "<string>",
                  "parameter6": "<string>",
                  "parameter7": "<string>",
                  "parameter8": "<string>",
                  "parameter9": "<string>",
                  "parameter10": "<string>",
                  "parameter11": "<string>",
                  "osRequirements": "<string>",
                  "scriptContents": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          }
        },
        "operationId": "post_v1_scripts"
      }
    },
    "/v1/self-service/settings": {
      "get": {
        "tags": [
          "v1 > self-service > settings"
        ],
        "summary": "Get an object representation of Self Service settings\n",
        "description": "gets an object representation of Self Service settings\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "installSettings": {
                    "installLocation": "<string>",
                    "installAutomatically": false
                  },
                  "loginSettings": {
                    "authType": "Basic",
                    "userLoginLevel": "Required",
                    "allowRememberMe": false,
                    "useFido2": false
                  },
                  "configurationSettings": {
                    "bookmarksName": "<string>",
                    "notificationsEnabled": false,
                    "alertUserApprovedMdm": true,
                    "defaultLandingPage": "HOME",
                    "defaultHomeCategoryId": -1
                  }
                }
              }
            }
          }
        },
        "operationId": "get_v1_self-service_settings"
      },
      "put": {
        "tags": [
          "v1 > self-service > settings"
        ],
        "summary": "Put an object representation of Self Service settings\n",
        "description": "puts an object representation of Self Service settings\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "installSettings": {
                    "installLocation": "<string>",
                    "installAutomatically": false
                  },
                  "loginSettings": {
                    "authType": "Basic",
                    "userLoginLevel": "Required",
                    "allowRememberMe": false,
                    "useFido2": false
                  },
                  "configurationSettings": {
                    "bookmarksName": "<string>",
                    "notificationsEnabled": false,
                    "alertUserApprovedMdm": true,
                    "defaultLandingPage": "HOME",
                    "defaultHomeCategoryId": -1
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "installSettings": {
                    "installLocation": "<string>",
                    "installAutomatically": false
                  },
                  "loginSettings": {
                    "authType": "Basic",
                    "userLoginLevel": "Required",
                    "allowRememberMe": false,
                    "useFido2": false
                  },
                  "configurationSettings": {
                    "bookmarksName": "<string>",
                    "notificationsEnabled": false,
                    "alertUserApprovedMdm": true,
                    "defaultLandingPage": "HOME",
                    "defaultHomeCategoryId": -1
                  }
                }
              }
            }
          }
        },
        "operationId": "put_v1_self-service_settings"
      }
    },
    "/v1/self-service/branding/ios/{id}": {
      "get": {
        "tags": [
          "v1 > self-service > branding > ios > {id}"
        ],
        "summary": "Read a single Self Service iOS branding configuration indicated by the provided id\n",
        "description": "Read a single Self Service iOS branding configuration indicated by the provided id.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) id of iOS branding configuration",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "brandingName": "<string>",
                  "brandingNameColorCode": "<string>",
                  "headerBackgroundColorCode": "<string>",
                  "menuIconColorCode": "<string>",
                  "statusBarTextColor": "<string>",
                  "id": "<string>",
                  "iconId": "<integer>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_self-service_branding_ios_id"
      },
      "put": {
        "tags": [
          "v1 > self-service > branding > ios > {id}"
        ],
        "summary": "Update a Self Service iOS branding configuration with the supplied details\n",
        "description": "Update a Self Service iOS branding configuration with the supplied details",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "brandingName": "<string>",
                  "brandingNameColorCode": "<string>",
                  "headerBackgroundColorCode": "<string>",
                  "menuIconColorCode": "<string>",
                  "statusBarTextColor": "<string>",
                  "iconId": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) id of iOS branding configuration",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "brandingName": "<string>",
                  "brandingNameColorCode": "<string>",
                  "headerBackgroundColorCode": "<string>",
                  "menuIconColorCode": "<string>",
                  "statusBarTextColor": "<string>",
                  "id": "<string>",
                  "iconId": "<integer>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_self-service_branding_ios_id"
      },
      "delete": {
        "tags": [
          "v1 > self-service > branding > ios > {id}"
        ],
        "summary": "Delete the Self Service iOS branding configuration indicated by the provided id\n",
        "description": "Delete the Self Service iOS branding configuration indicated by the provided id.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) id of iOS branding configuration",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_self-service_branding_ios_id"
      }
    },
    "/v1/self-service/branding/ios": {
      "get": {
        "tags": [
          "v1 > self-service > branding > ios"
        ],
        "summary": "Search for sorted and paged iOS branding configurations\n",
        "description": "Search for sorted and paged iOS branding configurations",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=id:desc,brandingName:asc ",
            "example": "id:asc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "brandingName": "<string>",
                      "brandingNameColorCode": "<string>",
                      "headerBackgroundColorCode": "<string>",
                      "menuIconColorCode": "<string>",
                      "statusBarTextColor": "<string>",
                      "id": "<string>",
                      "iconId": "<integer>"
                    },
                    {
                      "brandingName": "<string>",
                      "brandingNameColorCode": "<string>",
                      "headerBackgroundColorCode": "<string>",
                      "menuIconColorCode": "<string>",
                      "statusBarTextColor": "<string>",
                      "id": "<string>",
                      "iconId": "<integer>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_self-service_branding_ios"
      },
      "post": {
        "tags": [
          "v1 > self-service > branding > ios"
        ],
        "summary": "Create a Self Service iOS branding configuration with the supplied\n",
        "description": "Create a Self Service iOS branding configuration with the supplied details",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "brandingName": "<string>",
                  "brandingNameColorCode": "<string>",
                  "headerBackgroundColorCode": "<string>",
                  "menuIconColorCode": "<string>",
                  "statusBarTextColor": "<string>",
                  "iconId": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          }
        },
        "operationId": "post_v1_self-service_branding_ios"
      }
    },
    "/v1/self-service/branding/macos/{id}": {
      "get": {
        "tags": [
          "v1 > self-service > branding > macos > {id}"
        ],
        "summary": "Read a single Self Service macOS branding configuration indicated by the provided id\n",
        "description": "Read a single Self Service macOS branding configuration indicated by the provided id.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) id of macOS branding configuration",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "applicationName": "<string>",
                  "brandingName": "<string>",
                  "brandingNameSecondary": "<string>",
                  "iconId": "<integer>",
                  "brandingHeaderImageId": "<integer>",
                  "homeHeading": "<string>",
                  "homeSubheading": "<string>"
                }
              }
            }
          }
        },
        "operationId": "get_v1_self-service_branding_macos_id"
      },
      "put": {
        "tags": [
          "v1 > self-service > branding > macos > {id}"
        ],
        "summary": "Update a Self Service macOS branding configuration with the supplied details\n",
        "description": "Update a Self Service macOS branding configuration with the supplied details",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "applicationName": "<string>",
                  "brandingName": "<string>",
                  "brandingNameSecondary": "<string>",
                  "iconId": "<integer>",
                  "brandingHeaderImageId": "<integer>",
                  "homeHeading": "<string>",
                  "homeSubheading": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) id of macOS branding configuration",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "applicationName": "<string>",
                  "brandingName": "<string>",
                  "brandingNameSecondary": "<string>",
                  "iconId": "<integer>",
                  "brandingHeaderImageId": "<integer>",
                  "homeHeading": "<string>",
                  "homeSubheading": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_self-service_branding_macos_id"
      },
      "delete": {
        "tags": [
          "v1 > self-service > branding > macos > {id}"
        ],
        "summary": "Delete the Self Service macOS branding configuration indicated by the provided id\n",
        "description": "Delete the Self Service macOS branding configuration indicated by the provided id.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) id of macOS branding configuration",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_self-service_branding_macos_id"
      }
    },
    "/v1/self-service/branding/macos": {
      "get": {
        "tags": [
          "v1 > self-service > branding > macos"
        ],
        "summary": "Search for sorted and paged macOS branding configurations\n",
        "description": "Search for sorted and paged macOS branding configurations",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=id:desc,brandingName:asc ",
            "example": "id:asc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<string>",
                      "applicationName": "<string>",
                      "brandingName": "<string>",
                      "brandingNameSecondary": "<string>",
                      "iconId": "<integer>",
                      "brandingHeaderImageId": "<integer>",
                      "homeHeading": "<string>",
                      "homeSubheading": "<string>"
                    },
                    {
                      "id": "<string>",
                      "applicationName": "<string>",
                      "brandingName": "<string>",
                      "brandingNameSecondary": "<string>",
                      "iconId": "<integer>",
                      "brandingHeaderImageId": "<integer>",
                      "homeHeading": "<string>",
                      "homeSubheading": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_self-service_branding_macos"
      },
      "post": {
        "tags": [
          "v1 > self-service > branding > macos"
        ],
        "summary": "Create a Self Service macOS branding configuration with the supplied\n",
        "description": "Create a Self Service macOS branding configuration with the supplied details",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "applicationName": "<string>",
                  "brandingName": "<string>",
                  "brandingNameSecondary": "<string>",
                  "iconId": "<integer>",
                  "brandingHeaderImageId": "<integer>",
                  "homeHeading": "<string>",
                  "homeSubheading": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          }
        },
        "operationId": "post_v1_self-service_branding_macos"
      }
    },
    "/v1/sites/{id}/objects": {
      "get": {
        "tags": [
          "v1 > sites > {id} > objects"
        ],
        "summary": "Find and filter site objects for a site ID\n",
        "description": "Find site objects for Site ID, with the ability to filter out different object types and object IDs for the site ID\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: `property:asc/desc`. Default sort\nis `objectType:asc`. Multiple sort criteria are supported and must be separated\nwith a comma.\n\nExample: `sort=objectId:asc,objectType:desc`.\n",
            "example": "objectType:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing filter of site object information.\nDefault filter returns all objects for the site ID.\n\nFields allowed in the query: `objectType`, `objectId`\n\nExample: `filter=objectType==\"User\"`\n    \nList of `objectType` options (case-insensitive) [\"Computer\", \"Peripheral\", \"Licensed Software\", \"Licensed Software Template\", \"Policy\", \"macOS Configuration Profile\", \"Restricted Software\", \"Managed Preference Profile\", \"Computer Group\", \"Mobile Device\", \"Apple TV\", \"Android Device\", \"User Group\", \"iOS Configuration Profile\", \"Mobile Device App\", \"E-book\", \"Mobile Device Group\", \"Classroom\", \"Advanced Computer Search\", \"Advanced Mobile Search\", \"Advanced User Search\", \"Advanced User Content Search\", \"Computer Invitation\", \"Mobile Device Invitation\", \"Mobile Device Enrollment Profile\", \"Device Enrollment Program Instance\", \"Mobile Device Prestage\", \"Computer DEP Prestage\", \"Enrollment Customization\", \"VPP Location\", \"VPP Subscription\", \"VPP Invitation\", \"VPP Assignment\", \"User\", \"Network Integration\", \"Mac App\", \"App Installer\", \"BYO Profile\", \"Self Service Plugin\", \"Software Title\", \"Patch Software Title Summary\", \"Patch Policy\", \"Patch Software Title Configuration\", \"Change Password\", \"Mobile Device Inventory\", \"Computer Inventory\", \"Change Management\", \"Licensed Software License\"]\n",
            "example": "objectType==\"User\""
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Site ID to get objects for\n",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "objectId": "<string>",
                    "objectType": "Change Password",
                    "siteId": "<string>"
                  },
                  {
                    "objectId": "<string>",
                    "objectType": "Classroom",
                    "siteId": "<string>"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v1_sites_id_objects"
      }
    },
    "/v1/sites": {
      "get": {
        "tags": [
          "v1 > sites"
        ],
        "summary": "Find all sites\n",
        "description": "Find all sites\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "id": "<string>",
                    "name": "<string>"
                  },
                  {
                    "id": "<string>",
                    "name": "<string>"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v1_sites"
      }
    },
    "/v1/slasa": {
      "get": {
        "tags": [
          "v1 > slasa"
        ],
        "summary": "Get the status of SLASA",
        "description": "Get if SLASA has been accepted or not",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "slasaAcceptanceStatus": "ACCEPTED"
                }
              }
            }
          }
        },
        "operationId": "get_v1_slasa"
      },
      "post": {
        "tags": [
          "v1 > slasa"
        ],
        "summary": "Accept the SLASA",
        "description": "Accept the SLASA for Jamf Pro.",
        "requestBody": {
          "content": {}
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "post_v1_slasa"
      }
    },
    "/v1/computers/{id}/recalculate-smart-groups": {
      "post": {
        "tags": [
          "v1 > computers > {id} > recalculate-smart-groups"
        ],
        "summary": "Recalculate a smart group for the given id\n",
        "description": "Recalculates a smart group for the given id and then\nreturns the count of smart groups the computer falls into\n",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) id of computer",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "count": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_computers_id_recalculate-smart-groups"
      }
    },
    "/v1/smart-computer-groups/{id}/recalculate": {
      "post": {
        "tags": [
          "v1 > smart-computer-groups > {id} > recalculate"
        ],
        "summary": "Recalculate the smart group for the given id\n",
        "description": "Recalculates the smart group for the given id and then\nreturns the ids for the computers in the smart group\n",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of smart group",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "count": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_smart-computer-groups_id_recalculate"
      }
    },
    "/v1/mobile-devices/{id}/recalculate-smart-groups": {
      "post": {
        "tags": [
          "v1 > mobile-devices > {id} > recalculate-smart-groups"
        ],
        "summary": "Recalculate all smart groups for the given device id and then return count of smart groups that device fall into\n",
        "description": "Recalculates all smart groups for the given device id and then\nreturns the count of smart groups the device falls into\n",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) id of mobile device",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "count": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_mobile-devices_id_recalculate-smart-groups"
      }
    },
    "/v1/smart-mobile-device-groups/{id}/recalculate": {
      "post": {
        "tags": [
          "v1 > smart-mobile-device-groups > {id} > recalculate"
        ],
        "summary": "Recalculate a smart group for the given id then return the ids for the devices in the smart group\n",
        "description": "recalculates a smart group for the given id and then\nreturns the ids for the devices in the smart group\n",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of smart group",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "count": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_smart-mobile-device-groups_id_recalculate"
      }
    },
    "/v1/smart-user-groups/{id}/recalculate": {
      "post": {
        "tags": [
          "v1 > smart-user-groups > {id} > recalculate"
        ],
        "summary": "Recalculate the smart group for the given id and then return the ids for the users in the smart group\n",
        "description": "Recalculates the smart group for the given id and then\nreturns the ids for the users in the smart group\n",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of smart group",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "count": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_smart-user-groups_id_recalculate"
      }
    },
    "/v1/users/{id}/recalculate-smart-groups": {
      "post": {
        "tags": [
          "v1 > users > {id} > recalculate-smart-groups"
        ],
        "summary": "Recalculate a smart group for the given user id and then return the count of smart groups the user falls into\n",
        "description": "Recalculates a smart group for the given user id and then\nreturns the count of smart groups the user falls into\n",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) id of user",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "count": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_users_id_recalculate-smart-groups"
      }
    },
    "/v1/smtp-server/history": {
      "get": {
        "tags": [
          "v1 > smtp-server > history"
        ],
        "summary": "Get specified SMTP Server history object\n",
        "description": "Get specified SMTP Server history object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,username:asc ",
            "example": "date:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<string>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<string>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_smtp-server_history"
      },
      "post": {
        "tags": [
          "v1 > smtp-server > history"
        ],
        "summary": "Add SMTP Server history object notes\n",
        "description": "Adds SMTP Server history object notes\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_smtp-server_history"
      }
    },
    "/v1/smtp-server/test": {
      "post": {
        "tags": [
          "v1 > smtp-server > test"
        ],
        "summary": "Test functionality of an SMTP Server",
        "description": "Test functionality of an SMTP Server",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "recipientEmail": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_smtp-server_test"
      }
    },
    "/v1/smtp-server": {
      "get": {
        "tags": [
          "v1 > smtp-server"
        ],
        "summary": "Finds the Jamf Pro SMTP Server information\n",
        "description": "Finds the Jamf Pro SMTP Server information\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "connectionTimeout": 5,
                  "enabled": false,
                  "encryptionType": "NONE",
                  "port": 25,
                  "requiresAuthentication": false,
                  "senderDisplayName": "Jamf Pro Server",
                  "senderEmailAddress": "",
                  "server": "",
                  "username": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_smtp-server"
      },
      "put": {
        "tags": [
          "v1 > smtp-server"
        ],
        "summary": "Updates Jamf Pro SMTP Server information\n",
        "description": "Updates Jamf Pro SMTP Server information. If requiresAuthentication is set to true, a username and password must be provided\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "connectionTimeout": 5,
                  "enabled": false,
                  "encryptionType": "NONE",
                  "port": 25,
                  "requiresAuthentication": false,
                  "senderDisplayName": "Jamf Pro Server",
                  "senderEmailAddress": "",
                  "server": "",
                  "username": "",
                  "password": ""
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/merge-patch+json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "connectionTimeout": 5,
                  "enabled": false,
                  "encryptionType": "NONE",
                  "port": 25,
                  "requiresAuthentication": false,
                  "senderDisplayName": "Jamf Pro Server",
                  "senderEmailAddress": "",
                  "server": "",
                  "username": ""
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_smtp-server"
      }
    },
    "/v1/sso/cert/download": {
      "get": {
        "tags": [
          "v1 > sso > cert > download"
        ],
        "summary": "Download the certificate currently configured for use with Jamf Pro's SSO configuration\n",
        "description": "Downloads the certificate currently configured for use with Jamf Pro's SSO configuration",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/plain"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<binary>"
              }
            }
          }
        },
        "operationId": "get_v1_sso_cert_download"
      }
    },
    "/v1/sso/cert/parse": {
      "post": {
        "tags": [
          "v1 > sso > cert > parse"
        ],
        "summary": "Parse the certificate to get details about certificate type and keys needed to upload certificate file\n",
        "description": "Parse the certificate to get details about certificate type and keys needed to upload certificate file.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "keystoreFile": "f5==",
                  "keystoreFileName": "<string>",
                  "keystorePassword": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "key": " ",
                  "keys": [
                    {
                      "id": "<string>",
                      "valid": "<boolean>"
                    },
                    {
                      "id": "<string>",
                      "valid": "<boolean>"
                    }
                  ],
                  "type": "NONE",
                  "keystoreSetupType": "NONE",
                  "keystoreFile": [
                    "J7jBEATgxrX3+P739j2B3dxFEgR=",
                    ""
                  ],
                  "keystoreFileName": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_sso_cert_parse"
      }
    },
    "/v1/sso/cert": {
      "get": {
        "tags": [
          "v1 > sso > cert"
        ],
        "summary": "Retrieve the certificate currently configured for use with SSO\n",
        "description": "Retrieves the certificate currently configured for use with SSO.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "keystore": {
                    "key": " ",
                    "keystoreFile": "PxOAVf/5qnP6sL/qEV+BtI==",
                    "keystoreFileName": "<string>",
                    "type": "PKCS12",
                    "keys": [
                      {
                        "id": "<string>",
                        "valid": "<boolean>"
                      },
                      {
                        "id": "<string>",
                        "valid": "<boolean>"
                      }
                    ],
                    "keystoreSetupType": "NONE"
                  },
                  "keystoreDetails": {
                    "keys": [
                      "",
                      ""
                    ],
                    "serialNumber": "<integer>",
                    "subject": "<string>",
                    "issuer": "<string>",
                    "expiration": "<string>"
                  }
                }
              }
            }
          }
        },
        "operationId": "get_v1_sso_cert"
      },
      "put": {
        "tags": [
          "v1 > sso > cert"
        ],
        "summary": "Update the certificate used by Jamf Pro to sign SSO requests to the identify provider\n",
        "description": "Update the certificate used by Jamf Pro to sign SSO requests to the identify provider.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "key": " ",
                  "keystoreFile": "cbRzLdrOBHRlWgfumOV4z6CkWCWw",
                  "keystoreFileName": "<string>",
                  "keystorePassword": "<string>",
                  "password": "<string>",
                  "type": "JKS",
                  "keys": [
                    {
                      "id": "<string>",
                      "valid": "<boolean>"
                    },
                    {
                      "id": "<string>",
                      "valid": "<boolean>"
                    }
                  ],
                  "keystoreSetupType": "NONE"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "keystore": {
                    "key": " ",
                    "keystoreFile": "PxOAVf/5qnP6sL/qEV+BtI==",
                    "keystoreFileName": "<string>",
                    "type": "PKCS12",
                    "keys": [
                      {
                        "id": "<string>",
                        "valid": "<boolean>"
                      },
                      {
                        "id": "<string>",
                        "valid": "<boolean>"
                      }
                    ],
                    "keystoreSetupType": "NONE"
                  },
                  "keystoreDetails": {
                    "keys": [
                      "",
                      ""
                    ],
                    "serialNumber": "<integer>",
                    "subject": "<string>",
                    "issuer": "<string>",
                    "expiration": "<string>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_sso_cert"
      },
      "post": {
        "tags": [
          "v1 > sso > cert"
        ],
        "summary": "Jamf Pro will generate a new certificate and use it to sign SSO\n",
        "description": "Jamf Pro will generate a new certificate and use it to sign SSO requests to the identity provider.",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "keystore": {
                    "key": " ",
                    "keystoreFile": "PxOAVf/5qnP6sL/qEV+BtI==",
                    "keystoreFileName": "<string>",
                    "type": "PKCS12",
                    "keys": [
                      {
                        "id": "<string>",
                        "valid": "<boolean>"
                      },
                      {
                        "id": "<string>",
                        "valid": "<boolean>"
                      }
                    ],
                    "keystoreSetupType": "NONE"
                  },
                  "keystoreDetails": {
                    "keys": [
                      "",
                      ""
                    ],
                    "serialNumber": "<integer>",
                    "subject": "<string>",
                    "issuer": "<string>",
                    "expiration": "<string>"
                  }
                }
              }
            }
          }
        },
        "operationId": "post_v1_sso_cert"
      },
      "delete": {
        "tags": [
          "v1 > sso > cert"
        ],
        "summary": "Delete the currently configured certificate used by SSO\n",
        "description": "Deletes the currently configured certificate used by SSO.",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v1_sso_cert"
      }
    },
    "/v1/sso/failover/generate": {
      "post": {
        "tags": [
          "v1 > sso > failover > generate"
        ],
        "summary": "Regenerates failover url",
        "description": "Regenerates failover url, by changing failover key to new one, and returns new failover settings",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "failoverUrl": "<string>",
                  "generationTime": "<long>"
                }
              }
            }
          }
        },
        "operationId": "post_v1_sso_failover_generate"
      }
    },
    "/v1/sso/failover": {
      "get": {
        "tags": [
          "v1 > sso > failover"
        ],
        "summary": "Retrieve the current failover settings",
        "description": "Retrieve the current failover settings",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "failoverUrl": "<string>",
                  "generationTime": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_sso_failover"
      }
    },
    "/v1/sso/dependencies": {
      "get": {
        "tags": [
          "v1 > sso > dependencies"
        ],
        "summary": "Retrieve the list of Enrollment Customizations using SSO\n",
        "description": "Retrieves the list of Enrollment Customizations using SSO",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "dependencies": [
                    {
                      "name": "<string>",
                      "humanReadableName": "<string>",
                      "hyperlink": "<string>"
                    },
                    {
                      "name": "<string>",
                      "humanReadableName": "<string>",
                      "hyperlink": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_sso_dependencies"
      }
    },
    "/v1/sso/disable": {
      "post": {
        "tags": [
          "v1 > sso > disable"
        ],
        "summary": "Disable SSO\n",
        "description": "Disable SSO",
        "requestBody": {
          "content": {}
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "post_v1_sso_disable"
      }
    },
    "/v1/sso/history": {
      "get": {
        "tags": [
          "v1 > sso > history"
        ],
        "summary": "Get SSO history object\n",
        "description": "Gets SSO history object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "id:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_sso_history"
      },
      "post": {
        "tags": [
          "v1 > sso > history"
        ],
        "summary": "Add SSO history object notes\n",
        "description": "Adds SSO history object notes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_sso_history"
      }
    },
    "/v1/sso/metadata/download": {
      "get": {
        "tags": [
          "v1 > sso > metadata > download"
        ],
        "summary": "Download the Jamf Pro SAML metadata file\n",
        "description": "Download the Jamf Pro SAML metadata file",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/plain"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<binary>"
              }
            }
          }
        },
        "operationId": "get_v1_sso_metadata_download"
      }
    },
    "/v1/sso/validate": {
      "post": {
        "tags": [
          "v1 > sso > validate"
        ],
        "summary": "Endpoint for validation of a saml metadata url\n",
        "description": "Validation of a content available under provided metadata URL.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "idpUrl": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "post_v1_sso_validate"
      }
    },
    "/v1/sso": {
      "get": {
        "tags": [
          "v1 > sso"
        ],
        "summary": "Retrieve the current Single Sign On configuration settings\n",
        "description": "Retrieves the current Single Sign On configuration settings",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "enrollmentSsoForAdueEnabled": false,
                  "entityId": "<string>",
                  "groupAttributeName": "http://schemas.xmlsoap.org/claims/Group",
                  "groupEnrollmentAccessEnabled": false,
                  "groupRdnKey": " ",
                  "idpProviderType": "ADFS",
                  "metadataSource": "URL",
                  "ssoBypassAllowed": false,
                  "ssoEnabled": false,
                  "ssoForEnrollmentEnabled": false,
                  "ssoForMacOsSelfServiceEnabled": false,
                  "tokenExpirationDisabled": false,
                  "userAttributeEnabled": false,
                  "userMapping": "USERNAME",
                  "userAttributeName": " ",
                  "enrollmentSsoConfig": {
                    "managementHint": ""
                  },
                  "groupEnrollmentAccessName": " ",
                  "idpUrl": "<string>",
                  "metadataFileName": "<string>",
                  "otherProviderTypeName": " ",
                  "federationMetadataFile": "ed7jlacXUYNwFmUdx1nM0QhfWd3p7htPtfjJR8==",
                  "sessionTimeout": 480
                }
              }
            }
          }
        },
        "operationId": "get_v1_sso"
      },
      "put": {
        "tags": [
          "v1 > sso"
        ],
        "summary": "Updates the current Single Sign On configuration settings\n",
        "description": "Updates the current Single Sign On configuration settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "enrollmentSsoForAdueEnabled": false,
                  "entityId": "<string>",
                  "groupAttributeName": "http://schemas.xmlsoap.org/claims/Group",
                  "groupEnrollmentAccessEnabled": false,
                  "groupRdnKey": " ",
                  "idpProviderType": "ADFS",
                  "metadataSource": "URL",
                  "ssoBypassAllowed": false,
                  "ssoEnabled": false,
                  "ssoForEnrollmentEnabled": false,
                  "ssoForMacOsSelfServiceEnabled": false,
                  "tokenExpirationDisabled": false,
                  "userAttributeEnabled": false,
                  "userMapping": "USERNAME",
                  "userAttributeName": " ",
                  "enrollmentSsoConfig": {
                    "managementHint": ""
                  },
                  "groupEnrollmentAccessName": " ",
                  "idpUrl": "<string>",
                  "metadataFileName": "<string>",
                  "otherProviderTypeName": " ",
                  "federationMetadataFile": "ed7jlacXUYNwFmUdx1nM0QhfWd3p7htPtfjJR8==",
                  "sessionTimeout": 480
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "enrollmentSsoForAdueEnabled": false,
                  "entityId": "<string>",
                  "groupAttributeName": "http://schemas.xmlsoap.org/claims/Group",
                  "groupEnrollmentAccessEnabled": false,
                  "groupRdnKey": " ",
                  "idpProviderType": "ADFS",
                  "metadataSource": "URL",
                  "ssoBypassAllowed": false,
                  "ssoEnabled": false,
                  "ssoForEnrollmentEnabled": false,
                  "ssoForMacOsSelfServiceEnabled": false,
                  "tokenExpirationDisabled": false,
                  "userAttributeEnabled": false,
                  "userMapping": "USERNAME",
                  "userAttributeName": " ",
                  "enrollmentSsoConfig": {
                    "managementHint": ""
                  },
                  "groupEnrollmentAccessName": " ",
                  "idpUrl": "<string>",
                  "metadataFileName": "<string>",
                  "otherProviderTypeName": " ",
                  "federationMetadataFile": "ed7jlacXUYNwFmUdx1nM0QhfWd3p7htPtfjJR8==",
                  "sessionTimeout": 480
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_sso"
      }
    },
    "/v1/oauth2/session-tokens": {
      "get": {
        "tags": [
          "v1 > oauth2 > session-tokens"
        ],
        "summary": "Retrieve the access token and user information for the current session.\n",
        "description": "Retrieve the access token and user information for the current session.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "accessToken": "<string>",
                  "idToken": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "get_v1_oauth2_session-tokens"
      }
    },
    "/v1/static-user-groups/{id}": {
      "get": {
        "tags": [
          "v1 > static-user-groups > {id}"
        ],
        "summary": "Return a specific Static User Group by id\n",
        "description": "Returns a specific static user group by id.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Instance id of static user group record",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<integer>",
                  "name": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_static-user-groups_id"
      }
    },
    "/v1/static-user-groups": {
      "get": {
        "tags": [
          "v1 > static-user-groups"
        ],
        "summary": "Return a list of all Static User Groups\n",
        "description": "Returns a list of all static user groups.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "id": "<integer>",
                    "name": "<string>"
                  },
                  {
                    "id": "<integer>",
                    "name": "<string>"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v1_static-user-groups"
      }
    },
    "/v1/supervision-identities/upload": {
      "post": {
        "tags": [
          "v1 > supervision-identities > upload"
        ],
        "summary": "Upload the Supervision Identity .p12 file\n",
        "description": "Uploads the Supervision Identity .p12 file",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "displayName": "<string>",
                  "password": "<string>",
                  "certificateData": "u9Jp"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<integer>",
                  "displayName": "<string>",
                  "commonName": "<string>",
                  "expirationDate": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_supervision-identities_upload"
      }
    },
    "/v1/supervision-identities/{id}/download": {
      "get": {
        "tags": [
          "v1 > supervision-identities > {id} > download"
        ],
        "summary": "Download the Supervision Identity .p12 file\n",
        "description": "Download the Supervision Identity .p12 file",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/octet-stream"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Supervision Identity identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/octet-stream"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<binary>"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_supervision-identities_id_download"
      }
    },
    "/v1/supervision-identities/{id}": {
      "get": {
        "tags": [
          "v1 > supervision-identities > {id}"
        ],
        "summary": "Retrieve a Supervision Identity with the supplied id\n",
        "description": "Retrieves a Supervision Identity with the supplied id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Supervision Identity identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<integer>",
                  "displayName": "<string>",
                  "commonName": "<string>",
                  "expirationDate": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_supervision-identities_id"
      },
      "put": {
        "tags": [
          "v1 > supervision-identities > {id}"
        ],
        "summary": "Update a Supervision Identity with the supplied information\n",
        "description": "Updates a Supervision Identity with the supplied information",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "displayName": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Supervision Identity identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<integer>",
                  "displayName": "<string>",
                  "commonName": "<string>",
                  "expirationDate": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_supervision-identities_id"
      },
      "delete": {
        "tags": [
          "v1 > supervision-identities > {id}"
        ],
        "summary": "Delete a Supervision Identity with the supplied id\n",
        "description": "Deletes a Supervision Identity with the supplied id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Supervision Identity identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_supervision-identities_id"
      }
    },
    "/v1/supervision-identities": {
      "get": {
        "tags": [
          "v1 > supervision-identities"
        ],
        "summary": "Search for sorted and paged Supervision Identities\n",
        "description": "Search for sorted and paged supervision identities",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "id:asc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "displayName": "<string>",
                      "commonName": "<string>",
                      "expirationDate": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "displayName": "<string>",
                      "commonName": "<string>",
                      "expirationDate": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_supervision-identities"
      },
      "post": {
        "tags": [
          "v1 > supervision-identities"
        ],
        "summary": "Create a Supervision Identity for the supplied information\n",
        "description": "Creates a Supervision Identity for the supplied information",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "displayName": "<string>",
                  "password": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<integer>",
                  "displayName": "<string>",
                  "commonName": "<string>",
                  "expirationDate": "<string>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_supervision-identities"
      }
    },
    "/v1/teacher-app/history": {
      "get": {
        "tags": [
          "v1 > teacher-app > history"
        ],
        "summary": "Get Jamf Teacher app settings history\n",
        "description": "Gets Jamf Teacher app settings history\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_teacher-app_history"
      },
      "post": {
        "tags": [
          "v1 > teacher-app > history"
        ],
        "summary": "Add Jamf Teacher app settings history notes\n",
        "description": "Adds Jamf Teacher app settings history notes\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_teacher-app_history"
      }
    },
    "/v1/teacher-app": {
      "get": {
        "tags": [
          "v1 > teacher-app"
        ],
        "summary": "Get the Jamf Teacher settings that you have access to see\n",
        "description": "Get the Jamf Teacher settings that you have access to see.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "isEnabled": "<boolean>",
                  "timezoneId": "<string>",
                  "autoClear": "<string>",
                  "maxRestrictionLengthSeconds": "<integer>",
                  "displayNameType": "<string>",
                  "features": {
                    "isAllowAppLock": "<boolean>",
                    "isAllowWebLock": "<boolean>",
                    "isAllowRestrictions": "<boolean>",
                    "isAllowAttentionScreen": "<boolean>",
                    "isAllowClearPasscode": "<boolean>"
                  },
                  "safelistedApps": [
                    {
                      "name": "<string>",
                      "bundleId": "<string>"
                    },
                    {
                      "name": "<string>",
                      "bundleId": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_teacher-app"
      },
      "put": {
        "tags": [
          "v1 > teacher-app"
        ],
        "summary": "Update a Jamf Teacher settings object\n",
        "description": "Update a Jamf Teacher settings object.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "isEnabled": "<boolean>",
                  "timezoneId": "<string>",
                  "autoClear": "<string>",
                  "maxRestrictionLengthSeconds": "<integer>",
                  "safelistedApps": [
                    {
                      "name": "<string>",
                      "bundleId": "<string>"
                    },
                    {
                      "name": "<string>",
                      "bundleId": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "isEnabled": "<boolean>",
                  "timezoneId": "<string>",
                  "autoClear": "<string>",
                  "maxRestrictionLengthSeconds": "<integer>",
                  "displayNameType": "<string>",
                  "features": {
                    "isAllowAppLock": "<boolean>",
                    "isAllowWebLock": "<boolean>",
                    "isAllowRestrictions": "<boolean>",
                    "isAllowAttentionScreen": "<boolean>",
                    "isAllowClearPasscode": "<boolean>"
                  },
                  "safelistedApps": [
                    {
                      "name": "<string>",
                      "bundleId": "<string>"
                    },
                    {
                      "name": "<string>",
                      "bundleId": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_teacher-app"
      }
    },
    "/v1/time-zones": {
      "get": {
        "tags": [
          "v1 > time-zones"
        ],
        "summary": "Return information about the currently supported Time Zones\n",
        "description": "Returns information about the currently supported time zones\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "zoneId": "<string>",
                    "region": "Atlantic",
                    "displayName": "<string>"
                  },
                  {
                    "zoneId": "<string>",
                    "region": "Pacific",
                    "displayName": "<string>"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v1_time-zones"
      }
    },
    "/v1/volume-purchasing-locations/{id}/content": {
      "get": {
        "tags": [
          "v1 > volume-purchasing-locations > {id} > content"
        ],
        "summary": "Retrieve the Volume Purchasing Content for the Volume Purchasing Location with the supplied id",
        "description": "Retrieves the Volume Purchasing Content for the Volume Purchasing Location with the supplied id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma.",
            "example": "id:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter Volume Purchasing Content collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: name, licenseCountTotal, licenseCountInUse, licenseCountReported, contentType, and pricingParam. This param can be combined with paging and sorting."
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Volume Purchasing Location identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "name": "<string>",
                      "licenseCountTotal": "<integer>",
                      "licenseCountInUse": "<integer>",
                      "licenseCountReported": "<integer>",
                      "iconUrl": "<string>",
                      "deviceTypes": [
                        "MACOS",
                        "MACOS"
                      ],
                      "contentType": "IOS_APP",
                      "pricingParam": "PLUS",
                      "adamId": "<string>"
                    },
                    {
                      "name": "<string>",
                      "licenseCountTotal": "<integer>",
                      "licenseCountInUse": "<integer>",
                      "licenseCountReported": "<integer>",
                      "iconUrl": "<string>",
                      "deviceTypes": [
                        "IOS",
                        "IOS"
                      ],
                      "contentType": "UNKNOWN",
                      "pricingParam": "Unknown",
                      "adamId": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_volume-purchasing-locations_id_content"
      }
    },
    "/v1/volume-purchasing-locations/{id}/history": {
      "get": {
        "tags": [
          "v1 > volume-purchasing-locations > {id} > history"
        ],
        "summary": "Get specified Volume Purchasing Location history object\n",
        "description": "Gets specified Volume Purchasing Location history object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. ",
            "example": "date:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of Volume Purchasing Location history record",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_volume-purchasing-locations_id_history"
      },
      "post": {
        "tags": [
          "v1 > volume-purchasing-locations > {id} > history"
        ],
        "summary": "Add specified Volume Purchasing Location history object notes\n",
        "description": "Adds specified Volume Purchasing Location history object notes\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of Volume Purchasing Location history record",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<integer>",
                  "username": "<string>",
                  "date": "<string>",
                  "note": "<string>",
                  "details": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_volume-purchasing-locations_id_history"
      }
    },
    "/v1/volume-purchasing-locations/{id}/reclaim": {
      "post": {
        "tags": [
          "v1 > volume-purchasing-locations > {id} > reclaim"
        ],
        "summary": "Reclaim a Volume Purchasing Location with the supplied id",
        "description": "Reclaims a Volume Purchasing Location with the supplied id",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Volume Purchasing Location identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "post_v1_volume-purchasing-locations_id_reclaim"
      }
    },
    "/v1/volume-purchasing-locations/{id}/revoke-licenses": {
      "post": {
        "tags": [
          "v1 > volume-purchasing-locations > {id} > revoke-licenses"
        ],
        "summary": "Revoke licenses for a Volume Purchasing Location with the supplied id",
        "description": "Revokes licenses for a Volume Purchasing Location with the supplied id. The licenses must be revokable - any asset whose licenses are irrevocable will not be revoked.",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Volume Purchasing Location identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_volume-purchasing-locations_id_revoke-licenses"
      }
    },
    "/v1/volume-purchasing-locations/{id}": {
      "get": {
        "tags": [
          "v1 > volume-purchasing-locations > {id}"
        ],
        "summary": "Retrieve a Volume Purchasing Location with the supplied id",
        "description": "Retrieves a Volume Purchasing Location with the supplied id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Volume Purchasing Location identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "<string>",
                  "totalPurchasedLicenses": "<integer>",
                  "totalUsedLicenses": "<integer>",
                  "id": "<string>",
                  "appleId": "<string>",
                  "organizationName": "<string>",
                  "tokenExpiration": "<string>",
                  "countryCode": "<string>",
                  "locationName": "<string>",
                  "clientContextMismatch": "<boolean>",
                  "automaticallyPopulatePurchasedContent": "<boolean>",
                  "sendNotificationWhenNoLongerAssigned": "<boolean>",
                  "autoRegisterManagedUsers": "<boolean>",
                  "siteId": "<string>",
                  "siteName": "<string>",
                  "lastSyncTime": "<string>",
                  "content": [
                    {
                      "name": "<string>",
                      "licenseCountTotal": "<integer>",
                      "licenseCountInUse": "<integer>",
                      "licenseCountReported": "<integer>",
                      "iconUrl": "<string>",
                      "deviceTypes": [
                        "TVOS",
                        "MACOS"
                      ],
                      "contentType": "IOS_APP",
                      "pricingParam": "Unknown",
                      "adamId": "<string>"
                    },
                    {
                      "name": "<string>",
                      "licenseCountTotal": "<integer>",
                      "licenseCountInUse": "<integer>",
                      "licenseCountReported": "<integer>",
                      "iconUrl": "<string>",
                      "deviceTypes": [
                        "MACOS",
                        "IOS"
                      ],
                      "contentType": "MAC_APP",
                      "pricingParam": "STDQ",
                      "adamId": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_volume-purchasing-locations_id"
      },
      "delete": {
        "tags": [
          "v1 > volume-purchasing-locations > {id}"
        ],
        "summary": "Delete a Volume Purchasing Location with the supplied id",
        "description": "Deletes a Volume Purchasing Location with the supplied id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Volume Purchasing Location identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_volume-purchasing-locations_id"
      },
      "patch": {
        "tags": [
          "v1 > volume-purchasing-locations > {id}"
        ],
        "summary": "Update a Volume Purchasing Location",
        "description": "Updates a Volume Purchasing Location",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "automaticallyPopulatePurchasedContent": "<boolean>",
                  "sendNotificationWhenNoLongerAssigned": "<boolean>",
                  "autoRegisterManagedUsers": false,
                  "siteId": "<string>",
                  "serviceToken": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/merge-patch+json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Volume Purchasing Location identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "<string>",
                  "totalPurchasedLicenses": "<integer>",
                  "totalUsedLicenses": "<integer>",
                  "id": "<string>",
                  "appleId": "<string>",
                  "organizationName": "<string>",
                  "tokenExpiration": "<string>",
                  "countryCode": "<string>",
                  "locationName": "<string>",
                  "clientContextMismatch": "<boolean>",
                  "automaticallyPopulatePurchasedContent": "<boolean>",
                  "sendNotificationWhenNoLongerAssigned": "<boolean>",
                  "autoRegisterManagedUsers": "<boolean>",
                  "siteId": "<string>",
                  "siteName": "<string>",
                  "lastSyncTime": "<string>",
                  "content": [
                    {
                      "name": "<string>",
                      "licenseCountTotal": "<integer>",
                      "licenseCountInUse": "<integer>",
                      "licenseCountReported": "<integer>",
                      "iconUrl": "<string>",
                      "deviceTypes": [
                        "TVOS",
                        "MACOS"
                      ],
                      "contentType": "IOS_APP",
                      "pricingParam": "Unknown",
                      "adamId": "<string>"
                    },
                    {
                      "name": "<string>",
                      "licenseCountTotal": "<integer>",
                      "licenseCountInUse": "<integer>",
                      "licenseCountReported": "<integer>",
                      "iconUrl": "<string>",
                      "deviceTypes": [
                        "MACOS",
                        "IOS"
                      ],
                      "contentType": "MAC_APP",
                      "pricingParam": "STDQ",
                      "adamId": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "patch_v1_volume-purchasing-locations_id"
      }
    },
    "/v1/volume-purchasing-locations": {
      "get": {
        "tags": [
          "v1 > volume-purchasing-locations"
        ],
        "summary": "Retrieve Volume Purchasing Locations",
        "description": "Retrieves Volume Purchasing Locations",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma.",
            "example": "id:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter Volume Purchasing Location collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name, appleId, organizationName, tokenExpiration, countryCode, locationName, automaticallyPopulatePurchasedContent, sendNotificationWhenNoLongerAssigned, siteId and siteName. This param can be combined with paging and sorting."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "name": "<string>",
                      "totalPurchasedLicenses": "<integer>",
                      "totalUsedLicenses": "<integer>",
                      "id": "<string>",
                      "appleId": "<string>",
                      "organizationName": "<string>",
                      "tokenExpiration": "<string>",
                      "countryCode": "<string>",
                      "locationName": "<string>",
                      "clientContextMismatch": "<boolean>",
                      "automaticallyPopulatePurchasedContent": "<boolean>",
                      "sendNotificationWhenNoLongerAssigned": "<boolean>",
                      "autoRegisterManagedUsers": "<boolean>",
                      "siteId": "<string>",
                      "siteName": "<string>",
                      "lastSyncTime": "<string>"
                    },
                    {
                      "name": "<string>",
                      "totalPurchasedLicenses": "<integer>",
                      "totalUsedLicenses": "<integer>",
                      "id": "<string>",
                      "appleId": "<string>",
                      "organizationName": "<string>",
                      "tokenExpiration": "<string>",
                      "countryCode": "<string>",
                      "locationName": "<string>",
                      "clientContextMismatch": "<boolean>",
                      "automaticallyPopulatePurchasedContent": "<boolean>",
                      "sendNotificationWhenNoLongerAssigned": "<boolean>",
                      "autoRegisterManagedUsers": "<boolean>",
                      "siteId": "<string>",
                      "siteName": "<string>",
                      "lastSyncTime": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_volume-purchasing-locations"
      },
      "post": {
        "tags": [
          "v1 > volume-purchasing-locations"
        ],
        "summary": "Create a Volume Purchasing Location",
        "description": "Creates a Volume Purchasing Location using an sToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "serviceToken": "<string>",
                  "name": "<string>",
                  "automaticallyPopulatePurchasedContent": false,
                  "sendNotificationWhenNoLongerAssigned": false,
                  "autoRegisterManagedUsers": false,
                  "siteId": "-1"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_volume-purchasing-locations"
      }
    },
    "/v1/volume-purchasing-subscriptions/{id}/history": {
      "get": {
        "tags": [
          "v1 > volume-purchasing-subscriptions > {id} > history"
        ],
        "summary": "Get specified Volume Purchasing Subscription history object\n",
        "description": "Gets specified Volume Purchasing Subscription history object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. ",
            "example": "date:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Volume Purchasing Subscription Id",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_volume-purchasing-subscriptions_id_history"
      },
      "post": {
        "tags": [
          "v1 > volume-purchasing-subscriptions > {id} > history"
        ],
        "summary": "Add Volume Purchasing Subscription history object notes\n",
        "description": "Adds Volume Purchasing Subscription history object notes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Volume Purchasing Subscription Id",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_volume-purchasing-subscriptions_id_history"
      }
    },
    "/v1/volume-purchasing-subscriptions/{id}": {
      "get": {
        "tags": [
          "v1 > volume-purchasing-subscriptions > {id}"
        ],
        "summary": "Retrieve a Volume Purchasing Subscription with the supplied id",
        "description": "Retrieves a Volume Purchasing Subscription with the supplied id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Volume Purchasing Subscription identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "<string>",
                  "enabled": true,
                  "triggers": [
                    "NO_MORE_LICENSES",
                    "NO_MORE_LICENSES"
                  ],
                  "locationIds": [
                    "75986117",
                    "77278195"
                  ],
                  "internalRecipients": [
                    {
                      "accountId": "724",
                      "frequency": "DAILY"
                    },
                    {
                      "accountId": "515",
                      "frequency": "DAILY"
                    }
                  ],
                  "externalRecipients": [
                    {
                      "email": "<string>",
                      "name": "<string>"
                    },
                    {
                      "email": "<string>",
                      "name": "<string>"
                    }
                  ],
                  "siteId": "-1",
                  "id": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_volume-purchasing-subscriptions_id"
      },
      "put": {
        "tags": [
          "v1 > volume-purchasing-subscriptions > {id}"
        ],
        "summary": "Update a Volume Purchasing Subscription",
        "description": "Updates a Volume Purchasing Subscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "enabled": true,
                  "triggers": [
                    "REMOVED_FROM_APP_STORE",
                    "REMOVED_FROM_APP_STORE"
                  ],
                  "locationIds": [
                    "92515444",
                    "698"
                  ],
                  "internalRecipients": [
                    {
                      "accountId": "4",
                      "frequency": "DAILY"
                    },
                    {
                      "accountId": "05",
                      "frequency": "DAILY"
                    }
                  ],
                  "externalRecipients": [
                    {
                      "email": "<string>",
                      "name": "<string>"
                    },
                    {
                      "email": "<string>",
                      "name": "<string>"
                    }
                  ],
                  "siteId": "-1"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Volume Purchasing Subscription identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "<string>",
                  "enabled": true,
                  "triggers": [
                    "NO_MORE_LICENSES",
                    "NO_MORE_LICENSES"
                  ],
                  "locationIds": [
                    "75986117",
                    "77278195"
                  ],
                  "internalRecipients": [
                    {
                      "accountId": "724",
                      "frequency": "DAILY"
                    },
                    {
                      "accountId": "515",
                      "frequency": "DAILY"
                    }
                  ],
                  "externalRecipients": [
                    {
                      "email": "<string>",
                      "name": "<string>"
                    },
                    {
                      "email": "<string>",
                      "name": "<string>"
                    }
                  ],
                  "siteId": "-1",
                  "id": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v1_volume-purchasing-subscriptions_id"
      },
      "delete": {
        "tags": [
          "v1 > volume-purchasing-subscriptions > {id}"
        ],
        "summary": "Delete a Volume Purchasing Subscription with the supplied id",
        "description": "Deletes a Volume Purchasing Subscription with the supplied id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Volume Purchasing Subscription identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v1_volume-purchasing-subscriptions_id"
      }
    },
    "/v1/volume-purchasing-subscriptions": {
      "get": {
        "tags": [
          "v1 > volume-purchasing-subscriptions"
        ],
        "summary": "Retrieve Volume Purchasing Subscriptions",
        "description": "Retrieves Volume Purchasing Subscriptions",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Allowable properties are id, name, and enabled.",
            "example": "id:asc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "name": "<string>",
                      "enabled": true,
                      "triggers": [
                        "NO_MORE_LICENSES",
                        "REMOVED_FROM_APP_STORE"
                      ],
                      "locationIds": [
                        "83665658",
                        "55"
                      ],
                      "internalRecipients": [
                        {
                          "accountId": "8725770993",
                          "frequency": "DAILY"
                        },
                        {
                          "accountId": "173",
                          "frequency": "DAILY"
                        }
                      ],
                      "externalRecipients": [
                        {
                          "email": "<string>",
                          "name": "<string>"
                        },
                        {
                          "email": "<string>",
                          "name": "<string>"
                        }
                      ],
                      "siteId": "-1",
                      "id": "<string>"
                    },
                    {
                      "name": "<string>",
                      "enabled": true,
                      "triggers": [
                        "REMOVED_FROM_APP_STORE",
                        "REMOVED_FROM_APP_STORE"
                      ],
                      "locationIds": [
                        "233070856",
                        "6184"
                      ],
                      "internalRecipients": [
                        {
                          "accountId": "245",
                          "frequency": "DAILY"
                        },
                        {
                          "accountId": "28527",
                          "frequency": "DAILY"
                        }
                      ],
                      "externalRecipients": [
                        {
                          "email": "<string>",
                          "name": "<string>"
                        },
                        {
                          "email": "<string>",
                          "name": "<string>"
                        }
                      ],
                      "siteId": "-1",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v1_volume-purchasing-subscriptions"
      },
      "post": {
        "tags": [
          "v1 > volume-purchasing-subscriptions"
        ],
        "summary": "Create a Volume Purchasing Subscription",
        "description": "Creates a Volume Purchasing Subscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "enabled": true,
                  "triggers": [
                    "REMOVED_FROM_APP_STORE",
                    "REMOVED_FROM_APP_STORE"
                  ],
                  "locationIds": [
                    "92515444",
                    "698"
                  ],
                  "internalRecipients": [
                    {
                      "accountId": "4",
                      "frequency": "DAILY"
                    },
                    {
                      "accountId": "05",
                      "frequency": "DAILY"
                    }
                  ],
                  "externalRecipients": [
                    {
                      "email": "<string>",
                      "name": "<string>"
                    },
                    {
                      "email": "<string>",
                      "name": "<string>"
                    }
                  ],
                  "siteId": "-1"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v1_volume-purchasing-subscriptions"
      }
    },
    "/v2/cloud-ldaps/defaults/{provider}/mappings": {
      "get": {
        "tags": [
          "v2 > cloud-ldaps > defaults > {provider} > mappings"
        ],
        "summary": "Get default mappings",
        "description": "Get default mappings for Cloud Identity Provider Provider.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "provider",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Cloud Identity Provider name",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "userMappings": {
                    "building": "",
                    "department": "<string>",
                    "emailAddress": "<string>",
                    "objectClassLimitation": "ANY_OBJECT_CLASSES",
                    "objectClasses": "<string>",
                    "phone": "",
                    "position": "<string>",
                    "realName": "<string>",
                    "room": "",
                    "searchBase": "<string>",
                    "searchScope": "FIRST_LEVEL_ONLY",
                    "userID": "<string>",
                    "userUuid": "<string>",
                    "username": "<string>",
                    "additionalSearchBase": ""
                  },
                  "groupMappings": {
                    "groupID": "<string>",
                    "groupName": "<string>",
                    "groupUuid": "<string>",
                    "objectClassLimitation": "ANY_OBJECT_CLASSES",
                    "objectClasses": "<string>",
                    "searchBase": "<string>",
                    "searchScope": "ALL_SUBTREES"
                  },
                  "membershipMappings": {
                    "groupMembershipMapping": "<string>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_cloud-ldaps_defaults_provider_mappings"
      }
    },
    "/v2/cloud-ldaps/defaults/{provider}/server-configuration": {
      "get": {
        "tags": [
          "v2 > cloud-ldaps > defaults > {provider} > server-configuration"
        ],
        "summary": "Get default server configuration",
        "description": "Get default server configuration for Cloud Identity Provider Identity Provider.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "provider",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Cloud Identity Provider name",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "enabled": "<boolean>",
                  "serverUrl": "<string>",
                  "domainName": "<string>",
                  "port": "<integer>",
                  "keystore": {
                    "type": "<string>",
                    "expirationDate": "<dateTime>",
                    "subject": "<string>",
                    "fileName": "<string>"
                  },
                  "connectionTimeout": "<integer>",
                  "searchTimeout": "<integer>",
                  "useWildcards": "<boolean>",
                  "connectionType": "START_TLS",
                  "membershipCalculationOptimizationEnabled": "<boolean>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_cloud-ldaps_defaults_provider_server-configuration"
      }
    },
    "/v2/cloud-ldaps/{id}/connection/bind": {
      "get": {
        "tags": [
          "v2 > cloud-ldaps > {id} > connection > bind"
        ],
        "summary": "Get bind connection pool statistics",
        "description": "Get all search connection pool for chosen Cloud Identity Provider.\nnumConnectionsClosedDefunct - The number of connections that have been closed as defunct.\nnumConnectionsClosedExpired - The number of connections that have been closed because they were expired.\nnumConnectionsClosedUnneeded - The number of connections that have been closed because they were no longer needed.\nnumFailedCheckouts - The number of failed attempts to check out a connection from the pool.\nnumFailedConnectionAttempts - The number of failed attempts to create a connection for use in the pool.\nnumReleasedValid - The number of valid connections released back to the pool.\nnumSuccessfulCheckouts - The number of successful attempts to check out a connection from the pool.\nnumSuccessfulCheckoutsNewConnection - The number of successful checkout attempts that had to create a new connection because none were available.\nnumSuccessfulConnectionAttempts - The number successful attempts to create a connection for use in the pool.\nmaximumAvailableConnections - The maximum number of connections that may be available in the pool at any time.\nnumSuccessfulCheckoutsWithoutWait - The number of successful checkout attempts that were able to take an existing connection without waiting.\nnumSuccessfulCheckoutsAfterWait - The number of successful checkout attempts that retrieved a connection from the pool after waiting for it to become available.\nnumAvailableConnections - The number of connections currently available for use in the pool.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Cloud Identity Provider identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "numConnectionsClosedDefunct": "<long>",
                  "numConnectionsClosedExpired": "<long>",
                  "numConnectionsClosedUnneeded": "<long>",
                  "numFailedCheckouts": "<long>",
                  "numFailedConnectionAttempts": "<long>",
                  "numReleasedValid": "<long>",
                  "numSuccessfulCheckouts": "<long>",
                  "numSuccessfulCheckoutsNewConnection": "<long>",
                  "numSuccessfulConnectionAttempts": "<long>",
                  "maximumAvailableConnections": "<long>",
                  "numSuccessfulCheckoutsWithoutWaiting": "<long>",
                  "numSuccessfulCheckoutsAfterWaiting": "<long>",
                  "numAvailableConnections": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_cloud-ldaps_id_connection_bind"
      }
    },
    "/v2/cloud-ldaps/{id}/connection/search": {
      "get": {
        "tags": [
          "v2 > cloud-ldaps > {id} > connection > search"
        ],
        "summary": "Get search connection pool statistics",
        "description": "Get all search connection pool for chosen Cloud Identity Provider.\nnumConnectionsClosedDefunct - The number of connections that have been closed as defunct.\nnumConnectionsClosedExpired - The number of connections that have been closed because they were expired.\nnumConnectionsClosedUnneeded - The number of connections that have been closed because they were no longer needed.\nnumFailedCheckouts - The number of failed attempts to check out a connection from the pool.\nnumFailedConnectionAttempts - The number of failed attempts to create a connection for use in the pool.\nnumReleasedValid - The number of valid connections released back to the pool.\nnumSuccessfulCheckouts - The number of successful attempts to check out a connection from the pool.\nnumSuccessfulCheckoutsNewConnection - The number of successful checkout attempts that had to create a new connection because none were available.\nnumSuccessfulConnectionAttempts - The number successful attempts to create a connection for use in the pool.\nmaximumAvailableConnections - The maximum number of connections that may be available in the pool at any time.\nnumSuccessfulCheckoutsWithoutWait - The number of successful checkout attempts that were able to take an existing connection without waiting.\nnumSuccessfulCheckoutsAfterWait - The number of successful checkout attempts that retrieved a connection from the pool after waiting for it to become available.\nnumAvailableConnections - The number of connections currently available for use in the pool.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Cloud Identity Provider identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "numConnectionsClosedDefunct": "<long>",
                  "numConnectionsClosedExpired": "<long>",
                  "numConnectionsClosedUnneeded": "<long>",
                  "numFailedCheckouts": "<long>",
                  "numFailedConnectionAttempts": "<long>",
                  "numReleasedValid": "<long>",
                  "numSuccessfulCheckouts": "<long>",
                  "numSuccessfulCheckoutsNewConnection": "<long>",
                  "numSuccessfulConnectionAttempts": "<long>",
                  "maximumAvailableConnections": "<long>",
                  "numSuccessfulCheckoutsWithoutWaiting": "<long>",
                  "numSuccessfulCheckoutsAfterWaiting": "<long>",
                  "numAvailableConnections": "<long>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_cloud-ldaps_id_connection_search"
      }
    },
    "/v2/cloud-ldaps/{id}/connection/status": {
      "get": {
        "tags": [
          "v2 > cloud-ldaps > {id} > connection > status"
        ],
        "summary": "Tests the communication with the specified cloud connection\n",
        "description": "Tests the communication with the specified cloud connection\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Cloud Identity Provider identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "status": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_cloud-ldaps_id_connection_status"
      }
    },
    "/v2/cloud-ldaps/{id}/mappings": {
      "get": {
        "tags": [
          "v2 > cloud-ldaps > {id} > mappings"
        ],
        "summary": "Get mappings configurations for Cloud Identity Providers server configuration.",
        "description": "Get all mappings configurations for Cloud Identity Providers server configuration.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Cloud Identity Provider identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "userMappings": {
                    "building": "",
                    "department": "<string>",
                    "emailAddress": "<string>",
                    "objectClassLimitation": "ANY_OBJECT_CLASSES",
                    "objectClasses": "<string>",
                    "phone": "",
                    "position": "<string>",
                    "realName": "<string>",
                    "room": "",
                    "searchBase": "<string>",
                    "searchScope": "FIRST_LEVEL_ONLY",
                    "userID": "<string>",
                    "userUuid": "<string>",
                    "username": "<string>",
                    "additionalSearchBase": ""
                  },
                  "groupMappings": {
                    "groupID": "<string>",
                    "groupName": "<string>",
                    "groupUuid": "<string>",
                    "objectClassLimitation": "ANY_OBJECT_CLASSES",
                    "objectClasses": "<string>",
                    "searchBase": "<string>",
                    "searchScope": "ALL_SUBTREES"
                  },
                  "membershipMappings": {
                    "groupMembershipMapping": "<string>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_cloud-ldaps_id_mappings"
      },
      "put": {
        "tags": [
          "v2 > cloud-ldaps > {id} > mappings"
        ],
        "summary": "Update Cloud Identity Provider mappings configuration.",
        "description": "Update Cloud Identity Provider mappings configuration. Cannot be used for partial updates, all content body must be sent.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "groupMappings": {
                    "groupID": "<string>",
                    "groupName": "<string>",
                    "groupUuid": "<string>",
                    "objectClassLimitation": "ALL_OBJECT_CLASSES",
                    "objectClasses": "<string>",
                    "searchBase": "<string>",
                    "searchScope": "ALL_SUBTREES"
                  },
                  "membershipMappings": {
                    "groupMembershipMapping": "<string>"
                  },
                  "userMappings": {
                    "building": "",
                    "department": "<string>",
                    "emailAddress": "<string>",
                    "objectClassLimitation": "ANY_OBJECT_CLASSES",
                    "objectClasses": "<string>",
                    "phone": "",
                    "position": "<string>",
                    "realName": "<string>",
                    "room": "",
                    "searchBase": "<string>",
                    "searchScope": "ALL_SUBTREES",
                    "userID": "<string>",
                    "userUuid": "<string>",
                    "username": "<string>",
                    "additionalSearchBase": ""
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Cloud Identity Provider identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "userMappings": {
                    "building": "",
                    "department": "<string>",
                    "emailAddress": "<string>",
                    "objectClassLimitation": "ANY_OBJECT_CLASSES",
                    "objectClasses": "<string>",
                    "phone": "",
                    "position": "<string>",
                    "realName": "<string>",
                    "room": "",
                    "searchBase": "<string>",
                    "searchScope": "FIRST_LEVEL_ONLY",
                    "userID": "<string>",
                    "userUuid": "<string>",
                    "username": "<string>",
                    "additionalSearchBase": ""
                  },
                  "groupMappings": {
                    "groupID": "<string>",
                    "groupName": "<string>",
                    "groupUuid": "<string>",
                    "objectClassLimitation": "ANY_OBJECT_CLASSES",
                    "objectClasses": "<string>",
                    "searchBase": "<string>",
                    "searchScope": "ALL_SUBTREES"
                  },
                  "membershipMappings": {
                    "groupMembershipMapping": "<string>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v2_cloud-ldaps_id_mappings"
      }
    },
    "/v2/cloud-ldaps/{id}": {
      "get": {
        "tags": [
          "v2 > cloud-ldaps > {id}"
        ],
        "summary": "Get Cloud Identity Provider configuration with given id.",
        "description": "Get Cloud Identity Provider configuration with given id.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Cloud Identity Provider identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "cloudIdPCommon": {
                    "displayName": "<string>",
                    "id": "<string>",
                    "providerName": "AZURE"
                  },
                  "server": {
                    "id": "<string>",
                    "enabled": "<boolean>",
                    "serverUrl": "<string>",
                    "domainName": "<string>",
                    "port": "<integer>",
                    "keystore": {
                      "type": "<string>",
                      "expirationDate": "<dateTime>",
                      "subject": "<string>",
                      "fileName": "<string>"
                    },
                    "connectionTimeout": "<integer>",
                    "searchTimeout": "<integer>",
                    "useWildcards": "<boolean>",
                    "connectionType": "START_TLS",
                    "membershipCalculationOptimizationEnabled": "<boolean>"
                  },
                  "mappings": {
                    "userMappings": {
                      "building": "",
                      "department": "<string>",
                      "emailAddress": "<string>",
                      "objectClassLimitation": "ANY_OBJECT_CLASSES",
                      "objectClasses": "<string>",
                      "phone": "",
                      "position": "<string>",
                      "realName": "<string>",
                      "room": "",
                      "searchBase": "<string>",
                      "searchScope": "FIRST_LEVEL_ONLY",
                      "userID": "<string>",
                      "userUuid": "<string>",
                      "username": "<string>",
                      "additionalSearchBase": ""
                    },
                    "groupMappings": {
                      "groupID": "<string>",
                      "groupName": "<string>",
                      "groupUuid": "<string>",
                      "objectClassLimitation": "ALL_OBJECT_CLASSES",
                      "objectClasses": "<string>",
                      "searchBase": "<string>",
                      "searchScope": "ALL_SUBTREES"
                    },
                    "membershipMappings": {
                      "groupMembershipMapping": "<string>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_cloud-ldaps_id"
      },
      "put": {
        "tags": [
          "v2 > cloud-ldaps > {id}"
        ],
        "summary": "Update Cloud Identity Provider configuration",
        "description": "Update Cloud Identity Provider configuration. Cannot be used for partial updates, all content body must be sent.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "cloudIdPCommon": {
                    "displayName": "<string>",
                    "id": "<string>",
                    "providerName": "AZURE"
                  },
                  "server": {
                    "connectionTimeout": "<integer>",
                    "connectionType": "LDAPS",
                    "domainName": "<string>",
                    "enabled": "<boolean>",
                    "port": "<integer>",
                    "searchTimeout": "<integer>",
                    "serverUrl": "<string>",
                    "useWildcards": "<boolean>",
                    "keystore": {
                      "fileBytes": "daH=",
                      "fileName": "<string>",
                      "password": "<string>"
                    },
                    "membershipCalculationOptimizationEnabled": "<boolean>"
                  },
                  "mappings": {
                    "groupMappings": {
                      "groupID": "<string>",
                      "groupName": "<string>",
                      "groupUuid": "<string>",
                      "objectClassLimitation": "ALL_OBJECT_CLASSES",
                      "objectClasses": "<string>",
                      "searchBase": "<string>",
                      "searchScope": "ALL_SUBTREES"
                    },
                    "membershipMappings": {
                      "groupMembershipMapping": "<string>"
                    },
                    "userMappings": {
                      "building": "",
                      "department": "<string>",
                      "emailAddress": "<string>",
                      "objectClassLimitation": "ANY_OBJECT_CLASSES",
                      "objectClasses": "<string>",
                      "phone": "",
                      "position": "<string>",
                      "realName": "<string>",
                      "room": "",
                      "searchBase": "<string>",
                      "searchScope": "FIRST_LEVEL_ONLY",
                      "userID": "<string>",
                      "userUuid": "<string>",
                      "username": "<string>",
                      "additionalSearchBase": ""
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Cloud Identity Provider identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "cloudIdPCommon": {
                    "displayName": "<string>",
                    "id": "<string>",
                    "providerName": "AZURE"
                  },
                  "server": {
                    "id": "<string>",
                    "enabled": "<boolean>",
                    "serverUrl": "<string>",
                    "domainName": "<string>",
                    "port": "<integer>",
                    "keystore": {
                      "type": "<string>",
                      "expirationDate": "<dateTime>",
                      "subject": "<string>",
                      "fileName": "<string>"
                    },
                    "connectionTimeout": "<integer>",
                    "searchTimeout": "<integer>",
                    "useWildcards": "<boolean>",
                    "connectionType": "START_TLS",
                    "membershipCalculationOptimizationEnabled": "<boolean>"
                  },
                  "mappings": {
                    "userMappings": {
                      "building": "",
                      "department": "<string>",
                      "emailAddress": "<string>",
                      "objectClassLimitation": "ANY_OBJECT_CLASSES",
                      "objectClasses": "<string>",
                      "phone": "",
                      "position": "<string>",
                      "realName": "<string>",
                      "room": "",
                      "searchBase": "<string>",
                      "searchScope": "FIRST_LEVEL_ONLY",
                      "userID": "<string>",
                      "userUuid": "<string>",
                      "username": "<string>",
                      "additionalSearchBase": ""
                    },
                    "groupMappings": {
                      "groupID": "<string>",
                      "groupName": "<string>",
                      "groupUuid": "<string>",
                      "objectClassLimitation": "ALL_OBJECT_CLASSES",
                      "objectClasses": "<string>",
                      "searchBase": "<string>",
                      "searchScope": "ALL_SUBTREES"
                    },
                    "membershipMappings": {
                      "groupMembershipMapping": "<string>"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v2_cloud-ldaps_id"
      },
      "delete": {
        "tags": [
          "v2 > cloud-ldaps > {id}"
        ],
        "summary": "Delete Cloud Identity Provider configuration.",
        "description": "Delete Cloud Identity Provider configuration.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Cloud Identity Provider identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v2_cloud-ldaps_id"
      }
    },
    "/v2/cloud-ldaps": {
      "post": {
        "tags": [
          "v2 > cloud-ldaps"
        ],
        "summary": "Create Cloud Identity Provider configuration",
        "description": "Create new Cloud Identity Provider configuration with unique display name. If mappings not provided, then defaults will be generated instead.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "cloudIdPCommon": {
                    "displayName": "<string>",
                    "providerName": "AZURE"
                  },
                  "server": {
                    "connectionTimeout": "<integer>",
                    "connectionType": "LDAPS",
                    "domainName": "<string>",
                    "enabled": "<boolean>",
                    "keystore": {
                      "fileBytes": "LxeHn6GNmo0Z",
                      "fileName": "<string>",
                      "password": "<string>"
                    },
                    "port": "<integer>",
                    "searchTimeout": "<integer>",
                    "serverUrl": "<string>",
                    "useWildcards": "<boolean>",
                    "membershipCalculationOptimizationEnabled": "<boolean>"
                  },
                  "mappings": {
                    "groupMappings": {
                      "groupID": "<string>",
                      "groupName": "<string>",
                      "groupUuid": "<string>",
                      "objectClassLimitation": "ANY_OBJECT_CLASSES",
                      "objectClasses": "<string>",
                      "searchBase": "<string>",
                      "searchScope": "ALL_SUBTREES"
                    },
                    "membershipMappings": {
                      "groupMembershipMapping": "<string>"
                    },
                    "userMappings": {
                      "building": "",
                      "department": "<string>",
                      "emailAddress": "<string>",
                      "objectClassLimitation": "ANY_OBJECT_CLASSES",
                      "objectClasses": "<string>",
                      "phone": "",
                      "position": "<string>",
                      "realName": "<string>",
                      "room": "",
                      "searchBase": "<string>",
                      "searchScope": "FIRST_LEVEL_ONLY",
                      "userID": "<string>",
                      "userUuid": "<string>",
                      "username": "<string>",
                      "additionalSearchBase": ""
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_cloud-ldaps"
      }
    },
    "/v2/computer-groups/smart-group-membership/{id}": {
      "get": {
        "tags": [
          "v2 > computer-groups > smart-group-membership > {id}"
        ],
        "summary": "Get the membership of a Smart Computer Group\n",
        "description": "Gets the membership of a Smart Computer Group\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) id of the Smart Computer Group",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "members": [
                    "<integer>",
                    "<integer>"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_computer-groups_smart-group-membership_id"
      }
    },
    "/v2/computer-groups/smart-groups/{id}": {
      "put": {
        "tags": [
          "v2 > computer-groups > smart-groups > {id}"
        ],
        "summary": "Update a Smart Computer Group\n",
        "description": "Updates a Smart Computer Group\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "criteria": [
                    {
                      "name": "<string>",
                      "priority": "<integer>",
                      "andOr": "<string>",
                      "searchType": "<string>",
                      "value": "<string>",
                      "openingParen": "<boolean>",
                      "closingParen": "<boolean>"
                    },
                    {
                      "name": "<string>",
                      "priority": "<integer>",
                      "andOr": "<string>",
                      "searchType": "<string>",
                      "value": "<string>",
                      "openingParen": "<boolean>",
                      "closingParen": "<boolean>"
                    }
                  ],
                  "siteId": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) id of target Smart Computer Group",
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "name": "<string>",
                  "criteria": [
                    {
                      "name": "<string>",
                      "priority": "<integer>",
                      "andOr": "<string>",
                      "searchType": "<string>",
                      "value": "<string>",
                      "openingParen": "<boolean>",
                      "closingParen": "<boolean>"
                    },
                    {
                      "name": "<string>",
                      "priority": "<integer>",
                      "andOr": "<string>",
                      "searchType": "<string>",
                      "value": "<string>",
                      "openingParen": "<boolean>",
                      "closingParen": "<boolean>"
                    }
                  ],
                  "siteId": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v2_computer-groups_smart-groups_id"
      },
      "delete": {
        "tags": [
          "v2 > computer-groups > smart-groups > {id}"
        ],
        "summary": "Remove specified Smart Computer Group\n",
        "description": "Remove specified Smart Computer Group\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) id of target Smart Computer Group",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v2_computer-groups_smart-groups_id"
      }
    },
    "/v2/computer-groups/smart-groups": {
      "get": {
        "tags": [
          "v2 > computer-groups > smart-groups"
        ],
        "summary": "Search for Smart Computer Groups\n",
        "description": "Search for Smart Computer Groups\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=name:asc",
            "example": "id:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter smart computer group collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name. Example: name==\"*group*\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<string>",
                      "siteId": "<string>",
                      "name": "<string>",
                      "membershipCount": "<integer>"
                    },
                    {
                      "id": "<string>",
                      "siteId": "<string>",
                      "name": "<string>",
                      "membershipCount": "<integer>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_computer-groups_smart-groups"
      },
      "post": {
        "tags": [
          "v2 > computer-groups > smart-groups"
        ],
        "summary": "Create a Smart Computer Group\n",
        "description": "Creates a Smart Computer Group\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "criteria": [
                    {
                      "name": "<string>",
                      "priority": "<integer>",
                      "andOr": "<string>",
                      "searchType": "<string>",
                      "value": "<string>",
                      "openingParen": "<boolean>",
                      "closingParen": "<boolean>"
                    },
                    {
                      "name": "<string>",
                      "priority": "<integer>",
                      "andOr": "<string>",
                      "searchType": "<string>",
                      "value": "<string>",
                      "openingParen": "<boolean>",
                      "closingParen": "<boolean>"
                    }
                  ],
                  "siteId": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          }
        },
        "operationId": "post_v2_computer-groups_smart-groups"
      }
    },
    "/v2/computer-prestages/scope": {
      "get": {
        "tags": [
          "v2 > computer-prestages > scope"
        ],
        "summary": "Get all device Scope for all Computer Prestages\n",
        "description": "Get all device scope for all computer prestages",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "serialsByPrestageId": {
                    "deserunt_a": "<string>"
                  }
                }
              }
            }
          }
        },
        "operationId": "get_v2_computer-prestages_scope"
      }
    },
    "/v2/computer-prestages/{id}/scope/delete-multiple": {
      "post": {
        "tags": [
          "v2 > computer-prestages > {id} > scope > delete-multiple"
        ],
        "summary": "Remove device Scope for a specific Computer Prestage\n",
        "description": "Remove device scope for a specific computer prestage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "serialNumbers": [
                    "<string>",
                    "<string>"
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Computer Prestage identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "prestageId": "<string>",
                  "assignments": [
                    {
                      "serialNumber": "<string>",
                      "assignmentDate": "<dateTime>",
                      "userAssigned": "<string>"
                    },
                    {
                      "serialNumber": "<string>",
                      "assignmentDate": "<dateTime>",
                      "userAssigned": "<string>"
                    }
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_computer-prestages_id_scope_delete-multiple"
      }
    },
    "/v2/computer-prestages/{id}/scope": {
      "get": {
        "tags": [
          "v2 > computer-prestages > {id} > scope"
        ],
        "summary": "Get device Scope for a specific Computer Prestage\n",
        "description": "Get device scope for a specific computer prestage",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Computer Prestage identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "prestageId": "<string>",
                  "assignments": [
                    {
                      "serialNumber": "<string>",
                      "assignmentDate": "<dateTime>",
                      "userAssigned": "<string>"
                    },
                    {
                      "serialNumber": "<string>",
                      "assignmentDate": "<dateTime>",
                      "userAssigned": "<string>"
                    }
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_computer-prestages_id_scope"
      },
      "put": {
        "tags": [
          "v2 > computer-prestages > {id} > scope"
        ],
        "summary": "Replace device Scope for a specific Computer Prestage\n",
        "description": "Replace device scope for a specific computer prestage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "serialNumbers": [
                    "<string>",
                    "<string>"
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Computer Prestage identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "prestageId": "<string>",
                  "assignments": [
                    {
                      "serialNumber": "<string>",
                      "assignmentDate": "<dateTime>",
                      "userAssigned": "<string>"
                    },
                    {
                      "serialNumber": "<string>",
                      "assignmentDate": "<dateTime>",
                      "userAssigned": "<string>"
                    }
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v2_computer-prestages_id_scope"
      },
      "post": {
        "tags": [
          "v2 > computer-prestages > {id} > scope"
        ],
        "summary": "Add device Scope for a specific Computer Prestage\n",
        "description": "Add device scope for a specific computer prestage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "serialNumbers": [
                    "<string>",
                    "<string>"
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Computer Prestage identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "prestageId": "<string>",
                  "assignments": [
                    {
                      "serialNumber": "<string>",
                      "assignmentDate": "<dateTime>",
                      "userAssigned": "<string>"
                    },
                    {
                      "serialNumber": "<string>",
                      "assignmentDate": "<dateTime>",
                      "userAssigned": "<string>"
                    }
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_computer-prestages_id_scope"
      }
    },
    "/v2/computer-prestages/{id}": {
      "get": {
        "tags": [
          "v2 > computer-prestages > {id}"
        ],
        "summary": "Retrieve a Computer Prestage with the supplied id\n",
        "description": "Retrieves a Computer Prestage with the supplied id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Computer Prestage identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "authenticationPrompt": "<string>",
                  "autoAdvanceSetup": "<boolean>",
                  "customPackageDistributionPointId": "<string>",
                  "customPackageIds": [
                    "<string>",
                    "<string>"
                  ],
                  "defaultPrestage": "<boolean>",
                  "department": "<string>",
                  "deviceEnrollmentProgramInstanceId": "<string>",
                  "displayName": "<string>",
                  "enableDeviceBasedActivationLock": "<boolean>",
                  "enrollmentSiteId": "<string>",
                  "installProfilesDuringSetup": "<boolean>",
                  "keepExistingLocationInformation": "<boolean>",
                  "keepExistingSiteMembership": "<boolean>",
                  "locationInformation": {
                    "buildingId": "<string>",
                    "departmentId": "<string>",
                    "email": "<string>",
                    "id": "<string>",
                    "phone": "<string>",
                    "position": "<string>",
                    "realname": "<string>",
                    "room": "<string>",
                    "username": "<string>",
                    "versionLock": "<integer>"
                  },
                  "mandatory": "<boolean>",
                  "mdmRemovable": "<boolean>",
                  "prestageInstalledProfileIds": [
                    "<string>",
                    "<string>"
                  ],
                  "preventActivationLock": "<boolean>",
                  "purchasingInformation": {
                    "appleCareId": "<string>",
                    "id": "<string>",
                    "leaseDate": "<string>",
                    "leased": "<boolean>",
                    "lifeExpectancy": "<integer>",
                    "poDate": "<string>",
                    "poNumber": "<string>",
                    "purchasePrice": "<string>",
                    "purchased": "<boolean>",
                    "purchasingAccount": "<string>",
                    "purchasingContact": "<string>",
                    "vendor": "<string>",
                    "versionLock": "<integer>",
                    "warrantyDate": "<string>"
                  },
                  "requireAuthentication": "<boolean>",
                  "supportEmailAddress": "<string>",
                  "supportPhoneNumber": "<string>",
                  "skipSetupItems": {
                    "sed_b": "<boolean>"
                  },
                  "anchorCertificates": [
                    "<string>",
                    "<string>"
                  ],
                  "enrollmentCustomizationId": "<string>",
                  "language": "<string>",
                  "region": "<string>",
                  "enableRecoveryLock": "<boolean>",
                  "recoveryLockPasswordType": "MANUAL",
                  "rotateRecoveryLockPassword": "<boolean>",
                  "id": "<string>",
                  "profileUuid": "<string>",
                  "siteId": "<string>",
                  "versionLock": "<integer>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_computer-prestages_id"
      },
      "put": {
        "tags": [
          "v2 > computer-prestages > {id}"
        ],
        "summary": "Update a Computer Prestage\n",
        "description": "Updates a Computer Prestage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "authenticationPrompt": "<string>",
                  "autoAdvanceSetup": "<boolean>",
                  "customPackageDistributionPointId": "<string>",
                  "customPackageIds": [
                    "<string>",
                    "<string>"
                  ],
                  "defaultPrestage": "<boolean>",
                  "department": "<string>",
                  "deviceEnrollmentProgramInstanceId": "<string>",
                  "displayName": "<string>",
                  "enableDeviceBasedActivationLock": "<boolean>",
                  "enrollmentSiteId": "<string>",
                  "installProfilesDuringSetup": "<boolean>",
                  "keepExistingLocationInformation": "<boolean>",
                  "keepExistingSiteMembership": "<boolean>",
                  "locationInformation": {
                    "buildingId": "<string>",
                    "departmentId": "<string>",
                    "email": "<string>",
                    "id": "<string>",
                    "phone": "<string>",
                    "position": "<string>",
                    "realname": "<string>",
                    "room": "<string>",
                    "username": "<string>",
                    "versionLock": "<integer>"
                  },
                  "mandatory": "<boolean>",
                  "mdmRemovable": "<boolean>",
                  "prestageInstalledProfileIds": [
                    "<string>",
                    "<string>"
                  ],
                  "preventActivationLock": "<boolean>",
                  "purchasingInformation": {
                    "appleCareId": "<string>",
                    "id": "<string>",
                    "leaseDate": "<string>",
                    "leased": "<boolean>",
                    "lifeExpectancy": "<integer>",
                    "poDate": "<string>",
                    "poNumber": "<string>",
                    "purchasePrice": "<string>",
                    "purchased": "<boolean>",
                    "purchasingAccount": "<string>",
                    "purchasingContact": "<string>",
                    "vendor": "<string>",
                    "versionLock": "<integer>",
                    "warrantyDate": "<string>"
                  },
                  "requireAuthentication": "<boolean>",
                  "supportEmailAddress": "<string>",
                  "supportPhoneNumber": "<string>",
                  "skipSetupItems": {
                    "sed28": "<boolean>",
                    "deseruntf": "<boolean>",
                    "autef_": "<boolean>",
                    "commodo_ff": "<boolean>"
                  },
                  "anchorCertificates": [
                    "<string>",
                    "<string>"
                  ],
                  "enrollmentCustomizationId": "<string>",
                  "language": "<string>",
                  "region": "<string>",
                  "enableRecoveryLock": "<boolean>",
                  "recoveryLockPasswordType": "MANUAL",
                  "rotateRecoveryLockPassword": "<boolean>",
                  "recoveryLockPassword": "<string>",
                  "versionLock": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Computer Prestage identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "authenticationPrompt": "<string>",
                  "autoAdvanceSetup": "<boolean>",
                  "customPackageDistributionPointId": "<string>",
                  "customPackageIds": [
                    "<string>",
                    "<string>"
                  ],
                  "defaultPrestage": "<boolean>",
                  "department": "<string>",
                  "deviceEnrollmentProgramInstanceId": "<string>",
                  "displayName": "<string>",
                  "enableDeviceBasedActivationLock": "<boolean>",
                  "enrollmentSiteId": "<string>",
                  "installProfilesDuringSetup": "<boolean>",
                  "keepExistingLocationInformation": "<boolean>",
                  "keepExistingSiteMembership": "<boolean>",
                  "locationInformation": {
                    "buildingId": "<string>",
                    "departmentId": "<string>",
                    "email": "<string>",
                    "id": "<string>",
                    "phone": "<string>",
                    "position": "<string>",
                    "realname": "<string>",
                    "room": "<string>",
                    "username": "<string>",
                    "versionLock": "<integer>"
                  },
                  "mandatory": "<boolean>",
                  "mdmRemovable": "<boolean>",
                  "prestageInstalledProfileIds": [
                    "<string>",
                    "<string>"
                  ],
                  "preventActivationLock": "<boolean>",
                  "purchasingInformation": {
                    "appleCareId": "<string>",
                    "id": "<string>",
                    "leaseDate": "<string>",
                    "leased": "<boolean>",
                    "lifeExpectancy": "<integer>",
                    "poDate": "<string>",
                    "poNumber": "<string>",
                    "purchasePrice": "<string>",
                    "purchased": "<boolean>",
                    "purchasingAccount": "<string>",
                    "purchasingContact": "<string>",
                    "vendor": "<string>",
                    "versionLock": "<integer>",
                    "warrantyDate": "<string>"
                  },
                  "requireAuthentication": "<boolean>",
                  "supportEmailAddress": "<string>",
                  "supportPhoneNumber": "<string>",
                  "skipSetupItems": {
                    "sed_b": "<boolean>"
                  },
                  "anchorCertificates": [
                    "<string>",
                    "<string>"
                  ],
                  "enrollmentCustomizationId": "<string>",
                  "language": "<string>",
                  "region": "<string>",
                  "enableRecoveryLock": "<boolean>",
                  "recoveryLockPasswordType": "MANUAL",
                  "rotateRecoveryLockPassword": "<boolean>",
                  "id": "<string>",
                  "profileUuid": "<string>",
                  "siteId": "<string>",
                  "versionLock": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v2_computer-prestages_id"
      },
      "delete": {
        "tags": [
          "v2 > computer-prestages > {id}"
        ],
        "summary": "Delete a Computer Prestage with the supplied id\n",
        "description": "Deletes a Computer Prestage with the supplied id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Computer Prestage identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v2_computer-prestages_id"
      }
    },
    "/v2/computer-prestages": {
      "get": {
        "tags": [
          "v2 > computer-prestages"
        ],
        "summary": "Get sorted and paged Computer Prestages\n",
        "description": "Gets sorted and paged computer prestages",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "id:desc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "authenticationPrompt": "<string>",
                      "autoAdvanceSetup": "<boolean>",
                      "customPackageDistributionPointId": "<string>",
                      "customPackageIds": [
                        "<string>",
                        "<string>"
                      ],
                      "defaultPrestage": "<boolean>",
                      "department": "<string>",
                      "deviceEnrollmentProgramInstanceId": "<string>",
                      "displayName": "<string>",
                      "enableDeviceBasedActivationLock": "<boolean>",
                      "enrollmentSiteId": "<string>",
                      "installProfilesDuringSetup": "<boolean>",
                      "keepExistingLocationInformation": "<boolean>",
                      "keepExistingSiteMembership": "<boolean>",
                      "locationInformation": {
                        "buildingId": "<string>",
                        "departmentId": "<string>",
                        "email": "<string>",
                        "id": "<string>",
                        "phone": "<string>",
                        "position": "<string>",
                        "realname": "<string>",
                        "room": "<string>",
                        "username": "<string>",
                        "versionLock": "<integer>"
                      },
                      "mandatory": "<boolean>",
                      "mdmRemovable": "<boolean>",
                      "prestageInstalledProfileIds": [
                        "<string>",
                        "<string>"
                      ],
                      "preventActivationLock": "<boolean>",
                      "purchasingInformation": {
                        "appleCareId": "<string>",
                        "id": "<string>",
                        "leaseDate": "<string>",
                        "leased": "<boolean>",
                        "lifeExpectancy": "<integer>",
                        "poDate": "<string>",
                        "poNumber": "<string>",
                        "purchasePrice": "<string>",
                        "purchased": "<boolean>",
                        "purchasingAccount": "<string>",
                        "purchasingContact": "<string>",
                        "vendor": "<string>",
                        "versionLock": "<integer>",
                        "warrantyDate": "<string>"
                      },
                      "requireAuthentication": "<boolean>",
                      "supportEmailAddress": "<string>",
                      "supportPhoneNumber": "<string>",
                      "skipSetupItems": {
                        "cupidatat_296": "<boolean>",
                        "ad_c7c": "<boolean>",
                        "eiusmod_61": "<boolean>"
                      },
                      "anchorCertificates": [
                        "<string>",
                        "<string>"
                      ],
                      "enrollmentCustomizationId": "<string>",
                      "language": "<string>",
                      "region": "<string>",
                      "enableRecoveryLock": "<boolean>",
                      "recoveryLockPasswordType": "RANDOM",
                      "rotateRecoveryLockPassword": "<boolean>",
                      "id": "<string>",
                      "profileUuid": "<string>",
                      "siteId": "<string>",
                      "versionLock": "<integer>"
                    },
                    {
                      "authenticationPrompt": "<string>",
                      "autoAdvanceSetup": "<boolean>",
                      "customPackageDistributionPointId": "<string>",
                      "customPackageIds": [
                        "<string>",
                        "<string>"
                      ],
                      "defaultPrestage": "<boolean>",
                      "department": "<string>",
                      "deviceEnrollmentProgramInstanceId": "<string>",
                      "displayName": "<string>",
                      "enableDeviceBasedActivationLock": "<boolean>",
                      "enrollmentSiteId": "<string>",
                      "installProfilesDuringSetup": "<boolean>",
                      "keepExistingLocationInformation": "<boolean>",
                      "keepExistingSiteMembership": "<boolean>",
                      "locationInformation": {
                        "buildingId": "<string>",
                        "departmentId": "<string>",
                        "email": "<string>",
                        "id": "<string>",
                        "phone": "<string>",
                        "position": "<string>",
                        "realname": "<string>",
                        "room": "<string>",
                        "username": "<string>",
                        "versionLock": "<integer>"
                      },
                      "mandatory": "<boolean>",
                      "mdmRemovable": "<boolean>",
                      "prestageInstalledProfileIds": [
                        "<string>",
                        "<string>"
                      ],
                      "preventActivationLock": "<boolean>",
                      "purchasingInformation": {
                        "appleCareId": "<string>",
                        "id": "<string>",
                        "leaseDate": "<string>",
                        "leased": "<boolean>",
                        "lifeExpectancy": "<integer>",
                        "poDate": "<string>",
                        "poNumber": "<string>",
                        "purchasePrice": "<string>",
                        "purchased": "<boolean>",
                        "purchasingAccount": "<string>",
                        "purchasingContact": "<string>",
                        "vendor": "<string>",
                        "versionLock": "<integer>",
                        "warrantyDate": "<string>"
                      },
                      "requireAuthentication": "<boolean>",
                      "supportEmailAddress": "<string>",
                      "supportPhoneNumber": "<string>",
                      "skipSetupItems": {
                        "et_c_": "<boolean>",
                        "cupidatat_c7": "<boolean>"
                      },
                      "anchorCertificates": [
                        "<string>",
                        "<string>"
                      ],
                      "enrollmentCustomizationId": "<string>",
                      "language": "<string>",
                      "region": "<string>",
                      "enableRecoveryLock": "<boolean>",
                      "recoveryLockPasswordType": "RANDOM",
                      "rotateRecoveryLockPassword": "<boolean>",
                      "id": "<string>",
                      "profileUuid": "<string>",
                      "siteId": "<string>",
                      "versionLock": "<integer>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_computer-prestages"
      },
      "post": {
        "tags": [
          "v2 > computer-prestages"
        ],
        "summary": "Create a Computer Prestage\n",
        "description": "Create a computer prestage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "authenticationPrompt": "<string>",
                  "autoAdvanceSetup": "<boolean>",
                  "customPackageDistributionPointId": "<string>",
                  "customPackageIds": [
                    "<string>",
                    "<string>"
                  ],
                  "defaultPrestage": "<boolean>",
                  "department": "<string>",
                  "deviceEnrollmentProgramInstanceId": "<string>",
                  "displayName": "<string>",
                  "enableDeviceBasedActivationLock": "<boolean>",
                  "enrollmentSiteId": "<string>",
                  "installProfilesDuringSetup": "<boolean>",
                  "keepExistingLocationInformation": "<boolean>",
                  "keepExistingSiteMembership": "<boolean>",
                  "locationInformation": {
                    "buildingId": "<string>",
                    "departmentId": "<string>",
                    "email": "<string>",
                    "id": "<string>",
                    "phone": "<string>",
                    "position": "<string>",
                    "realname": "<string>",
                    "room": "<string>",
                    "username": "<string>",
                    "versionLock": "<integer>"
                  },
                  "mandatory": "<boolean>",
                  "mdmRemovable": "<boolean>",
                  "prestageInstalledProfileIds": [
                    "<string>",
                    "<string>"
                  ],
                  "preventActivationLock": "<boolean>",
                  "purchasingInformation": {
                    "appleCareId": "<string>",
                    "id": "<string>",
                    "leaseDate": "<string>",
                    "leased": "<boolean>",
                    "lifeExpectancy": "<integer>",
                    "poDate": "<string>",
                    "poNumber": "<string>",
                    "purchasePrice": "<string>",
                    "purchased": "<boolean>",
                    "purchasingAccount": "<string>",
                    "purchasingContact": "<string>",
                    "vendor": "<string>",
                    "versionLock": "<integer>",
                    "warrantyDate": "<string>"
                  },
                  "requireAuthentication": "<boolean>",
                  "supportEmailAddress": "<string>",
                  "supportPhoneNumber": "<string>",
                  "skipSetupItems": {
                    "et_": "<boolean>"
                  },
                  "anchorCertificates": [
                    "<string>",
                    "<string>"
                  ],
                  "enrollmentCustomizationId": "<string>",
                  "language": "<string>",
                  "region": "<string>",
                  "enableRecoveryLock": "<boolean>",
                  "recoveryLockPasswordType": "RANDOM",
                  "rotateRecoveryLockPassword": "<boolean>",
                  "recoveryLockPassword": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_computer-prestages"
      }
    },
    "/v2/engage/history": {
      "get": {
        "tags": [
          "v2 > engage > history"
        ],
        "summary": "Get Engage settings history\n",
        "description": "Gets Engage settings history\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "date:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_engage_history"
      },
      "post": {
        "tags": [
          "v2 > engage > history"
        ],
        "summary": "Add Engage settings history notes\n",
        "description": "Adds Engage settings history notes\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<integer>",
                  "username": "<string>",
                  "date": "<string>",
                  "note": "<string>",
                  "details": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_engage_history"
      }
    },
    "/v2/engage": {
      "get": {
        "tags": [
          "v2 > engage"
        ],
        "summary": "Get Engage settings\n",
        "description": "Get Engage settings\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "isEnabled": "<boolean>"
                }
              }
            }
          }
        },
        "operationId": "get_v2_engage"
      },
      "put": {
        "tags": [
          "v2 > engage"
        ],
        "summary": "Update Engage settings\n",
        "description": "Update Engage settings\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "isEnabled": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "isEnabled": "<boolean>"
                }
              }
            }
          }
        },
        "operationId": "put_v2_engage"
      }
    },
    "/v2/enrollment/access-groups/{serverId}/{groupId}": {
      "get": {
        "tags": [
          "v2 > enrollment > access-groups > {serverId} > {groupId}"
        ],
        "summary": "Retrieve the configured LDAP groups configured for User-Initiated Enrollment\n",
        "description": "Retrieves the configured LDAP groups configured for User-Initiated Enrollment.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "serverId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) LDAP server id.",
            "example": "<string>"
          },
          {
            "name": "groupId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) LDAP group id.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "ldapServerId": "<string>",
                  "name": "<string>",
                  "siteId": "<string>",
                  "enterpriseEnrollmentEnabled": "<boolean>",
                  "personalEnrollmentEnabled": "<boolean>",
                  "accountDrivenUserEnrollmentEnabled": "<boolean>",
                  "requireEula": "<boolean>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_enrollment_access-groups_serverId_groupId"
      },
      "put": {
        "tags": [
          "v2 > enrollment > access-groups > {serverId} > {groupId}"
        ],
        "summary": "Modify the configured LDAP groups configured for User-Initiated Enrollment\n",
        "description": "Modifies the configured LDAP groups configured for User-Initiated Enrollment.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "siteId": "<string>",
                  "enterpriseEnrollmentEnabled": "<boolean>",
                  "personalEnrollmentEnabled": "<boolean>",
                  "accountDrivenUserEnrollmentEnabled": "<boolean>",
                  "requireEula": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "serverId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) LDAP server id.",
            "example": "<string>"
          },
          {
            "name": "groupId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) LDAP group id.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "ldapServerId": "<string>",
                  "name": "<string>",
                  "siteId": "<string>",
                  "enterpriseEnrollmentEnabled": "<boolean>",
                  "personalEnrollmentEnabled": "<boolean>",
                  "accountDrivenUserEnrollmentEnabled": "<boolean>",
                  "requireEula": "<boolean>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v2_enrollment_access-groups_serverId_groupId"
      },
      "delete": {
        "tags": [
          "v2 > enrollment > access-groups > {serverId} > {groupId}"
        ],
        "summary": "Delete an LDAP group's access to user initiated Enrollment\n",
        "description": "Deletes an LDAP group's access to user initiated enrollment. The group \"All LDAP Users\" cannot be deleted, but it can be modified to disallow User-Initiated Enrollment.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "serverId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) LDAP server id",
            "example": "<string>"
          },
          {
            "name": "groupId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) LDAP group id.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v2_enrollment_access-groups_serverId_groupId"
      }
    },
    "/v2/enrollment/access-groups": {
      "get": {
        "tags": [
          "v2 > enrollment > access-groups"
        ],
        "summary": "Retrieve the configured LDAP groups configured for User-Initiated Enrollment\n",
        "description": "Retrieves the configured LDAP groups configured for User-Initiated Enrollment.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: `property:asc/desc`. Default sort\nis `name:asc`. Multiple sort criteria are supported and must be separated\nwith a comma. Example: `sort=date:desc,name:asc`.\n",
            "example": "name:asc"
          },
          {
            "name": "all-users-option-first",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Return \"All LDAP Users\" option on the first position if it is present in the current page",
            "example": "false"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<string>",
                      "ldapServerId": "<string>",
                      "name": "<string>",
                      "siteId": "<string>",
                      "enterpriseEnrollmentEnabled": "<boolean>",
                      "personalEnrollmentEnabled": "<boolean>",
                      "accountDrivenUserEnrollmentEnabled": "<boolean>",
                      "requireEula": "<boolean>"
                    },
                    {
                      "id": "<string>",
                      "ldapServerId": "<string>",
                      "name": "<string>",
                      "siteId": "<string>",
                      "enterpriseEnrollmentEnabled": "<boolean>",
                      "personalEnrollmentEnabled": "<boolean>",
                      "accountDrivenUserEnrollmentEnabled": "<boolean>",
                      "requireEula": "<boolean>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_enrollment_access-groups"
      },
      "post": {
        "tags": [
          "v2 > enrollment > access-groups"
        ],
        "summary": "Add the configured LDAP group for User-Initiated Enrollment.\n",
        "description": "Add the configured LDAP group for User-Initiated Enrollment.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "siteId": "<string>",
                  "enterpriseEnrollmentEnabled": "<boolean>",
                  "personalEnrollmentEnabled": "<boolean>",
                  "accountDrivenUserEnrollmentEnabled": "<boolean>",
                  "requireEula": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_enrollment_access-groups"
      }
    },
    "/v2/enrollment/filtered-language-codes": {
      "get": {
        "tags": [
          "v2 > enrollment > filtered-language-codes"
        ],
        "summary": "Retrieve the list of languages and corresponding ISO 639-1 Codes but only those not already added to Enrollment\n",
        "description": "Retrieves the list of languages and corresponding ISO 639-1 Codes, but only those not already added to Enrollment.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "value": "<string>",
                    "name": "<string>"
                  },
                  {
                    "value": "<string>",
                    "name": "<string>"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v2_enrollment_filtered-language-codes"
      }
    },
    "/v2/enrollment/history/export": {
      "post": {
        "tags": [
          "v2 > enrollment > history > export"
        ],
        "summary": "Export enrollment history collection\n",
        "description": "Export enrollment history collection\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "page": 0,
                  "pageSize": 100,
                  "sort": [
                    "id:desc"
                  ],
                  "filter": "<string>",
                  "fields": [
                    {
                      "fieldName": "<string>",
                      "fieldLabelOverride": "<string>"
                    },
                    {
                      "fieldName": "<string>",
                      "fieldLabelOverride": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/csv,application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is id:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=id:desc,name:asc ",
            "example": "id:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name. This param can be combined with paging and sorting. Example: name==\"*script*\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/csv,application/json"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n  \"format\": \"binary\",\n  \"example\": \"Username,DATE,NOTES,Details\\nadmin, 2022-02-04T11:56:26.343Z, Edited ,Re-enrollment Restricted true\\n\"\n}"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_enrollment_history_export"
      }
    },
    "/v2/enrollment/history": {
      "get": {
        "tags": [
          "v2 > enrollment > history"
        ],
        "summary": "Get sorted and paged Enrollment history object\n",
        "description": "Gets sorted and paged Enrollment history object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: `property:asc/desc`. Default sort\nis `date:desc`. Multiple sort criteria are supported and must be separated\nwith a comma. Example: `sort=date:desc,name:asc`.\n",
            "example": "date:desc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_enrollment_history"
      },
      "post": {
        "tags": [
          "v2 > enrollment > history"
        ],
        "summary": "Add Enrollment history object notes\n",
        "description": "Adds Enrollment history object notes\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_enrollment_history"
      }
    },
    "/v2/enrollment/language-codes": {
      "get": {
        "tags": [
          "v2 > enrollment > language-codes"
        ],
        "summary": "Retrieve the list of languages and corresponding ISO 639-1 Codes\n",
        "description": "Retrieves the list of languages and corresponding ISO 639-1 Codes.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "value": "<string>",
                    "name": "<string>"
                  },
                  {
                    "value": "<string>",
                    "name": "<string>"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v2_enrollment_language-codes"
      }
    },
    "/v2/enrollment/languages/delete-multiple": {
      "post": {
        "tags": [
          "v2 > enrollment > languages > delete-multiple"
        ],
        "summary": "Delete multiple configured languages from User-Initiated Enrollment settings\n",
        "description": "Delete multiple configured languages from User-Initiated Enrollment settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "ids": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_enrollment_languages_delete-multiple"
      }
    },
    "/v2/enrollment/languages/{languageId}": {
      "get": {
        "tags": [
          "v2 > enrollment > languages > {languageId}"
        ],
        "summary": "Retrieve the Enrollment messaging for a language\n",
        "description": "Retrieves the enrollment messaging for a language.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "languageId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Two letter ISO 639-1 Language Code",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "languageCode": "<string>",
                  "name": "<string>",
                  "title": "<string>",
                  "loginDescription": "<string>",
                  "username": "<string>",
                  "password": "<string>",
                  "loginButton": "<string>",
                  "deviceClassDescription": "<string>",
                  "deviceClassPersonal": "<string>",
                  "deviceClassPersonalDescription": "<string>",
                  "deviceClassEnterprise": "<string>",
                  "deviceClassEnterpriseDescription": "<string>",
                  "deviceClassButton": "<string>",
                  "personalEula": "<string>",
                  "enterpriseEula": "<string>",
                  "eulaButton": "<string>",
                  "siteDescription": "<string>",
                  "certificateText": "<string>",
                  "certificateButton": "<string>",
                  "certificateProfileName": "<string>",
                  "certificateProfileDescription": "<string>",
                  "personalText": "<string>",
                  "personalButton": "<string>",
                  "personalProfileName": "<string>",
                  "personalProfileDescription": "<string>",
                  "userEnrollmentText": "Enter your Managed Apple id to install the MDM Profile.",
                  "userEnrollmentButton": "Continue",
                  "userEnrollmentProfileName": "MDM Profile",
                  "userEnrollmentProfileDescription": "MDM Profile for mobile device management",
                  "enterpriseText": "<string>",
                  "enterpriseButton": "<string>",
                  "enterpriseProfileName": "<string>",
                  "enterpriseProfileDescription": "<string>",
                  "enterprisePending": "<string>",
                  "quickAddText": "<string>",
                  "quickAddButton": "<string>",
                  "quickAddName": "QuickAdd.pkg",
                  "quickAddPending": "<string>",
                  "completeMessage": "<string>",
                  "failedMessage": "<string>",
                  "tryAgainButton": "<string>",
                  "checkNowButton": "<string>",
                  "checkEnrollmentMessage": "<string>",
                  "logoutButton": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_enrollment_languages_languageId"
      },
      "put": {
        "tags": [
          "v2 > enrollment > languages > {languageId}"
        ],
        "summary": "Edit Enrollment messaging for a language\n",
        "description": "Edit enrollment messaging for a language.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "languageCode": "<string>",
                  "name": "<string>",
                  "title": "<string>",
                  "loginDescription": "<string>",
                  "username": "<string>",
                  "password": "<string>",
                  "loginButton": "<string>",
                  "deviceClassDescription": "<string>",
                  "deviceClassPersonal": "<string>",
                  "deviceClassPersonalDescription": "<string>",
                  "deviceClassEnterprise": "<string>",
                  "deviceClassEnterpriseDescription": "<string>",
                  "deviceClassButton": "<string>",
                  "personalEula": "<string>",
                  "enterpriseEula": "<string>",
                  "eulaButton": "<string>",
                  "siteDescription": "<string>",
                  "certificateText": "<string>",
                  "certificateButton": "<string>",
                  "certificateProfileName": "<string>",
                  "certificateProfileDescription": "<string>",
                  "personalText": "<string>",
                  "personalButton": "<string>",
                  "personalProfileName": "<string>",
                  "personalProfileDescription": "<string>",
                  "userEnrollmentText": "Enter your Managed Apple id to install the MDM Profile.",
                  "userEnrollmentButton": "Continue",
                  "userEnrollmentProfileName": "MDM Profile",
                  "userEnrollmentProfileDescription": "MDM Profile for mobile device management",
                  "enterpriseText": "<string>",
                  "enterpriseButton": "<string>",
                  "enterpriseProfileName": "<string>",
                  "enterpriseProfileDescription": "<string>",
                  "enterprisePending": "<string>",
                  "quickAddText": "<string>",
                  "quickAddButton": "<string>",
                  "quickAddName": "QuickAdd.pkg",
                  "quickAddPending": "<string>",
                  "completeMessage": "<string>",
                  "failedMessage": "<string>",
                  "tryAgainButton": "<string>",
                  "checkNowButton": "<string>",
                  "checkEnrollmentMessage": "<string>",
                  "logoutButton": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "languageId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Two letter ISO 639-1 Language Code",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "languageCode": "<string>",
                  "name": "<string>",
                  "title": "<string>",
                  "loginDescription": "<string>",
                  "username": "<string>",
                  "password": "<string>",
                  "loginButton": "<string>",
                  "deviceClassDescription": "<string>",
                  "deviceClassPersonal": "<string>",
                  "deviceClassPersonalDescription": "<string>",
                  "deviceClassEnterprise": "<string>",
                  "deviceClassEnterpriseDescription": "<string>",
                  "deviceClassButton": "<string>",
                  "personalEula": "<string>",
                  "enterpriseEula": "<string>",
                  "eulaButton": "<string>",
                  "siteDescription": "<string>",
                  "certificateText": "<string>",
                  "certificateButton": "<string>",
                  "certificateProfileName": "<string>",
                  "certificateProfileDescription": "<string>",
                  "personalText": "<string>",
                  "personalButton": "<string>",
                  "personalProfileName": "<string>",
                  "personalProfileDescription": "<string>",
                  "userEnrollmentText": "Enter your Managed Apple id to install the MDM Profile.",
                  "userEnrollmentButton": "Continue",
                  "userEnrollmentProfileName": "MDM Profile",
                  "userEnrollmentProfileDescription": "MDM Profile for mobile device management",
                  "enterpriseText": "<string>",
                  "enterpriseButton": "<string>",
                  "enterpriseProfileName": "<string>",
                  "enterpriseProfileDescription": "<string>",
                  "enterprisePending": "<string>",
                  "quickAddText": "<string>",
                  "quickAddButton": "<string>",
                  "quickAddName": "QuickAdd.pkg",
                  "quickAddPending": "<string>",
                  "completeMessage": "<string>",
                  "failedMessage": "<string>",
                  "tryAgainButton": "<string>",
                  "checkNowButton": "<string>",
                  "checkEnrollmentMessage": "<string>",
                  "logoutButton": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v2_enrollment_languages_languageId"
      },
      "delete": {
        "tags": [
          "v2 > enrollment > languages > {languageId}"
        ],
        "summary": "Delete the Enrollment messaging for a language\n",
        "description": "Delete the enrollment messaging for a language.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "languageId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Two letter ISO 639-1 Language Code",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v2_enrollment_languages_languageId"
      }
    },
    "/v2/enrollment/languages": {
      "get": {
        "tags": [
          "v2 > enrollment > languages"
        ],
        "summary": "Get an array of the language codes that have Enrollment messaging\n",
        "description": "Returns an array of the language codes that have enrollment messaging currently configured.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort\nis `languageCode:asc`. Multiple sort criteria are supported and must be separated\nwith a comma. Example: `sort=date:desc,name:asc`.\n",
            "example": "languageCode:asc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "languageCode": "<string>",
                      "name": "<string>",
                      "title": "<string>",
                      "loginDescription": "<string>",
                      "username": "<string>",
                      "password": "<string>",
                      "loginButton": "<string>",
                      "deviceClassDescription": "<string>",
                      "deviceClassPersonal": "<string>",
                      "deviceClassPersonalDescription": "<string>",
                      "deviceClassEnterprise": "<string>",
                      "deviceClassEnterpriseDescription": "<string>",
                      "deviceClassButton": "<string>",
                      "personalEula": "<string>",
                      "enterpriseEula": "<string>",
                      "eulaButton": "<string>",
                      "siteDescription": "<string>",
                      "certificateText": "<string>",
                      "certificateButton": "<string>",
                      "certificateProfileName": "<string>",
                      "certificateProfileDescription": "<string>",
                      "personalText": "<string>",
                      "personalButton": "<string>",
                      "personalProfileName": "<string>",
                      "personalProfileDescription": "<string>",
                      "userEnrollmentText": "Enter your Managed Apple id to install the MDM Profile.",
                      "userEnrollmentButton": "Continue",
                      "userEnrollmentProfileName": "MDM Profile",
                      "userEnrollmentProfileDescription": "MDM Profile for mobile device management",
                      "enterpriseText": "<string>",
                      "enterpriseButton": "<string>",
                      "enterpriseProfileName": "<string>",
                      "enterpriseProfileDescription": "<string>",
                      "enterprisePending": "<string>",
                      "quickAddText": "<string>",
                      "quickAddButton": "<string>",
                      "quickAddName": "QuickAdd.pkg",
                      "quickAddPending": "<string>",
                      "completeMessage": "<string>",
                      "failedMessage": "<string>",
                      "tryAgainButton": "<string>",
                      "checkNowButton": "<string>",
                      "checkEnrollmentMessage": "<string>",
                      "logoutButton": "<string>"
                    },
                    {
                      "languageCode": "<string>",
                      "name": "<string>",
                      "title": "<string>",
                      "loginDescription": "<string>",
                      "username": "<string>",
                      "password": "<string>",
                      "loginButton": "<string>",
                      "deviceClassDescription": "<string>",
                      "deviceClassPersonal": "<string>",
                      "deviceClassPersonalDescription": "<string>",
                      "deviceClassEnterprise": "<string>",
                      "deviceClassEnterpriseDescription": "<string>",
                      "deviceClassButton": "<string>",
                      "personalEula": "<string>",
                      "enterpriseEula": "<string>",
                      "eulaButton": "<string>",
                      "siteDescription": "<string>",
                      "certificateText": "<string>",
                      "certificateButton": "<string>",
                      "certificateProfileName": "<string>",
                      "certificateProfileDescription": "<string>",
                      "personalText": "<string>",
                      "personalButton": "<string>",
                      "personalProfileName": "<string>",
                      "personalProfileDescription": "<string>",
                      "userEnrollmentText": "Enter your Managed Apple id to install the MDM Profile.",
                      "userEnrollmentButton": "Continue",
                      "userEnrollmentProfileName": "MDM Profile",
                      "userEnrollmentProfileDescription": "MDM Profile for mobile device management",
                      "enterpriseText": "<string>",
                      "enterpriseButton": "<string>",
                      "enterpriseProfileName": "<string>",
                      "enterpriseProfileDescription": "<string>",
                      "enterprisePending": "<string>",
                      "quickAddText": "<string>",
                      "quickAddButton": "<string>",
                      "quickAddName": "QuickAdd.pkg",
                      "quickAddPending": "<string>",
                      "completeMessage": "<string>",
                      "failedMessage": "<string>",
                      "tryAgainButton": "<string>",
                      "checkNowButton": "<string>",
                      "checkEnrollmentMessage": "<string>",
                      "logoutButton": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_enrollment_languages"
      }
    },
    "/v2/enrollment": {
      "get": {
        "tags": [
          "v2 > enrollment"
        ],
        "summary": "Get Enrollment object and Re-enrollment settings\n",
        "description": "Gets Enrollment object and re-enrollment settings. The settings can be altered without providing the existing management password by providing the following value for `managementPassword`:\n`\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff`.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "managementUsername": "",
                  "installSingleProfile": false,
                  "signingMdmProfileEnabled": false,
                  "mdmSigningCertificate": {
                    "filename": "null",
                    "md5Sum": ""
                  },
                  "restrictReenrollment": false,
                  "flushLocationInformation": false,
                  "flushLocationHistoryInformation": false,
                  "flushPolicyHistory": false,
                  "flushExtensionAttributes": false,
                  "flushMdmCommandsOnReenroll": "DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED",
                  "macOsEnterpriseEnrollmentEnabled": false,
                  "managementPasswordSet": "<boolean>",
                  "passwordType": "STATIC",
                  "randomPasswordLength": 8,
                  "createManagementAccount": true,
                  "hideManagementAccount": false,
                  "allowSshOnlyManagementAccount": false,
                  "ensureSshRunning": true,
                  "launchSelfService": false,
                  "signQuickAdd": false,
                  "developerCertificateIdentity": {
                    "filename": "null",
                    "md5Sum": ""
                  },
                  "developerCertificateIdentityDetails": {
                    "subject": "",
                    "serialNumber": ""
                  },
                  "mdmSigningCertificateDetails": {
                    "subject": "",
                    "serialNumber": ""
                  },
                  "iosEnterpriseEnrollmentEnabled": true,
                  "iosPersonalEnrollmentEnabled": false,
                  "personalDeviceEnrollmentType": "PERSONALDEVICEPROFILES",
                  "accountDrivenUserEnrollmentEnabled": false
                }
              }
            }
          }
        },
        "operationId": "get_v2_enrollment"
      },
      "put": {
        "tags": [
          "v2 > enrollment"
        ],
        "summary": "Update Enrollment object\n",
        "description": "Update enrollment object. Regarding the `developerCertificateIdentity`,\nif this object is omitted, the certificate will not be deleted from Jamf Pro.\nThe `identityKeystore` is the entire cert file as a base64 encoded string. The\n`md5Sum` field is not required in the PUT request, but is calculated and returned\nin the response.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "managementUsername": "",
                  "installSingleProfile": false,
                  "signingMdmProfileEnabled": false,
                  "mdmSigningCertificate": {
                    "filename": "null",
                    "keystorePassword": "",
                    "identityKeystore": "dN57sS1g"
                  },
                  "restrictReenrollment": false,
                  "flushLocationInformation": false,
                  "flushLocationHistoryInformation": false,
                  "flushPolicyHistory": false,
                  "flushExtensionAttributes": false,
                  "flushMdmCommandsOnReenroll": "DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED",
                  "macOsEnterpriseEnrollmentEnabled": false,
                  "managementPassword": "null",
                  "passwordType": "STATIC",
                  "randomPasswordLength": 8,
                  "createManagementAccount": true,
                  "hideManagementAccount": false,
                  "allowSshOnlyManagementAccount": false,
                  "ensureSshRunning": true,
                  "launchSelfService": false,
                  "signQuickAdd": false,
                  "developerCertificateIdentity": {
                    "filename": "null",
                    "keystorePassword": "",
                    "identityKeystore": ""
                  },
                  "developerCertificateIdentityDetails": {
                    "subject": "",
                    "serialNumber": ""
                  },
                  "mdmSigningCertificateDetails": {
                    "subject": "",
                    "serialNumber": ""
                  },
                  "iosEnterpriseEnrollmentEnabled": true,
                  "iosPersonalEnrollmentEnabled": false,
                  "personalDeviceEnrollmentType": "PERSONALDEVICEPROFILES",
                  "accountDrivenUserEnrollmentEnabled": false
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "managementUsername": "",
                  "installSingleProfile": false,
                  "signingMdmProfileEnabled": false,
                  "mdmSigningCertificate": {
                    "filename": "null",
                    "md5Sum": ""
                  },
                  "restrictReenrollment": false,
                  "flushLocationInformation": false,
                  "flushLocationHistoryInformation": false,
                  "flushPolicyHistory": false,
                  "flushExtensionAttributes": false,
                  "flushMdmCommandsOnReenroll": "DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED",
                  "macOsEnterpriseEnrollmentEnabled": false,
                  "managementPasswordSet": "<boolean>",
                  "passwordType": "STATIC",
                  "randomPasswordLength": 8,
                  "createManagementAccount": true,
                  "hideManagementAccount": false,
                  "allowSshOnlyManagementAccount": false,
                  "ensureSshRunning": true,
                  "launchSelfService": false,
                  "signQuickAdd": false,
                  "developerCertificateIdentity": {
                    "filename": "null",
                    "md5Sum": ""
                  },
                  "developerCertificateIdentityDetails": {
                    "subject": "",
                    "serialNumber": ""
                  },
                  "mdmSigningCertificateDetails": {
                    "subject": "",
                    "serialNumber": ""
                  },
                  "iosEnterpriseEnrollmentEnabled": true,
                  "iosPersonalEnrollmentEnabled": false,
                  "personalDeviceEnrollmentType": "PERSONALDEVICEPROFILES",
                  "accountDrivenUserEnrollmentEnabled": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v2_enrollment"
      }
    },
    "/v2/enrollment-customizations/images/{id}": {
      "get": {
        "tags": [
          "v2 > enrollment-customizations > images > {id}"
        ],
        "summary": "Download an enrollment customization image\n",
        "description": "Download an enrollment customization image",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "image/*"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) id of the enrollment customization image",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "image/*"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<binary>"
              }
            }
          }
        },
        "operationId": "get_v2_enrollment-customizations_images_id"
      }
    },
    "/v2/enrollment-customizations/images": {
      "post": {
        "tags": [
          "v2 > enrollment-customizations > images"
        ],
        "summary": "Upload an image",
        "description": "Uploads an image",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "(Required) The file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "multipart/form-data"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "url": "<string>"
                }
              }
            }
          }
        },
        "operationId": "post_v2_enrollment-customizations_images"
      }
    },
    "/v2/enrollment-customizations/{id}/history": {
      "get": {
        "tags": [
          "v2 > enrollment-customizations > {id} > history"
        ],
        "summary": "Get sorted and paged Enrollment Customization history objects\n",
        "description": "Gets sorted and paged enrollment customization history objects",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc",
            "example": "date:desc"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_enrollment-customizations_id_history"
      },
      "post": {
        "tags": [
          "v2 > enrollment-customizations > {id} > history"
        ],
        "summary": "Add Enrollment Customization history object notes\n",
        "description": "Adds enrollment customization history object notes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<integer>",
                  "username": "<string>",
                  "date": "<string>",
                  "note": "<string>",
                  "details": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_enrollment-customizations_id_history"
      }
    },
    "/v2/enrollment-customizations/{id}/prestages": {
      "get": {
        "tags": [
          "v2 > enrollment-customizations > {id} > prestages"
        ],
        "summary": "Retrieve the list of Prestages using this Enrollment Customization\n",
        "description": "Retrieves the list of Prestages using this Enrollment Customization",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "dependencies": [
                    {
                      "name": "<string>",
                      "humanReadableName": "<string>",
                      "hyperlink": "<string>"
                    },
                    {
                      "name": "<string>",
                      "humanReadableName": "<string>",
                      "hyperlink": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_enrollment-customizations_id_prestages"
      }
    },
    "/v2/enrollment-customizations/{id}": {
      "get": {
        "tags": [
          "v2 > enrollment-customizations > {id}"
        ],
        "summary": "Retrieve an Enrollment Customization with the supplied id\n",
        "description": "Retrieves an Enrollment Customization with the supplied id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "description": "<string>",
                  "displayName": "<string>",
                  "enrollmentCustomizationBrandingSettings": {
                    "backgroundColor": "<string>",
                    "buttonColor": "<string>",
                    "buttonTextColor": "<string>",
                    "iconUrl": "<string>",
                    "textColor": "<string>"
                  },
                  "siteId": "<string>",
                  "id": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_enrollment-customizations_id"
      },
      "put": {
        "tags": [
          "v2 > enrollment-customizations > {id}"
        ],
        "summary": "Update an Enrollment Customization\n",
        "description": "Updates an Enrollment Customization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "description": "<string>",
                  "displayName": "<string>",
                  "enrollmentCustomizationBrandingSettings": {
                    "backgroundColor": "<string>",
                    "buttonColor": "<string>",
                    "buttonTextColor": "<string>",
                    "iconUrl": "<string>",
                    "textColor": "<string>"
                  },
                  "siteId": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "description": "<string>",
                  "displayName": "<string>",
                  "enrollmentCustomizationBrandingSettings": {
                    "backgroundColor": "<string>",
                    "buttonColor": "<string>",
                    "buttonTextColor": "<string>",
                    "iconUrl": "<string>",
                    "textColor": "<string>"
                  },
                  "siteId": "<string>",
                  "id": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v2_enrollment-customizations_id"
      },
      "delete": {
        "tags": [
          "v2 > enrollment-customizations > {id}"
        ],
        "summary": "Delete an Enrollment Customization with the supplied id\n",
        "description": "Deletes an Enrollment Customization with the supplied id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Enrollment Customization identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v2_enrollment-customizations_id"
      }
    },
    "/v2/enrollment-customizations": {
      "get": {
        "tags": [
          "v2 > enrollment-customizations"
        ],
        "summary": "Retrieve sorted and paged Enrollment Customizations\n",
        "description": "Retrieves sorted and paged Enrollment Customizations",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "id:asc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "description": "<string>",
                      "displayName": "<string>",
                      "enrollmentCustomizationBrandingSettings": {
                        "backgroundColor": "<string>",
                        "buttonColor": "<string>",
                        "buttonTextColor": "<string>",
                        "iconUrl": "<string>",
                        "textColor": "<string>"
                      },
                      "siteId": "<string>",
                      "id": "<string>"
                    },
                    {
                      "description": "<string>",
                      "displayName": "<string>",
                      "enrollmentCustomizationBrandingSettings": {
                        "backgroundColor": "<string>",
                        "buttonColor": "<string>",
                        "buttonTextColor": "<string>",
                        "iconUrl": "<string>",
                        "textColor": "<string>"
                      },
                      "siteId": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_enrollment-customizations"
      },
      "post": {
        "tags": [
          "v2 > enrollment-customizations"
        ],
        "summary": "Create an Enrollment Customization\n",
        "description": "Create an enrollment customization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "description": "<string>",
                  "displayName": "<string>",
                  "enrollmentCustomizationBrandingSettings": {
                    "backgroundColor": "<string>",
                    "buttonColor": "<string>",
                    "buttonTextColor": "<string>",
                    "iconUrl": "<string>",
                    "textColor": "<string>"
                  },
                  "siteId": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          }
        },
        "operationId": "post_v2_enrollment-customizations"
      }
    },
    "/v2/inventory-preload/csv": {
      "get": {
        "tags": [
          "v2 > inventory-preload > csv"
        ],
        "summary": "Download all Inventory Preload records",
        "description": "Returns all Inventory Preload records as a CSV file.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/csv"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/csv"
                }
              },
              "Content-Disposition": {
                "schema": {
                  "type": "string",
                  "example": "<string>"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<string>"
              }
            }
          }
        },
        "operationId": "get_v2_inventory-preload_csv"
      },
      "post": {
        "tags": [
          "v2 > inventory-preload > csv"
        ],
        "summary": "Create one or more new Inventory Preload records using CSV\n",
        "description": "Create one or more new Inventory Preload records using CSV.\nA CSV template can be downloaded from /v2/inventory-preload/csv-template.\nSerial number and device type are required. All other fields are optional.\nWhen a matching serial number exists in the Inventory Preload data, the record will be overwritten with the CSV data.\nIf the CSV file contains a new username and an email address is provided, the new user is created in Jamf Pro.\nIf the CSV file contains an existing username, the following user-related fields are updated in Jamf Pro.\nFull Name,\nEmail Address,\nPhone Number,\nPosition.\nThis endpoint does not do full validation of each record in the CSV data.\nTo do full validation, use the `/v2/inventory-preload/csv-validate` endpoint first.\n",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "(Required) The CSV file to upload",
                    "example": "<string>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "multipart/form-data"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "id": "<string>",
                    "href": "<string>"
                  },
                  {
                    "id": "<string>",
                    "href": "<string>"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>",
                      "value": "<string>",
                      "serialNumber": "<string>",
                      "line": "<integer>",
                      "fieldSize": "<integer>",
                      "deviceType": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>",
                      "value": "<string>",
                      "serialNumber": "<string>",
                      "line": "<integer>",
                      "fieldSize": "<integer>",
                      "deviceType": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_inventory-preload_csv"
      }
    },
    "/v2/inventory-preload/csv-template": {
      "get": {
        "tags": [
          "v2 > inventory-preload > csv-template"
        ],
        "summary": "Download the Inventory Preload CSV template",
        "description": "Retrieves the Inventory Preload CSV file template.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/csv"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/csv"
                }
              },
              "Content-Disposition": {
                "schema": {
                  "type": "string",
                  "example": "<string>"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<string>"
              }
            }
          }
        },
        "operationId": "get_v2_inventory-preload_csv-template"
      }
    },
    "/v2/inventory-preload/csv-validate": {
      "post": {
        "tags": [
          "v2 > inventory-preload > csv-validate"
        ],
        "summary": "Validate a given CSV file\n",
        "description": "Validate a given CSV file.\nSerial number and device type are required. All other fields are optional.\nA CSV template can be downloaded from `/v2/inventory-preload/csv-template`.\n",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "(Required) The CSV file to upload",
                    "example": "<string>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "multipart/form-data"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "recordCount": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>",
                      "value": "<string>",
                      "serialNumber": "<string>",
                      "line": "<integer>",
                      "fieldSize": "<integer>",
                      "deviceType": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>",
                      "value": "<string>",
                      "serialNumber": "<string>",
                      "line": "<integer>",
                      "fieldSize": "<integer>",
                      "deviceType": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_inventory-preload_csv-validate"
      }
    },
    "/v2/inventory-preload/ea-columns": {
      "get": {
        "tags": [
          "v2 > inventory-preload > ea-columns"
        ],
        "summary": "Retrieve a list of extension attribute columns\n",
        "description": "Retrieve a list of extension attribute columns currently associated\nwith inventory preload records\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "name": "<string>",
                      "fullName": "<string>"
                    },
                    {
                      "name": "<string>",
                      "fullName": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_inventory-preload_ea-columns"
      }
    },
    "/v2/inventory-preload/export": {
      "post": {
        "tags": [
          "v2 > inventory-preload > export"
        ],
        "summary": "Export a collection of inventory preload records\n",
        "description": "Export a collection of inventory preload records\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "page": 0,
                  "pageSize": 100,
                  "sort": [
                    "id:desc"
                  ],
                  "filter": "<string>",
                  "fields": [
                    {
                      "fieldName": "<string>",
                      "fieldLabelOverride": "<string>"
                    },
                    {
                      "fieldName": "<string>",
                      "fieldLabelOverride": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/csv"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: `property:asc/desc`. Default sort\nis `id:asc`. Multiple sort criteria are supported and must be separated with\na comma. All inventory preload fields are supported, however fields added by\nextension attributes are not supported. If sorting by deviceType, use `0` for\nComputer and `1` for Mobile Device.\n\nExample: `sort=date:desc,name:asc`.\n",
            "example": "id:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Allowing to filter inventory preload records.\nDefault search is empty query - returning all results for the requested page.\nAll inventory preload fields are supported, however fields added by extension\nattributes are not supported. If filtering by deviceType, use `0` for Computer\nand `1` for Mobile Device.\n\nQuery in the RSQL format, allowing `==`, `!=`, `>`, `<`, and `=in=`.\n\nExample: `filter=categoryName==\"Category\"`\n"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/csv"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n  \"format\": \"binary\",\n  \"example\": \"Column 1,Column 2,Column 3\\nserial123,data,user\\nserial1234,additional data,user last\\n\"\n}"
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_inventory-preload_export"
      }
    },
    "/v2/inventory-preload/history": {
      "get": {
        "tags": [
          "v2 > inventory-preload > history"
        ],
        "summary": "Get Inventory Preload history entries\n",
        "description": "Gets Inventory Preload history entries.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: `property:asc/desc`. Default sort\nis `date:desc`. Multiple sort criteria are supported and must be separated\nwith a comma.\n\nExample: `sort=date:desc,name:asc`.\n",
            "example": "date:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Allows filtering inventory preload history records.\nDefault search is empty query - returning all results for the requested page.\nAll inventory preload history fields are supported.\n\nQuery in the RSQL format, allowing `==`, `!=`, `>`, `<`, and `=in=`.\n\nExample: `filter=username==\"admin\"`\n"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_inventory-preload_history"
      },
      "post": {
        "tags": [
          "v2 > inventory-preload > history"
        ],
        "summary": "Add Inventory Preload history object notes",
        "description": "Adds Inventory Preload history object notes.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_inventory-preload_history"
      }
    },
    "/v2/inventory-preload/records/delete-all": {
      "post": {
        "tags": [
          "v2 > inventory-preload > records > delete-all"
        ],
        "summary": "Delete all Inventory Preload records\n",
        "description": "Deletes all Inventory Preload records.",
        "requestBody": {
          "content": {}
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "post_v2_inventory-preload_records_delete-all"
      }
    },
    "/v2/inventory-preload/records/{id}": {
      "get": {
        "tags": [
          "v2 > inventory-preload > records > {id}"
        ],
        "summary": "Get an Inventory Preload record",
        "description": "Retrieves an Inventory Preload record.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Inventory Preload identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "deviceType": "Computer",
                  "serialNumber": "<string>",
                  "id": "<string>",
                  "username": "<string>",
                  "fullName": "<string>",
                  "emailAddress": "<string>",
                  "phoneNumber": "<string>",
                  "position": "<string>",
                  "department": "<string>",
                  "building": "<string>",
                  "room": "<string>",
                  "poNumber": "<string>",
                  "poDate": "<string>",
                  "warrantyExpiration": "<string>",
                  "appleCareId": "<string>",
                  "lifeExpectancy": "<string>",
                  "purchasePrice": "<string>",
                  "purchasingContact": "<string>",
                  "purchasingAccount": "<string>",
                  "leaseExpiration": "<string>",
                  "barCode1": "<string>",
                  "barCode2": "<string>",
                  "assetTag": "<string>",
                  "vendor": "<string>",
                  "extensionAttributes": [
                    {
                      "name": "<string>",
                      "value": "<string>"
                    },
                    {
                      "name": "<string>",
                      "value": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_inventory-preload_records_id"
      },
      "put": {
        "tags": [
          "v2 > inventory-preload > records > {id}"
        ],
        "summary": "Update an Inventory Preload record",
        "description": "Updates an Inventory Preload record.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "deviceType": "Computer",
                  "serialNumber": "<string>",
                  "username": "<string>",
                  "fullName": "<string>",
                  "emailAddress": "<string>",
                  "phoneNumber": "<string>",
                  "position": "<string>",
                  "department": "<string>",
                  "building": "<string>",
                  "room": "<string>",
                  "poNumber": "<string>",
                  "poDate": "<string>",
                  "warrantyExpiration": "<string>",
                  "appleCareId": "<string>",
                  "lifeExpectancy": "<string>",
                  "purchasePrice": "<string>",
                  "purchasingContact": "<string>",
                  "purchasingAccount": "<string>",
                  "leaseExpiration": "<string>",
                  "barCode1": "<string>",
                  "barCode2": "<string>",
                  "assetTag": "<string>",
                  "vendor": "<string>",
                  "extensionAttributes": [
                    {
                      "name": "<string>",
                      "value": "<string>"
                    },
                    {
                      "name": "<string>",
                      "value": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Inventory Preload identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "deviceType": "Computer",
                  "serialNumber": "<string>",
                  "id": "<string>",
                  "username": "<string>",
                  "fullName": "<string>",
                  "emailAddress": "<string>",
                  "phoneNumber": "<string>",
                  "position": "<string>",
                  "department": "<string>",
                  "building": "<string>",
                  "room": "<string>",
                  "poNumber": "<string>",
                  "poDate": "<string>",
                  "warrantyExpiration": "<string>",
                  "appleCareId": "<string>",
                  "lifeExpectancy": "<string>",
                  "purchasePrice": "<string>",
                  "purchasingContact": "<string>",
                  "purchasingAccount": "<string>",
                  "leaseExpiration": "<string>",
                  "barCode1": "<string>",
                  "barCode2": "<string>",
                  "assetTag": "<string>",
                  "vendor": "<string>",
                  "extensionAttributes": [
                    {
                      "name": "<string>",
                      "value": "<string>"
                    },
                    {
                      "name": "<string>",
                      "value": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v2_inventory-preload_records_id"
      },
      "delete": {
        "tags": [
          "v2 > inventory-preload > records > {id}"
        ],
        "summary": "Delete an Inventory Preload record\n",
        "description": "Deletes an Inventory Preload record.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Inventory Preload identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v2_inventory-preload_records_id"
      }
    },
    "/v2/inventory-preload/records": {
      "get": {
        "tags": [
          "v2 > inventory-preload > records"
        ],
        "summary": "Return all Inventory Preload records",
        "description": "Returns all Inventory Preload records.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: `property:asc/desc`. Default sort\nis `id:asc`. Multiple sort criteria are supported and must be separated with\na comma. All inventory preload fields are supported, however fields added by\nextension attributes are not supported. If sorting by deviceType, use `0` for\nComputer and `1` for Mobile Device.\n\nExample: `sort=date:desc,name:asc`.\n",
            "example": "id:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Allowing to filter inventory preload records.\nDefault search is empty query - returning all results for the requested page.\nAll inventory preload fields are supported, however fields added by extension\nattributes are not supported. If filtering by deviceType, use `0` for Computer\nand `1` for Mobile Device.\n\nQuery in the RSQL format, allowing `==`, `!=`, `>`, `<`, and `=in=`.\n\nExample: `filter=categoryName==\"Category\"`\n"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "deviceType": "Unknown",
                      "serialNumber": "<string>",
                      "id": "<string>",
                      "username": "<string>",
                      "fullName": "<string>",
                      "emailAddress": "<string>",
                      "phoneNumber": "<string>",
                      "position": "<string>",
                      "department": "<string>",
                      "building": "<string>",
                      "room": "<string>",
                      "poNumber": "<string>",
                      "poDate": "<string>",
                      "warrantyExpiration": "<string>",
                      "appleCareId": "<string>",
                      "lifeExpectancy": "<string>",
                      "purchasePrice": "<string>",
                      "purchasingContact": "<string>",
                      "purchasingAccount": "<string>",
                      "leaseExpiration": "<string>",
                      "barCode1": "<string>",
                      "barCode2": "<string>",
                      "assetTag": "<string>",
                      "vendor": "<string>",
                      "extensionAttributes": [
                        {
                          "name": "<string>",
                          "value": "<string>"
                        },
                        {
                          "name": "<string>",
                          "value": "<string>"
                        }
                      ]
                    },
                    {
                      "deviceType": "Mobile Device",
                      "serialNumber": "<string>",
                      "id": "<string>",
                      "username": "<string>",
                      "fullName": "<string>",
                      "emailAddress": "<string>",
                      "phoneNumber": "<string>",
                      "position": "<string>",
                      "department": "<string>",
                      "building": "<string>",
                      "room": "<string>",
                      "poNumber": "<string>",
                      "poDate": "<string>",
                      "warrantyExpiration": "<string>",
                      "appleCareId": "<string>",
                      "lifeExpectancy": "<string>",
                      "purchasePrice": "<string>",
                      "purchasingContact": "<string>",
                      "purchasingAccount": "<string>",
                      "leaseExpiration": "<string>",
                      "barCode1": "<string>",
                      "barCode2": "<string>",
                      "assetTag": "<string>",
                      "vendor": "<string>",
                      "extensionAttributes": [
                        {
                          "name": "<string>",
                          "value": "<string>"
                        },
                        {
                          "name": "<string>",
                          "value": "<string>"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_inventory-preload_records"
      },
      "post": {
        "tags": [
          "v2 > inventory-preload > records"
        ],
        "summary": "Create a new Inventory Preload record using JSON",
        "description": "Create a new Inventory Preload record using JSON.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "deviceType": "Computer",
                  "serialNumber": "<string>",
                  "username": "<string>",
                  "fullName": "<string>",
                  "emailAddress": "<string>",
                  "phoneNumber": "<string>",
                  "position": "<string>",
                  "department": "<string>",
                  "building": "<string>",
                  "room": "<string>",
                  "poNumber": "<string>",
                  "poDate": "<string>",
                  "warrantyExpiration": "<string>",
                  "appleCareId": "<string>",
                  "lifeExpectancy": "<string>",
                  "purchasePrice": "<string>",
                  "purchasingContact": "<string>",
                  "purchasingAccount": "<string>",
                  "leaseExpiration": "<string>",
                  "barCode1": "<string>",
                  "barCode2": "<string>",
                  "assetTag": "<string>",
                  "vendor": "<string>",
                  "extensionAttributes": [
                    {
                      "name": "<string>",
                      "value": "<string>"
                    },
                    {
                      "name": "<string>",
                      "value": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_inventory-preload_records"
      }
    },
    "/v2/jamf-package": {
      "get": {
        "tags": [
          "v2 > jamf-package"
        ],
        "summary": "Get the packages for a given Jamf application\n",
        "description": "Get the packages for a given Jamf application.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "application",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "(Required) The Jamf Application key. The only supported values are protect and connect.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "displayName": "<string>",
                  "releaseHistoryUrl": "<string>",
                  "artifacts": [
                    {
                      "id": "<string>",
                      "filename": "<string>",
                      "version": "<string>",
                      "created": "<string>",
                      "url": "<string>"
                    },
                    {
                      "id": "<string>",
                      "filename": "<string>",
                      "version": "<string>",
                      "created": "<string>",
                      "url": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_jamf-package"
      }
    },
    "/v2/account-preferences": {
      "get": {
        "tags": [
          "v2 > account-preferences"
        ],
        "summary": "Get Jamf Pro account preferences\n",
        "description": "Get Jamf Pro account preferences\n",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "Locale to be used.",
            "example": "<string>"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "computerApplicationSearchMethod": "STARTS_WITH",
                  "computerApplicationUsageSearchMethod": "STARTS_WITH",
                  "computerLocalUserAccountSearchMethod": "EXACT_MATCH",
                  "computerPackageReceiptSearchMethod": "CONTAINS",
                  "computerPrinterSearchMethod": "EXACT_MATCH",
                  "computerSearchMethod": "EXACT_MATCH",
                  "computerServiceSearchMethod": "STARTS_WITH",
                  "configProfilesSortingMethod": "<string>",
                  "dateFormat": "<string>",
                  "disablePageLeaveCheck": "<boolean>",
                  "disableRelativeDates": "<boolean>",
                  "disableShortcutsTooltips": "<boolean>",
                  "disableTablePagination": "<boolean>",
                  "language": "en",
                  "mobileDeviceAppSearchMethod": "EXACT_MATCH",
                  "mobileDeviceSearchMethod": "CONTAINS",
                  "resultsPerPage": 100,
                  "timezone": "<string>",
                  "userAllContentSearchMethod": "STARTS_WITH",
                  "userEbookSearchMethod": "STARTS_WITH",
                  "userInterfaceDisplayTheme": "DARK",
                  "userMacAppStoreAppSearchMethod": "CONTAINS",
                  "userMobileDeviceAppSearchMethod": "EXACT_MATCH",
                  "userSearchMethod": "EXACT_MATCH",
                  "computerFontSearchMethod": "CONTAINS",
                  "computerPluginSearchMethod": "CONTAINS",
                  "computerSoftwareUpdateSearchMethod": "EXACT_MATCH",
                  "computerPeripheralSearchMethod": "CONTAINS"
                }
              }
            }
          }
        },
        "operationId": "get_v2_account-preferences"
      },
      "patch": {
        "tags": [
          "v2 > account-preferences"
        ],
        "summary": "Update Jamf Pro account preferences\n",
        "description": "Update Jamf Pro account preferences\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "computerApplicationSearchMethod": "STARTS_WITH",
                  "computerApplicationUsageSearchMethod": "STARTS_WITH",
                  "computerLocalUserAccountSearchMethod": "EXACT_MATCH",
                  "computerPackageReceiptSearchMethod": "CONTAINS",
                  "computerPrinterSearchMethod": "EXACT_MATCH",
                  "computerSearchMethod": "EXACT_MATCH",
                  "computerServiceSearchMethod": "STARTS_WITH",
                  "configProfilesSortingMethod": "<string>",
                  "dateFormat": "<string>",
                  "disablePageLeaveCheck": "<boolean>",
                  "disableRelativeDates": "<boolean>",
                  "disableShortcutsTooltips": "<boolean>",
                  "disableTablePagination": "<boolean>",
                  "language": "en",
                  "mobileDeviceAppSearchMethod": "EXACT_MATCH",
                  "mobileDeviceSearchMethod": "CONTAINS",
                  "resultsPerPage": 100,
                  "timezone": "<string>",
                  "userAllContentSearchMethod": "STARTS_WITH",
                  "userEbookSearchMethod": "STARTS_WITH",
                  "userInterfaceDisplayTheme": "DARK",
                  "userMacAppStoreAppSearchMethod": "CONTAINS",
                  "userMobileDeviceAppSearchMethod": "EXACT_MATCH",
                  "userSearchMethod": "EXACT_MATCH",
                  "computerFontSearchMethod": "CONTAINS",
                  "computerPluginSearchMethod": "CONTAINS",
                  "computerSoftwareUpdateSearchMethod": "EXACT_MATCH",
                  "computerPeripheralSearchMethod": "CONTAINS"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "description": "Locale to be used, when user has not defined preferred language.",
            "example": "<string>"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "computerApplicationSearchMethod": "STARTS_WITH",
                  "computerApplicationUsageSearchMethod": "STARTS_WITH",
                  "computerLocalUserAccountSearchMethod": "EXACT_MATCH",
                  "computerPackageReceiptSearchMethod": "CONTAINS",
                  "computerPrinterSearchMethod": "EXACT_MATCH",
                  "computerSearchMethod": "EXACT_MATCH",
                  "computerServiceSearchMethod": "STARTS_WITH",
                  "configProfilesSortingMethod": "<string>",
                  "dateFormat": "<string>",
                  "disablePageLeaveCheck": "<boolean>",
                  "disableRelativeDates": "<boolean>",
                  "disableShortcutsTooltips": "<boolean>",
                  "disableTablePagination": "<boolean>",
                  "language": "en",
                  "mobileDeviceAppSearchMethod": "EXACT_MATCH",
                  "mobileDeviceSearchMethod": "CONTAINS",
                  "resultsPerPage": 100,
                  "timezone": "<string>",
                  "userAllContentSearchMethod": "STARTS_WITH",
                  "userEbookSearchMethod": "STARTS_WITH",
                  "userInterfaceDisplayTheme": "DARK",
                  "userMacAppStoreAppSearchMethod": "CONTAINS",
                  "userMobileDeviceAppSearchMethod": "EXACT_MATCH",
                  "userSearchMethod": "EXACT_MATCH",
                  "computerFontSearchMethod": "CONTAINS",
                  "computerPluginSearchMethod": "CONTAINS",
                  "computerSoftwareUpdateSearchMethod": "EXACT_MATCH",
                  "computerPeripheralSearchMethod": "CONTAINS"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "patch_v2_account-preferences"
      }
    },
    "/v2/jamf-pro-information": {
      "get": {
        "tags": [
          "v2 > jamf-pro-information"
        ],
        "summary": "Get basic information about the Jamf Pro Server\n",
        "description": "Get basic information about the Jamf Pro Server\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "vppTokenEnabled": "<boolean>",
                  "depAccountEnabled": "<boolean>",
                  "byodEnabled": "<boolean>",
                  "userMigrationEnabled": "<boolean>",
                  "cloudDeploymentsEnabled": "<boolean>",
                  "patchEnabled": "<boolean>",
                  "ssoSamlEnabled": "<boolean>",
                  "smtpEnabled": "<boolean>"
                }
              }
            }
          }
        },
        "operationId": "get_v2_jamf-pro-information"
      }
    },
    "/v2/jamf-remote-assist/session/export": {
      "post": {
        "tags": [
          "v2 > jamf-remote-assist > session > export"
        ],
        "summary": "Export Jamf Remote Assist sessions history\n",
        "description": "Export Jamf Remote Assist sessions history\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "page": 0,
                  "pageSize": 100,
                  "sort": [
                    "id:desc"
                  ],
                  "filter": "<string>",
                  "fields": [
                    {
                      "fieldName": "<string>",
                      "fieldLabelOverride": "<string>"
                    },
                    {
                      "fieldName": "<string>",
                      "fieldLabelOverride": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/csv"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/csv"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n  \"format\": \"binary\",\n  \"example\": \"sessionId,deviceId\\nc4087bc8-cb48-4452-9bec-a3c50088a485,aeafd2ff95c7e0b937a8dbf3121a8dcab7a70161cd4493af038fa9c784b61866\\nc4087bc8-cb48-4452-9bec-a3c50088a486,aeafd2ff95c7e0b937a8dbf3121a8dcab7a70161cd4493af038fa9c784b61867\\nc4087bc8-cb48-4452-9bec-a3c50088a487,aeafd2ff95c7e0b937a8dbf3121a8dcab7a70161cd4493af038fa9c784b61868\\n\"\n}"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_jamf-remote-assist_session_export"
      }
    },
    "/v2/jamf-remote-assist/session/{id}": {
      "get": {
        "tags": [
          "v2 > jamf-remote-assist > session > {id}"
        ],
        "summary": "Gets single session history item.\n",
        "description": "Returns tenants session history for specific session.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of session",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "tenantId": "<string>",
                  "sessionId": "<string>",
                  "deviceId": "<string>",
                  "sessionStartedTimestamp": "<dateTime>",
                  "sessionEndedTimestamp": "<dateTime>",
                  "sessionType": "UNATTENDED",
                  "statusType": "STARTED",
                  "sessionAdminId": "<string>",
                  "comment": "<string>",
                  "details": {
                    "fileTransferItemList": [
                      {
                        "filePath": "<string>",
                        "transferTimestamp": "<dateTime>",
                        "fileTransferType": "DOWNLOAD"
                      },
                      {
                        "filePath": "<string>",
                        "transferTimestamp": "<dateTime>",
                        "fileTransferType": "DOWNLOAD"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_jamf-remote-assist_session_id"
      }
    },
    "/v2/jamf-remote-assist/session": {
      "get": {
        "tags": [
          "v2 > jamf-remote-assist > session"
        ],
        "summary": "Gets session history items.\n",
        "description": "Returns tenants sessions history.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is sessionId:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=sessionId:desc,deviceId:asc ",
            "example": "sessionId:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter session history items collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: sessionId, deviceId, sessionAdminId. This param can be combined with paging and sorting. Example: sessionAdminId==\"*Andrzej*\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "results": [
                    {
                      "tenantId": "<string>",
                      "sessionId": "<string>",
                      "deviceId": "<string>",
                      "sessionStartedTimestamp": "<dateTime>",
                      "sessionEndedTimestamp": "<dateTime>",
                      "sessionType": "UNATTENDED",
                      "statusType": "STARTED",
                      "sessionAdminId": "<string>",
                      "comment": "<string>"
                    },
                    {
                      "tenantId": "<string>",
                      "sessionId": "<string>",
                      "deviceId": "<string>",
                      "sessionStartedTimestamp": "<dateTime>",
                      "sessionEndedTimestamp": "<dateTime>",
                      "sessionType": "ATTENDED",
                      "statusType": "ERROR",
                      "sessionAdminId": "<string>",
                      "comment": "<string>"
                    }
                  ],
                  "totalCount": "<integer>"
                }
              }
            }
          }
        },
        "operationId": "get_v2_jamf-remote-assist_session"
      }
    },
    "/v2/local-admin-password/pending-rotations": {
      "get": {
        "tags": [
          "v2 > local-admin-password > pending-rotations"
        ],
        "summary": "Get a list of the current devices and usernames with pending LAPS rotations",
        "description": "Return information about all devices and usernames currently in the state of a pending LAPS rotation",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "lapsUser": {
                        "clientManagementId": "<string>",
                        "guid": "<string>",
                        "username": "<string>",
                        "userSource": "MDM"
                      },
                      "createdDate": "<dateTime>"
                    },
                    {
                      "lapsUser": {
                        "clientManagementId": "<string>",
                        "guid": "<string>",
                        "username": "<string>",
                        "userSource": "MDM"
                      },
                      "createdDate": "<dateTime>"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_local-admin-password_pending-rotations"
      }
    },
    "/v2/local-admin-password/settings": {
      "get": {
        "tags": [
          "v2 > local-admin-password > settings"
        ],
        "summary": "Get the current LAPS settings.",
        "description": "Return information about the current LAPS settings.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "autoDeployEnabled": "<boolean>",
                  "passwordRotationTime": "<integer>",
                  "autoRotateEnabled": "<boolean>",
                  "autoRotateExpirationTime": "<integer>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_local-admin-password_settings"
      },
      "put": {
        "tags": [
          "v2 > local-admin-password > settings"
        ],
        "summary": "Update settings for LAPS.",
        "description": "Update settings for LAPS.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "autoDeployEnabled": "<boolean>",
                  "autoRotateEnabled": "<boolean>",
                  "autoRotateExpirationTime": "<integer>",
                  "passwordRotationTime": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "autoDeployEnabled": "<boolean>",
                  "passwordRotationTime": "<integer>",
                  "autoRotateEnabled": "<boolean>",
                  "autoRotateExpirationTime": "<integer>"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v2_local-admin-password_settings"
      }
    },
    "/v2/local-admin-password/{clientManagementId}/account/{username}/audit": {
      "get": {
        "tags": [
          "v2 > local-admin-password > {clientManagementId} > account > {username} > audit"
        ],
        "summary": "Get LAPS password viewed history.",
        "description": "Get the full history of all local admin passwords for a specific username on a target device. History will include password, who viewed the password and when it was viewed. Get audit history by using the client management id and username as the path parameters. If multiple accounts with the same username exist, the MDM source will be selected by default.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "clientManagementId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) client management id of target device.",
            "example": "<string>"
          },
          {
            "name": "username",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) user name to view audit information for",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "password": "<string>",
                      "dateLastSeen": "<dateTime>",
                      "expirationTime": "<dateTime>",
                      "audits": [
                        {
                          "viewedBy": "<string>",
                          "dateSeen": "<dateTime>"
                        },
                        {
                          "viewedBy": "<string>",
                          "dateSeen": "<dateTime>"
                        }
                      ]
                    },
                    {
                      "password": "<string>",
                      "dateLastSeen": "<dateTime>",
                      "expirationTime": "<dateTime>",
                      "audits": [
                        {
                          "viewedBy": "<string>",
                          "dateSeen": "<dateTime>"
                        },
                        {
                          "viewedBy": "<string>",
                          "dateSeen": "<dateTime>"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_local-admin-password_clientManagementId_account_username_audit"
      }
    },
    "/v2/local-admin-password/{clientManagementId}/account/{username}/history": {
      "get": {
        "tags": [
          "v2 > local-admin-password > {clientManagementId} > account > {username} > history"
        ],
        "summary": "Get LAPS historical records for target device and username.",
        "description": "Get the full history of all for a specific username on a target device. History will include date created, date last seen, expiration time, and rotational status. Get audit history by using the client management id and username as the path parameters.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "clientManagementId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) client management id of target device.",
            "example": "<string>"
          },
          {
            "name": "username",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) user name to view history for",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "createdDate": "<dateTime>",
                      "dateLastSeen": "<dateTime>",
                      "expirationTime": "<dateTime>",
                      "rotationStatus": "PENDING"
                    },
                    {
                      "createdDate": "<dateTime>",
                      "dateLastSeen": "<dateTime>",
                      "expirationTime": "<dateTime>",
                      "rotationStatus": "INVALID"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_local-admin-password_clientManagementId_account_username_history"
      }
    },
    "/v2/local-admin-password/{clientManagementId}/account/{username}/password": {
      "get": {
        "tags": [
          "v2 > local-admin-password > {clientManagementId} > account > {username} > password"
        ],
        "summary": "Get current LAPS password for specified username on a client.",
        "description": "Get current LAPS password for specified client by using the client management id and username as the path parameters. Once the password is viewed it will be rotated out with a new password based on the rotation time settings. If multiple accounts with the same username exist, the MDM source will be selected by default.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "clientManagementId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) client management id of target device.",
            "example": "<string>"
          },
          {
            "name": "username",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) user name for the account",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "password": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_local-admin-password_clientManagementId_account_username_password"
      }
    },
    "/v2/local-admin-password/{clientManagementId}/account/{username}/{guid}/audit": {
      "get": {
        "tags": [
          "v2 > local-admin-password > {clientManagementId} > account > {username} > {guid} > audit"
        ],
        "summary": "Get LAPS password viewed history.",
        "description": "Get the full history of all local admin passwords for a specific user guid on a target device. History will include password, who viewed the password and when it was viewed. Get audit history by using the client management id, username, and user guid as the path parameters.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "clientManagementId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) client management id of target device.",
            "example": "<string>"
          },
          {
            "name": "username",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) user name to view audit information for",
            "example": "<string>"
          },
          {
            "name": "guid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) user guid to view audit information for",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "password": "<string>",
                      "dateLastSeen": "<dateTime>",
                      "expirationTime": "<dateTime>",
                      "audits": [
                        {
                          "viewedBy": "<string>",
                          "dateSeen": "<dateTime>"
                        },
                        {
                          "viewedBy": "<string>",
                          "dateSeen": "<dateTime>"
                        }
                      ]
                    },
                    {
                      "password": "<string>",
                      "dateLastSeen": "<dateTime>",
                      "expirationTime": "<dateTime>",
                      "audits": [
                        {
                          "viewedBy": "<string>",
                          "dateSeen": "<dateTime>"
                        },
                        {
                          "viewedBy": "<string>",
                          "dateSeen": "<dateTime>"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_local-admin-password_clientManagementId_account_username_guid_audit"
      }
    },
    "/v2/local-admin-password/{clientManagementId}/account/{username}/{guid}/history": {
      "get": {
        "tags": [
          "v2 > local-admin-password > {clientManagementId} > account > {username} > {guid} > history"
        ],
        "summary": "Get LAPS historical records for target device and user guid.",
        "description": "Get the full history of all for a specific user guid on a target device. History will include date created, date last seen, expiration time, and rotational status. Get audit history by using the client management id, username, and user guid as the path parameters.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "clientManagementId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) client management id of target device.",
            "example": "<string>"
          },
          {
            "name": "username",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) user name to view history for",
            "example": "<string>"
          },
          {
            "name": "guid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) user guid to view history for",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "createdDate": "<dateTime>",
                      "dateLastSeen": "<dateTime>",
                      "expirationTime": "<dateTime>",
                      "rotationStatus": "PENDING"
                    },
                    {
                      "createdDate": "<dateTime>",
                      "dateLastSeen": "<dateTime>",
                      "expirationTime": "<dateTime>",
                      "rotationStatus": "INVALID"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_local-admin-password_clientManagementId_account_username_guid_history"
      }
    },
    "/v2/local-admin-password/{clientManagementId}/account/{username}/{guid}/password": {
      "get": {
        "tags": [
          "v2 > local-admin-password > {clientManagementId} > account > {username} > {guid} > password"
        ],
        "summary": "Get current LAPS password for specified user guid on a client.",
        "description": "Get current LAPS password for specified client by using the client management id, username, and user guid as the path parameters. Once the password is viewed it will be rotated out with a new password based on the rotation time settings.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "clientManagementId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) client management id of target device.",
            "example": "<string>"
          },
          {
            "name": "username",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) user name for the account",
            "example": "<string>"
          },
          {
            "name": "guid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) user guid for the account",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "password": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_local-admin-password_clientManagementId_account_username_guid_password"
      }
    },
    "/v2/local-admin-password/{clientManagementId}/accounts": {
      "get": {
        "tags": [
          "v2 > local-admin-password > {clientManagementId} > accounts"
        ],
        "summary": "Get the LAPS capable admin accounts for a device.",
        "description": "Get a full list of admin accounts that are LAPS capable. Capable accounts are returned in the AutoSetupAdminAccounts from QueryResponses.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "clientManagementId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) client management id of target device.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "clientManagementId": "<string>",
                      "guid": "<string>",
                      "username": "<string>",
                      "userSource": "JMF"
                    },
                    {
                      "clientManagementId": "<string>",
                      "guid": "<string>",
                      "username": "<string>",
                      "userSource": "JMF"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_local-admin-password_clientManagementId_accounts"
      }
    },
    "/v2/local-admin-password/{clientManagementId}/history": {
      "get": {
        "tags": [
          "v2 > local-admin-password > {clientManagementId} > history"
        ],
        "summary": "Get LAPS password viewed history, and rotation history.",
        "description": "Get the full history of all local admin passwords for all accounts for a specific management ID. History will include password, who viewed the password and when it was viewed. This will include rotation history as well.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "clientManagementId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) client management id of target device.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "username": "<string>",
                      "eventType": "COMPLETED",
                      "eventTime": "<dateTime>",
                      "viewedBy": "<string>",
                      "userSource": "MDM"
                    },
                    {
                      "username": "<string>",
                      "eventType": "ERROR",
                      "eventTime": "<dateTime>",
                      "viewedBy": "<string>",
                      "userSource": "MDM"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_local-admin-password_clientManagementId_history"
      }
    },
    "/v2/local-admin-password/{clientManagementId}/set-password": {
      "put": {
        "tags": [
          "v2 > local-admin-password > {clientManagementId} > set-password"
        ],
        "summary": "Set the LAPS password for a device.",
        "description": "Set the LAPS password for a device. This will set the password for all LAPS capable accounts.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "lapsUserPasswordList": [
                    {
                      "username": "<string>",
                      "password": "<string>"
                    },
                    {
                      "username": "<string>",
                      "password": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "clientManagementId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) client management id of target device.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "lapsUserPasswordList": [
                    {
                      "username": "<string>"
                    },
                    {
                      "username": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v2_local-admin-password_clientManagementId_set-password"
      }
    },
    "/v2/mdm/commands": {
      "get": {
        "tags": [
          "v2 > mdm > commands"
        ],
        "summary": "Get information about mdm commands made by Jamf Pro.\n",
        "description": "Get information about mdm commands made by Jamf Pro.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Default sort is dateSent:asc. Multiple sort criteria are supported and must be separated with a comma.",
            "example": "dateSent:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter, for a list of commands. All url must contain minimum one filter field. Fields allowed in the query: uuid, clientManagementId, command, status, clientType, dateSent, validAfter, dateCompleted, profileIdentifier, and active. This param can be combined with paging. Please note that any date filters must be used with gt, lt, ge, le Example: clientManagementId==fb511aae-c557-474f-a9c1-5dc845b90d0f;status==Pending;command==INSTALL_PROFILE;uuid==9e18f849-e689-4f2d-b616-a99d3da7db42;clientType==COMPUTER_USER;profileIdentifier==18cc61c2-01fc-11ed-b939-0242ac120002;dateCompleted=ge=2021-08-04T14:25:18.26Z;dateCompleted=le=2021-08-04T14:25:18.26Z;validAfter=ge=2021-08-05T14:25:18.26Z;active==true"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "uuid": "<string>",
                      "dateSent": "<dateTime>",
                      "client": {
                        "managementId": "<string>",
                        "clientType": "TV"
                      },
                      "commandState": "NOT_NOW",
                      "commandType": "DEVICE_INFORMATION"
                    },
                    {
                      "uuid": "<string>",
                      "dateSent": "<dateTime>",
                      "client": {
                        "managementId": "<string>",
                        "clientType": "MOBILE_DEVICE"
                      },
                      "commandState": "ACKNOWLEDGED",
                      "commandType": "ERASE_DEVICE"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_mdm_commands"
      },
      "post": {
        "tags": [
          "v2 > mdm > commands"
        ],
        "summary": "Post a command for creation and queuing\n",
        "description": "Using this endpoint requires 'Send [device type] [command name] Command' privileges. A separate privilege is required for each device type and MDM command you want to view or send.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "clientData": [
                    {
                      "managementId": "<string>"
                    },
                    {
                      "managementId": "<string>"
                    }
                  ],
                  "commandData": {
                    "commandType": "SET_AUTO_ADMIN_PASSWORD",
                    "identifier": "<string>",
                    "redemptionCode": "<string>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "id": "<string>",
                    "href": "<string>"
                  },
                  {
                    "id": "<string>",
                    "href": "<string>"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_mdm_commands"
      }
    },
    "/v2/mobile-device-prestages/scope": {
      "get": {
        "tags": [
          "v2 > mobile-device-prestages > scope"
        ],
        "summary": "Get all Device Scope for all Mobile Device Prestages\n",
        "description": "Get all device scope for all mobile device prestages",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "serialsByPrestageId": {
                    "deserunt_a": "<string>"
                  }
                }
              }
            }
          }
        },
        "operationId": "get_v2_mobile-device-prestages_scope"
      }
    },
    "/v2/mobile-device-prestages/syncs": {
      "get": {
        "tags": [
          "v2 > mobile-device-prestages > syncs"
        ],
        "summary": "Get all Prestage sync States for all prestages\n",
        "description": "Get all prestage sync states for all prestages",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "syncState": "<string>",
                    "prestageId": "<string>",
                    "timestamp": "<string>"
                  },
                  {
                    "syncState": "<string>",
                    "prestageId": "<string>",
                    "timestamp": "<string>"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v2_mobile-device-prestages_syncs"
      }
    },
    "/v2/mobile-device-prestages/{id}/attachments/delete-multiple": {
      "post": {
        "tags": [
          "v2 > mobile-device-prestages > {id} > attachments > delete-multiple"
        ],
        "summary": "Remove an attachment for a Mobile Device Prestage\n",
        "description": "Remove an attachment for a Mobile Device Prestage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "ids": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "post_v2_mobile-device-prestages_id_attachments_delete-multiple"
      }
    },
    "/v2/mobile-device-prestages/{id}/attachments": {
      "get": {
        "tags": [
          "v2 > mobile-device-prestages > {id} > attachments"
        ],
        "summary": "Get attachments for a Mobile Device Prestage\n",
        "description": "Get attachments for a Mobile Device Prestage",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "id": "<string>",
                    "name": "<string>"
                  },
                  {
                    "id": "<string>",
                    "name": "<string>"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_mobile-device-prestages_id_attachments"
      },
      "post": {
        "tags": [
          "v2 > mobile-device-prestages > {id} > attachments"
        ],
        "summary": "Add an attachment to a Mobile Device Prestage\n",
        "description": "Add an attachment to a Mobile Device prestage",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "(Required) The file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "multipart/form-data"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Identifier of the Mobile Device Prestage the attachment should be assigned to",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "name": "<string>",
                  "fileType": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_mobile-device-prestages_id_attachments"
      }
    },
    "/v2/mobile-device-prestages/{id}/history": {
      "get": {
        "tags": [
          "v2 > mobile-device-prestages > {id} > history"
        ],
        "summary": "Get sorted and paged Mobile Device Prestage history objects\n",
        "description": "Gets sorted and paged mobile device prestage history objects",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc",
            "example": "date:desc"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_mobile-device-prestages_id_history"
      },
      "post": {
        "tags": [
          "v2 > mobile-device-prestages > {id} > history"
        ],
        "summary": "Add Mobile Device Prestage history object notes\n",
        "description": "Adds mobile device prestage history object notes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_mobile-device-prestages_id_history"
      }
    },
    "/v2/mobile-device-prestages/{id}/scope/delete-multiple": {
      "post": {
        "tags": [
          "v2 > mobile-device-prestages > {id} > scope > delete-multiple"
        ],
        "summary": "Remove Device Scope for a specific Mobile Device Prestage\n",
        "description": "Remove device scope for a specific mobile device prestage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "serialNumbers": [
                    "<string>",
                    "<string>"
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "prestageId": "<string>",
                  "assignments": [
                    {
                      "serialNumber": "<string>",
                      "assignmentDate": "<dateTime>",
                      "userAssigned": "<string>"
                    },
                    {
                      "serialNumber": "<string>",
                      "assignmentDate": "<dateTime>",
                      "userAssigned": "<string>"
                    }
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_mobile-device-prestages_id_scope_delete-multiple"
      }
    },
    "/v2/mobile-device-prestages/{id}/scope": {
      "get": {
        "tags": [
          "v2 > mobile-device-prestages > {id} > scope"
        ],
        "summary": "Get Device Scope for a specific Mobile Device Prestage\n",
        "description": "Get device scope for a specific mobile device prestage",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "prestageId": "<string>",
                  "assignments": [
                    {
                      "serialNumber": "<string>",
                      "assignmentDate": "<dateTime>",
                      "userAssigned": "<string>"
                    },
                    {
                      "serialNumber": "<string>",
                      "assignmentDate": "<dateTime>",
                      "userAssigned": "<string>"
                    }
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_mobile-device-prestages_id_scope"
      },
      "put": {
        "tags": [
          "v2 > mobile-device-prestages > {id} > scope"
        ],
        "summary": "Replace Device Scope for a specific Mobile Device Prestage\n",
        "description": "Replace device scope for a specific mobile device prestage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "serialNumbers": [
                    "<string>",
                    "<string>"
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "prestageId": "<string>",
                  "assignments": [
                    {
                      "serialNumber": "<string>",
                      "assignmentDate": "<dateTime>",
                      "userAssigned": "<string>"
                    },
                    {
                      "serialNumber": "<string>",
                      "assignmentDate": "<dateTime>",
                      "userAssigned": "<string>"
                    }
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v2_mobile-device-prestages_id_scope"
      },
      "post": {
        "tags": [
          "v2 > mobile-device-prestages > {id} > scope"
        ],
        "summary": "Add Device Scope for a specific Mobile Device Prestage\n",
        "description": "Add device scope for a specific mobile device prestage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "serialNumbers": [
                    "<string>",
                    "<string>"
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "prestageId": "<string>",
                  "assignments": [
                    {
                      "serialNumber": "<string>",
                      "assignmentDate": "<dateTime>",
                      "userAssigned": "<string>"
                    },
                    {
                      "serialNumber": "<string>",
                      "assignmentDate": "<dateTime>",
                      "userAssigned": "<string>"
                    }
                  ],
                  "versionLock": "<integer>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_mobile-device-prestages_id_scope"
      }
    },
    "/v2/mobile-device-prestages/{id}/syncs/latest": {
      "get": {
        "tags": [
          "v2 > mobile-device-prestages > {id} > syncs > latest"
        ],
        "summary": "Get the latest Sync State for a single Prestage\n",
        "description": "Get the latest sync state for a single prestage",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "syncState": "<string>",
                  "prestageId": "<string>",
                  "timestamp": "<string>"
                }
              }
            }
          }
        },
        "operationId": "get_v2_mobile-device-prestages_id_syncs_latest"
      }
    },
    "/v2/mobile-device-prestages/{id}/syncs": {
      "get": {
        "tags": [
          "v2 > mobile-device-prestages > {id} > syncs"
        ],
        "summary": "Get all prestage sync states for a single prestage\n",
        "description": "Get all prestage sync states for a single prestage",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "syncState": "<string>",
                    "prestageId": "<string>",
                    "timestamp": "<string>"
                  },
                  {
                    "syncState": "<string>",
                    "prestageId": "<string>",
                    "timestamp": "<string>"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v2_mobile-device-prestages_id_syncs"
      }
    },
    "/v2/mobile-device-prestages/{id}": {
      "get": {
        "tags": [
          "v2 > mobile-device-prestages > {id}"
        ],
        "summary": "Retrieve a Mobile Device Prestage with the supplied id\n",
        "description": "Retrieves a Mobile Device Prestage with the supplied id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "allowPairing": "<boolean>",
                  "authenticationPrompt": "<string>",
                  "autoAdvanceSetup": "<boolean>",
                  "configureDeviceBeforeSetupAssistant": "<boolean>",
                  "defaultPrestage": "<boolean>",
                  "department": "<string>",
                  "deviceEnrollmentProgramInstanceId": "<string>",
                  "displayName": "<string>",
                  "enableDeviceBasedActivationLock": "<boolean>",
                  "enrollmentSiteId": "<string>",
                  "keepExistingLocationInformation": "<boolean>",
                  "keepExistingSiteMembership": "<boolean>",
                  "locationInformation": {
                    "buildingId": "<string>",
                    "departmentId": "<string>",
                    "email": "<string>",
                    "id": "<string>",
                    "phone": "<string>",
                    "position": "<string>",
                    "realname": "<string>",
                    "room": "<string>",
                    "username": "<string>",
                    "versionLock": "<integer>"
                  },
                  "mandatory": "<boolean>",
                  "maximumSharedAccounts": "<integer>",
                  "mdmRemovable": "<boolean>",
                  "multiUser": "<boolean>",
                  "preventActivationLock": "<boolean>",
                  "purchasingInformation": {
                    "appleCareId": "<string>",
                    "id": "<string>",
                    "leaseDate": "<string>",
                    "leased": "<boolean>",
                    "lifeExpectancy": "<integer>",
                    "poDate": "<string>",
                    "poNumber": "<string>",
                    "purchasePrice": "<string>",
                    "purchased": "<boolean>",
                    "purchasingAccount": "<string>",
                    "purchasingContact": "<string>",
                    "vendor": "<string>",
                    "versionLock": "<integer>",
                    "warrantyDate": "<string>"
                  },
                  "requireAuthentication": "<boolean>",
                  "sendTimezone": "<boolean>",
                  "storageQuotaSizeMegabytes": "<integer>",
                  "supervised": "<boolean>",
                  "supportEmailAddress": "<string>",
                  "supportPhoneNumber": "<string>",
                  "timezone": "<string>",
                  "useStorageQuotaSize": "<boolean>",
                  "skipSetupItems": {
                    "cillum_5": "<boolean>",
                    "ea_f": "<boolean>"
                  },
                  "anchorCertificates": [
                    "<string>",
                    "<string>"
                  ],
                  "enrollmentCustomizationId": "<string>",
                  "language": "<string>",
                  "region": "<string>",
                  "names": {
                    "assignNamesUsing": "<string>",
                    "prestageDeviceNames": [
                      {
                        "id": "<string>",
                        "deviceName": "<string>",
                        "used": "<boolean>"
                      },
                      {
                        "id": "<string>",
                        "deviceName": "<string>",
                        "used": "<boolean>"
                      }
                    ],
                    "deviceNamePrefix": "<string>",
                    "deviceNameSuffix": "<string>",
                    "singleDeviceName": "<string>",
                    "manageNames": "<boolean>",
                    "deviceNamingConfigured": "<boolean>"
                  },
                  "temporarySessionOnly": "<boolean>",
                  "enforceTemporarySessionTimeout": "<boolean>",
                  "temporarySessionTimeout": "<integer>",
                  "enforceUserSessionTimeout": "<boolean>",
                  "userSessionTimeout": "<integer>",
                  "prestageMinimumOsTargetVersionTypeIos": "MINIMUM_OS_LATEST_VERSION",
                  "minimumOsSpecificVersionIos": "<string>",
                  "prestageMinimumOsTargetVersionTypeIpad": "MINIMUM_OS_LATEST_MAJOR_VERSION",
                  "minimumOsSpecificVersionIpad": "<string>",
                  "id": "<string>",
                  "profileUuid": "<string>",
                  "siteId": "<string>",
                  "versionLock": "<integer>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_mobile-device-prestages_id"
      },
      "put": {
        "tags": [
          "v2 > mobile-device-prestages > {id}"
        ],
        "summary": "Update a Mobile Device Prestage\n",
        "description": "Updates a Mobile Device Prestage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "allowPairing": "<boolean>",
                  "authenticationPrompt": "<string>",
                  "autoAdvanceSetup": "<boolean>",
                  "configureDeviceBeforeSetupAssistant": "<boolean>",
                  "defaultPrestage": "<boolean>",
                  "department": "<string>",
                  "deviceEnrollmentProgramInstanceId": "<string>",
                  "displayName": "<string>",
                  "enableDeviceBasedActivationLock": "<boolean>",
                  "enrollmentSiteId": "<string>",
                  "keepExistingLocationInformation": "<boolean>",
                  "keepExistingSiteMembership": "<boolean>",
                  "locationInformation": {
                    "buildingId": "<string>",
                    "departmentId": "<string>",
                    "email": "<string>",
                    "id": "<string>",
                    "phone": "<string>",
                    "position": "<string>",
                    "realname": "<string>",
                    "room": "<string>",
                    "username": "<string>",
                    "versionLock": "<integer>"
                  },
                  "mandatory": "<boolean>",
                  "maximumSharedAccounts": "<integer>",
                  "mdmRemovable": "<boolean>",
                  "multiUser": "<boolean>",
                  "preventActivationLock": "<boolean>",
                  "purchasingInformation": {
                    "appleCareId": "<string>",
                    "id": "<string>",
                    "leaseDate": "<string>",
                    "leased": "<boolean>",
                    "lifeExpectancy": "<integer>",
                    "poDate": "<string>",
                    "poNumber": "<string>",
                    "purchasePrice": "<string>",
                    "purchased": "<boolean>",
                    "purchasingAccount": "<string>",
                    "purchasingContact": "<string>",
                    "vendor": "<string>",
                    "versionLock": "<integer>",
                    "warrantyDate": "<string>"
                  },
                  "requireAuthentication": "<boolean>",
                  "sendTimezone": "<boolean>",
                  "storageQuotaSizeMegabytes": "<integer>",
                  "supervised": "<boolean>",
                  "supportEmailAddress": "<string>",
                  "supportPhoneNumber": "<string>",
                  "timezone": "<string>",
                  "useStorageQuotaSize": "<boolean>",
                  "skipSetupItems": {
                    "nostrudb0": "<boolean>",
                    "Lorem_39": "<boolean>"
                  },
                  "anchorCertificates": [
                    "<string>",
                    "<string>"
                  ],
                  "enrollmentCustomizationId": "<string>",
                  "language": "<string>",
                  "region": "<string>",
                  "names": {
                    "assignNamesUsing": "<string>",
                    "prestageDeviceNames": [
                      {
                        "id": "<string>",
                        "deviceName": "<string>",
                        "used": "<boolean>"
                      },
                      {
                        "id": "<string>",
                        "deviceName": "<string>",
                        "used": "<boolean>"
                      }
                    ],
                    "deviceNamePrefix": "<string>",
                    "deviceNameSuffix": "<string>",
                    "singleDeviceName": "<string>",
                    "manageNames": "<boolean>",
                    "deviceNamingConfigured": "<boolean>"
                  },
                  "temporarySessionOnly": "<boolean>",
                  "enforceTemporarySessionTimeout": "<boolean>",
                  "temporarySessionTimeout": "<integer>",
                  "enforceUserSessionTimeout": "<boolean>",
                  "userSessionTimeout": "<integer>",
                  "prestageMinimumOsTargetVersionTypeIos": "MINIMUM_OS_LATEST_MAJOR_VERSION",
                  "minimumOsSpecificVersionIos": "<string>",
                  "prestageMinimumOsTargetVersionTypeIpad": "MINIMUM_OS_LATEST_MINOR_VERSION",
                  "minimumOsSpecificVersionIpad": "<string>",
                  "versionLock": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "allowPairing": "<boolean>",
                  "authenticationPrompt": "<string>",
                  "autoAdvanceSetup": "<boolean>",
                  "configureDeviceBeforeSetupAssistant": "<boolean>",
                  "defaultPrestage": "<boolean>",
                  "department": "<string>",
                  "deviceEnrollmentProgramInstanceId": "<string>",
                  "displayName": "<string>",
                  "enableDeviceBasedActivationLock": "<boolean>",
                  "enrollmentSiteId": "<string>",
                  "keepExistingLocationInformation": "<boolean>",
                  "keepExistingSiteMembership": "<boolean>",
                  "locationInformation": {
                    "buildingId": "<string>",
                    "departmentId": "<string>",
                    "email": "<string>",
                    "id": "<string>",
                    "phone": "<string>",
                    "position": "<string>",
                    "realname": "<string>",
                    "room": "<string>",
                    "username": "<string>",
                    "versionLock": "<integer>"
                  },
                  "mandatory": "<boolean>",
                  "maximumSharedAccounts": "<integer>",
                  "mdmRemovable": "<boolean>",
                  "multiUser": "<boolean>",
                  "preventActivationLock": "<boolean>",
                  "purchasingInformation": {
                    "appleCareId": "<string>",
                    "id": "<string>",
                    "leaseDate": "<string>",
                    "leased": "<boolean>",
                    "lifeExpectancy": "<integer>",
                    "poDate": "<string>",
                    "poNumber": "<string>",
                    "purchasePrice": "<string>",
                    "purchased": "<boolean>",
                    "purchasingAccount": "<string>",
                    "purchasingContact": "<string>",
                    "vendor": "<string>",
                    "versionLock": "<integer>",
                    "warrantyDate": "<string>"
                  },
                  "requireAuthentication": "<boolean>",
                  "sendTimezone": "<boolean>",
                  "storageQuotaSizeMegabytes": "<integer>",
                  "supervised": "<boolean>",
                  "supportEmailAddress": "<string>",
                  "supportPhoneNumber": "<string>",
                  "timezone": "<string>",
                  "useStorageQuotaSize": "<boolean>",
                  "skipSetupItems": {
                    "cillum_5": "<boolean>",
                    "ea_f": "<boolean>"
                  },
                  "anchorCertificates": [
                    "<string>",
                    "<string>"
                  ],
                  "enrollmentCustomizationId": "<string>",
                  "language": "<string>",
                  "region": "<string>",
                  "names": {
                    "assignNamesUsing": "<string>",
                    "prestageDeviceNames": [
                      {
                        "id": "<string>",
                        "deviceName": "<string>",
                        "used": "<boolean>"
                      },
                      {
                        "id": "<string>",
                        "deviceName": "<string>",
                        "used": "<boolean>"
                      }
                    ],
                    "deviceNamePrefix": "<string>",
                    "deviceNameSuffix": "<string>",
                    "singleDeviceName": "<string>",
                    "manageNames": "<boolean>",
                    "deviceNamingConfigured": "<boolean>"
                  },
                  "temporarySessionOnly": "<boolean>",
                  "enforceTemporarySessionTimeout": "<boolean>",
                  "temporarySessionTimeout": "<integer>",
                  "enforceUserSessionTimeout": "<boolean>",
                  "userSessionTimeout": "<integer>",
                  "prestageMinimumOsTargetVersionTypeIos": "MINIMUM_OS_LATEST_VERSION",
                  "minimumOsSpecificVersionIos": "<string>",
                  "prestageMinimumOsTargetVersionTypeIpad": "MINIMUM_OS_LATEST_MAJOR_VERSION",
                  "minimumOsSpecificVersionIpad": "<string>",
                  "id": "<string>",
                  "profileUuid": "<string>",
                  "siteId": "<string>",
                  "versionLock": "<integer>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v2_mobile-device-prestages_id"
      },
      "delete": {
        "tags": [
          "v2 > mobile-device-prestages > {id}"
        ],
        "summary": "Delete a Mobile Device Prestage with the supplied id\n",
        "description": "Deletes a Mobile Device Prestage with the supplied id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Mobile Device Prestage identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v2_mobile-device-prestages_id"
      }
    },
    "/v2/mobile-device-prestages": {
      "get": {
        "tags": [
          "v2 > mobile-device-prestages"
        ],
        "summary": "Get sorted and paged Mobile Device Prestages\n",
        "description": "Gets sorted and paged mobile device prestages",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "id:desc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "allowPairing": "<boolean>",
                      "authenticationPrompt": "<string>",
                      "autoAdvanceSetup": "<boolean>",
                      "configureDeviceBeforeSetupAssistant": "<boolean>",
                      "defaultPrestage": "<boolean>",
                      "department": "<string>",
                      "deviceEnrollmentProgramInstanceId": "<string>",
                      "displayName": "<string>",
                      "enableDeviceBasedActivationLock": "<boolean>",
                      "enrollmentSiteId": "<string>",
                      "keepExistingLocationInformation": "<boolean>",
                      "keepExistingSiteMembership": "<boolean>",
                      "locationInformation": {
                        "buildingId": "<string>",
                        "departmentId": "<string>",
                        "email": "<string>",
                        "id": "<string>",
                        "phone": "<string>",
                        "position": "<string>",
                        "realname": "<string>",
                        "room": "<string>",
                        "username": "<string>",
                        "versionLock": "<integer>"
                      },
                      "mandatory": "<boolean>",
                      "maximumSharedAccounts": "<integer>",
                      "mdmRemovable": "<boolean>",
                      "multiUser": "<boolean>",
                      "preventActivationLock": "<boolean>",
                      "purchasingInformation": {
                        "appleCareId": "<string>",
                        "id": "<string>",
                        "leaseDate": "<string>",
                        "leased": "<boolean>",
                        "lifeExpectancy": "<integer>",
                        "poDate": "<string>",
                        "poNumber": "<string>",
                        "purchasePrice": "<string>",
                        "purchased": "<boolean>",
                        "purchasingAccount": "<string>",
                        "purchasingContact": "<string>",
                        "vendor": "<string>",
                        "versionLock": "<integer>",
                        "warrantyDate": "<string>"
                      },
                      "requireAuthentication": "<boolean>",
                      "sendTimezone": "<boolean>",
                      "storageQuotaSizeMegabytes": "<integer>",
                      "supervised": "<boolean>",
                      "supportEmailAddress": "<string>",
                      "supportPhoneNumber": "<string>",
                      "timezone": "<string>",
                      "useStorageQuotaSize": "<boolean>",
                      "skipSetupItems": {
                        "amet_806": "<boolean>",
                        "sunt3": "<boolean>",
                        "enim_7b": "<boolean>",
                        "minim_8": "<boolean>"
                      },
                      "anchorCertificates": [
                        "<string>",
                        "<string>"
                      ],
                      "enrollmentCustomizationId": "<string>",
                      "language": "<string>",
                      "region": "<string>",
                      "names": {
                        "assignNamesUsing": "<string>",
                        "prestageDeviceNames": [
                          {
                            "id": "<string>",
                            "deviceName": "<string>",
                            "used": "<boolean>"
                          },
                          {
                            "id": "<string>",
                            "deviceName": "<string>",
                            "used": "<boolean>"
                          }
                        ],
                        "deviceNamePrefix": "<string>",
                        "deviceNameSuffix": "<string>",
                        "singleDeviceName": "<string>",
                        "manageNames": "<boolean>",
                        "deviceNamingConfigured": "<boolean>"
                      },
                      "temporarySessionOnly": "<boolean>",
                      "enforceTemporarySessionTimeout": "<boolean>",
                      "temporarySessionTimeout": "<integer>",
                      "enforceUserSessionTimeout": "<boolean>",
                      "userSessionTimeout": "<integer>",
                      "prestageMinimumOsTargetVersionTypeIos": "MINIMUM_OS_LATEST_MAJOR_VERSION",
                      "minimumOsSpecificVersionIos": "<string>",
                      "prestageMinimumOsTargetVersionTypeIpad": "MINIMUM_OS_SPECIFIC_VERSION",
                      "minimumOsSpecificVersionIpad": "<string>",
                      "id": "<string>",
                      "profileUuid": "<string>",
                      "siteId": "<string>",
                      "versionLock": "<integer>"
                    },
                    {
                      "allowPairing": "<boolean>",
                      "authenticationPrompt": "<string>",
                      "autoAdvanceSetup": "<boolean>",
                      "configureDeviceBeforeSetupAssistant": "<boolean>",
                      "defaultPrestage": "<boolean>",
                      "department": "<string>",
                      "deviceEnrollmentProgramInstanceId": "<string>",
                      "displayName": "<string>",
                      "enableDeviceBasedActivationLock": "<boolean>",
                      "enrollmentSiteId": "<string>",
                      "keepExistingLocationInformation": "<boolean>",
                      "keepExistingSiteMembership": "<boolean>",
                      "locationInformation": {
                        "buildingId": "<string>",
                        "departmentId": "<string>",
                        "email": "<string>",
                        "id": "<string>",
                        "phone": "<string>",
                        "position": "<string>",
                        "realname": "<string>",
                        "room": "<string>",
                        "username": "<string>",
                        "versionLock": "<integer>"
                      },
                      "mandatory": "<boolean>",
                      "maximumSharedAccounts": "<integer>",
                      "mdmRemovable": "<boolean>",
                      "multiUser": "<boolean>",
                      "preventActivationLock": "<boolean>",
                      "purchasingInformation": {
                        "appleCareId": "<string>",
                        "id": "<string>",
                        "leaseDate": "<string>",
                        "leased": "<boolean>",
                        "lifeExpectancy": "<integer>",
                        "poDate": "<string>",
                        "poNumber": "<string>",
                        "purchasePrice": "<string>",
                        "purchased": "<boolean>",
                        "purchasingAccount": "<string>",
                        "purchasingContact": "<string>",
                        "vendor": "<string>",
                        "versionLock": "<integer>",
                        "warrantyDate": "<string>"
                      },
                      "requireAuthentication": "<boolean>",
                      "sendTimezone": "<boolean>",
                      "storageQuotaSizeMegabytes": "<integer>",
                      "supervised": "<boolean>",
                      "supportEmailAddress": "<string>",
                      "supportPhoneNumber": "<string>",
                      "timezone": "<string>",
                      "useStorageQuotaSize": "<boolean>",
                      "skipSetupItems": {
                        "non_4d9": "<boolean>"
                      },
                      "anchorCertificates": [
                        "<string>",
                        "<string>"
                      ],
                      "enrollmentCustomizationId": "<string>",
                      "language": "<string>",
                      "region": "<string>",
                      "names": {
                        "assignNamesUsing": "<string>",
                        "prestageDeviceNames": [
                          {
                            "id": "<string>",
                            "deviceName": "<string>",
                            "used": "<boolean>"
                          },
                          {
                            "id": "<string>",
                            "deviceName": "<string>",
                            "used": "<boolean>"
                          }
                        ],
                        "deviceNamePrefix": "<string>",
                        "deviceNameSuffix": "<string>",
                        "singleDeviceName": "<string>",
                        "manageNames": "<boolean>",
                        "deviceNamingConfigured": "<boolean>"
                      },
                      "temporarySessionOnly": "<boolean>",
                      "enforceTemporarySessionTimeout": "<boolean>",
                      "temporarySessionTimeout": "<integer>",
                      "enforceUserSessionTimeout": "<boolean>",
                      "userSessionTimeout": "<integer>",
                      "prestageMinimumOsTargetVersionTypeIos": "MINIMUM_OS_LATEST_MINOR_VERSION",
                      "minimumOsSpecificVersionIos": "<string>",
                      "prestageMinimumOsTargetVersionTypeIpad": "NO_ENFORCEMENT",
                      "minimumOsSpecificVersionIpad": "<string>",
                      "id": "<string>",
                      "profileUuid": "<string>",
                      "siteId": "<string>",
                      "versionLock": "<integer>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_mobile-device-prestages"
      },
      "post": {
        "tags": [
          "v2 > mobile-device-prestages"
        ],
        "summary": "Create a Mobile Device Prestage\n",
        "description": "Create a mobile device prestage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "allowPairing": "<boolean>",
                  "authenticationPrompt": "<string>",
                  "autoAdvanceSetup": "<boolean>",
                  "configureDeviceBeforeSetupAssistant": "<boolean>",
                  "defaultPrestage": "<boolean>",
                  "department": "<string>",
                  "deviceEnrollmentProgramInstanceId": "<string>",
                  "displayName": "<string>",
                  "enableDeviceBasedActivationLock": "<boolean>",
                  "enrollmentSiteId": "<string>",
                  "keepExistingLocationInformation": "<boolean>",
                  "keepExistingSiteMembership": "<boolean>",
                  "locationInformation": {
                    "buildingId": "<string>",
                    "departmentId": "<string>",
                    "email": "<string>",
                    "id": "<string>",
                    "phone": "<string>",
                    "position": "<string>",
                    "realname": "<string>",
                    "room": "<string>",
                    "username": "<string>",
                    "versionLock": "<integer>"
                  },
                  "mandatory": "<boolean>",
                  "maximumSharedAccounts": "<integer>",
                  "mdmRemovable": "<boolean>",
                  "multiUser": "<boolean>",
                  "preventActivationLock": "<boolean>",
                  "purchasingInformation": {
                    "appleCareId": "<string>",
                    "id": "<string>",
                    "leaseDate": "<string>",
                    "leased": "<boolean>",
                    "lifeExpectancy": "<integer>",
                    "poDate": "<string>",
                    "poNumber": "<string>",
                    "purchasePrice": "<string>",
                    "purchased": "<boolean>",
                    "purchasingAccount": "<string>",
                    "purchasingContact": "<string>",
                    "vendor": "<string>",
                    "versionLock": "<integer>",
                    "warrantyDate": "<string>"
                  },
                  "requireAuthentication": "<boolean>",
                  "sendTimezone": "<boolean>",
                  "storageQuotaSizeMegabytes": "<integer>",
                  "supervised": "<boolean>",
                  "supportEmailAddress": "<string>",
                  "supportPhoneNumber": "<string>",
                  "timezone": "<string>",
                  "useStorageQuotaSize": "<boolean>",
                  "skipSetupItems": {
                    "laboris1": "<boolean>",
                    "mollite0": "<boolean>"
                  },
                  "anchorCertificates": [
                    "<string>",
                    "<string>"
                  ],
                  "enrollmentCustomizationId": "<string>",
                  "language": "<string>",
                  "region": "<string>",
                  "names": {
                    "assignNamesUsing": "<string>",
                    "prestageDeviceNames": [
                      {
                        "id": "<string>",
                        "deviceName": "<string>",
                        "used": "<boolean>"
                      },
                      {
                        "id": "<string>",
                        "deviceName": "<string>",
                        "used": "<boolean>"
                      }
                    ],
                    "deviceNamePrefix": "<string>",
                    "deviceNameSuffix": "<string>",
                    "singleDeviceName": "<string>",
                    "manageNames": "<boolean>",
                    "deviceNamingConfigured": "<boolean>"
                  },
                  "temporarySessionOnly": "<boolean>",
                  "enforceTemporarySessionTimeout": "<boolean>",
                  "temporarySessionTimeout": "<integer>",
                  "enforceUserSessionTimeout": "<boolean>",
                  "userSessionTimeout": "<integer>",
                  "prestageMinimumOsTargetVersionTypeIos": "MINIMUM_OS_LATEST_MAJOR_VERSION",
                  "minimumOsSpecificVersionIos": "<string>",
                  "prestageMinimumOsTargetVersionTypeIpad": "MINIMUM_OS_SPECIFIC_VERSION",
                  "minimumOsSpecificVersionIpad": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          }
        },
        "operationId": "post_v2_mobile-device-prestages"
      }
    },
    "/v2/mobile-devices/detail": {
      "get": {
        "tags": [
          "v2 > mobile-devices > detail"
        ],
        "summary": "Return paginated Mobile Device Inventory records",
        "description": "Return paginated Mobile Device Inventory records",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "section",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "section of mobile device details, if not specified, General section data is returned. Multiple section parameters are supported, e.g. section=GENERAL&amp;section=HARDWARE",
            "example": "GENERAL"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort\nis displayName:asc. Multiple sort criteria are supported and must be separated with\na comma. \n\nFields allowed in the sort: `airPlayPassword`, `appAnalyticsEnabled`, `assetTag`, `availableSpaceMb`, \n`batteryLevel`, `bluetoothLowEnergyCapable`, `bluetoothMacAddress`, `capacityMb`, \n`lostModeEnabledDate`, `declarativeDeviceManagementEnabled`, `deviceId`, `deviceLocatorServiceEnabled`,\n`devicePhoneNumber`, `diagnosticAndUsageReportingEnabled`, `displayName`, `doNotDisturbEnabled`, \n`enrollmentSessionTokenValid`, `exchangeDeviceId`, `cloudBackupEnabled`, `osBuild`,\n`osSupplementalBuildVersion`, `osVersion`, `osRapidSecurityResponse`, `ipAddress`, `itunesStoreAccountActive`,\n`mobileDeviceId`, `languages`, `lastBackupDate`, `lastEnrolledDate`, `lastCloudBackupDate`,\n`lastInventoryUpdateDate`, `locales`, `locationServicesForSelfServiceMobileEnabled`, `lostModeEnabled`,\n`managed`, `mdmProfileExpirationDate`, `model`, `modelIdentifier`,\n`modelNumber`, `modemFirmwareVersion`, `quotaSize`, `residentUsers`,\n`serialNumber`, `sharedIpad`, `supervised`, `tethered`,\n`timeZone`, `udid`, `usedSpacePercentage`, `wifiMacAddress`,\n`deviceOwnershipType`, `building`, `department`, `emailAddress`,\n`fullName`, `userPhoneNumber`, `position`, `room`,\n`username`, `appleCareId`, `leaseExpirationDate`,`lifeExpectancyYears`,\n`poDate`, `poNumber`, `purchasePrice`, `purchasedOrLeased`,\n`purchasingAccount`, `purchasingContact`, `vendor`, `warrantyExpirationDate`,\n`activationLockEnabled`, `blockEncryptionCapable`, `dataProtection`, `fileEncryptionCapable`,\n`hardwareEncryptionSupported`, `jailbreakStatus`, `passcodeCompliant`, `passcodeCompliantWithProfile`,\n`passcodeLockGracePeriodEnforcedSeconds`, `passcodePresent`, `personalDeviceProfileCurrent`, `carrierSettingsVersion`,\n`cellularTechnology`, `currentCarrierNetwork`, `currentMobileCountryCode`, `currentMobileNetworkCode`, \n`dataRoamingEnabled`, `eid`, `network`, `homeMobileCountryCode`, \n`homeMobileNetworkCode`, `iccid`, `imei`, `imei2`,\n`meid`, `personalHotspotEnabled`, `voiceRoamingEnabled`, `roaming`\n\nExample: `sort=displayName:desc,username:asc`\n",
            "example": "displayName:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter mobile device collection.\nDefault filter is empty query - returning all results for the requested page.\n\nFields allowed in the query: `airPlayPassword`, `appAnalyticsEnabled`, `assetTag`, `availableSpaceMb`, \n`batteryLevel`, `bluetoothLowEnergyCapable`, `bluetoothMacAddress`, `capacityMb`, \n`declarativeDeviceManagementEnabled`, `deviceId`, `deviceLocatorServiceEnabled`, `devicePhoneNumber`,\n`diagnosticAndUsageReportingEnabled`, `displayName`, `doNotDisturbEnabled`, `exchangeDeviceId`, \n`cloudBackupEnabled`, `osBuild`, `osSupplementalBuildVersion`, `osVersion`, `osRapidSecurityResponse`,\n`ipAddress`, `itunesStoreAccountActive`, `mobileDeviceId`, `languages`, `lastInventoryUpdateDate`, `locales`,\n`locationServicesForSelfServiceMobileEnabled`, `lostModeEnabled`, `managed`, `model`, \n`modelIdentifier`, `modelNumber`, `modemFirmwareVersion`, `quotaSize`, \n`residentUsers`, `serialNumber`, `sharedIpad`, `supervised`,\n`tethered`, `timeZone`, `udid`, `usedSpacePercentage`, \n`wifiMacAddress`, `building`, `department`, `emailAddress`,\n`fullName`, `userPhoneNumber`, `position`, `room`,\n`username`, `appleCareId`, `lifeExpectancyYears`, `poNumber`, \n`purchasePrice`, `purchasedOrLeased`, `purchasingAccount`, `purchasingContact`,\n`vendor`, `activationLockEnabled`, `blockEncryptionCapable`, `dataProtection`, \n`fileEncryptionCapable`, `passcodeCompliant`, `passcodeCompliantWithProfile`, `passcodeLockGracePeriodEnforcedSeconds`,\n`passcodePresent`, `personalDeviceProfileCurrent`, `carrierSettingsVersion`, `currentCarrierNetwork`,\n`currentMobileCountryCode`, `currentMobileNetworkCode`, `dataRoamingEnabled`, `eid`,\n`network`, `homeMobileCountryCode`, `homeMobileNetworkCode`, `iccid`,\n`imei`, `imei2`, `meid`, `personalHotspotEnabled`, \n`roaming`\n\nThis param can be combined with paging and sorting.\nExample: `filter=displayName==\"iPad\"`\n"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "deviceType": "<string>",
                      "mobileDeviceId": "<string>",
                      "hardware": {
                        "capacityMb": "<integer>",
                        "availableSpaceMb": "<integer>",
                        "usedSpacePercentage": "<integer>",
                        "batteryLevel": "<integer>",
                        "serialNumber": "<string>",
                        "wifiMacAddress": "<string>",
                        "bluetoothMacAddress": "<string>",
                        "modemFirmwareVersion": "<string>",
                        "model": "<string>",
                        "modelIdentifier": "<string>",
                        "modelNumber": "<string>",
                        "bluetoothLowEnergyCapable": "<boolean>",
                        "deviceId": "<string>",
                        "extensionAttributes": [
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "STRING",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          },
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "STRING",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          }
                        ]
                      },
                      "userAndLocation": {
                        "username": "<string>",
                        "realName": "<string>",
                        "emailAddress": "<string>",
                        "position": "<string>",
                        "phoneNumber": "<string>",
                        "departmentId": "<string>",
                        "buildingId": "<string>",
                        "room": "<string>",
                        "building": "<string>",
                        "department": "<string>",
                        "extensionAttributes": [
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "INTEGER",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          },
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "INTEGER",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          }
                        ]
                      },
                      "applications": [
                        {
                          "identifier": "<string>",
                          "name": "<string>",
                          "version": "<string>",
                          "shortVersion": "<string>",
                          "managementStatus": "<string>",
                          "validationStatus": "<boolean>",
                          "bundleSize": "<string>",
                          "dynamicSize": "<string>"
                        },
                        {
                          "identifier": "<string>",
                          "name": "<string>",
                          "version": "<string>",
                          "shortVersion": "<string>",
                          "managementStatus": "<string>",
                          "validationStatus": "<boolean>",
                          "bundleSize": "<string>",
                          "dynamicSize": "<string>"
                        }
                      ],
                      "certificates": [
                        {
                          "commonName": "<string>",
                          "identity": "<boolean>",
                          "expirationDate": "<dateTime>"
                        },
                        {
                          "commonName": "<string>",
                          "identity": "<boolean>",
                          "expirationDate": "<dateTime>"
                        }
                      ],
                      "profiles": [
                        {
                          "displayName": "<string>",
                          "version": "<string>",
                          "uuid": "<string>",
                          "identifier": "<string>",
                          "removable": "<boolean>",
                          "lastInstalled": "<dateTime>"
                        },
                        {
                          "displayName": "<string>",
                          "version": "<string>",
                          "uuid": "<string>",
                          "identifier": "<string>",
                          "removable": "<boolean>",
                          "lastInstalled": "<dateTime>"
                        }
                      ],
                      "extensionAttributes": [
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "type": "DATE",
                          "value": [
                            "<string>",
                            "<string>"
                          ],
                          "extensionAttributeCollectionAllowed": "<boolean>",
                          "inventoryDisplay": "<string>"
                        },
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "type": "DATE",
                          "value": [
                            "<string>",
                            "<string>"
                          ],
                          "extensionAttributeCollectionAllowed": "<boolean>",
                          "inventoryDisplay": "<string>"
                        }
                      ],
                      "general": {
                        "udid": "<string>",
                        "displayName": "<string>",
                        "assetTag": "<string>",
                        "siteId": "<string>",
                        "lastInventoryUpdateDate": "<dateTime>",
                        "osVersion": "<string>",
                        "osRapidSecurityResponse": "<string>",
                        "osBuild": "<string>",
                        "osSupplementalBuildVersion": "<string>",
                        "softwareUpdateDeviceId": "<string>",
                        "ipAddress": "<string>",
                        "managed": "<boolean>",
                        "supervised": "<boolean>",
                        "deviceOwnershipType": "AccountDrivenUserEnrollment",
                        "enrollmentMethodPrestage": {
                          "mobileDevicePrestageId": "<string>",
                          "profileName": "<string>"
                        },
                        "enrollmentSessionTokenValid": "<boolean>",
                        "lastEnrolledDate": "<dateTime>",
                        "mdmProfileExpirationDate": "<dateTime>",
                        "timeZone": "<string>",
                        "declarativeDeviceManagementEnabled": "<boolean>",
                        "extensionAttributes": [
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "INTEGER",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          },
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "DATE",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          }
                        ],
                        "sharedIpad": "<boolean>",
                        "diagnosticAndUsageReportingEnabled": "<boolean>",
                        "appAnalyticsEnabled": "<boolean>",
                        "residentUsers": "<integer>",
                        "quotaSize": "<integer>",
                        "temporarySessionOnly": "<boolean>",
                        "temporarySessionTimeout": "<integer>",
                        "userSessionTimeout": "<integer>",
                        "syncedToComputer": "<integer>",
                        "maximumSharediPadUsersStored": "<integer>",
                        "lastBackupDate": "<dateTime>",
                        "deviceLocatorServiceEnabled": "<boolean>",
                        "doNotDisturbEnabled": "<boolean>",
                        "cloudBackupEnabled": "<boolean>",
                        "lastCloudBackupDate": "<dateTime>",
                        "locationServicesForSelfServiceMobileEnabled": "<boolean>",
                        "itunesStoreAccountActive": "<boolean>",
                        "exchangeDeviceId": "<string>",
                        "tethered": "<boolean>"
                      },
                      "security": {
                        "dataProtected": "<boolean>",
                        "blockLevelEncryptionCapable": "<boolean>",
                        "fileLevelEncryptionCapable": "<boolean>",
                        "passcodePresent": "<boolean>",
                        "passcodeCompliant": "<boolean>",
                        "passcodeCompliantWithProfile": "<boolean>",
                        "hardwareEncryption": "<integer>",
                        "activationLockEnabled": "<boolean>",
                        "jailBreakDetected": "<boolean>",
                        "passcodeLockGracePeriodEnforcedSeconds": "<integer>",
                        "personalDeviceProfileCurrent": "<boolean>",
                        "lostModeEnabled": "<boolean>",
                        "lostModePersistent": "<boolean>",
                        "lostModeMessage": "<string>",
                        "lostModePhoneNumber": "<string>",
                        "lostModeFootnote": "<string>",
                        "lostModeLocation": {
                          "lastLocationUpdate": "<dateTime>",
                          "lostModeLocationHorizontalAccuracyMeters": "<number>",
                          "lostModeLocationVerticalAccuracyMeters": "<number>",
                          "lostModeLocationAltitudeMeters": "<number>",
                          "lostModeLocationSpeedMetersPerSecond": "<number>",
                          "lostModeLocationCourseDegrees": "<number>",
                          "lostModeLocationTimestamp": "<string>"
                        }
                      },
                      "ebooks": [
                        {
                          "author": "<string>",
                          "title": "<string>",
                          "version": "<string>",
                          "kind": "<string>",
                          "managementState": "<string>"
                        },
                        {
                          "author": "<string>",
                          "title": "<string>",
                          "version": "<string>",
                          "kind": "<string>",
                          "managementState": "<string>"
                        }
                      ],
                      "network": {
                        "cellularTechnology": "<string>",
                        "voiceRoamingEnabled": "<boolean>",
                        "imei": "<string>",
                        "iccid": "<string>",
                        "meid": "<string>",
                        "eid": "<string>",
                        "carrierSettingsVersion": "<string>",
                        "currentCarrierNetwork": "<string>",
                        "currentMobileCountryCode": "<string>",
                        "currentMobileNetworkCode": "<string>",
                        "homeCarrierNetwork": "<string>",
                        "homeMobileCountryCode": "<string>",
                        "homeMobileNetworkCode": "<string>",
                        "dataRoamingEnabled": "<boolean>",
                        "roaming": "<boolean>",
                        "personalHotspotEnabled": "<boolean>",
                        "phoneNumber": "<string>"
                      },
                      "serviceSubscriptions": [
                        {
                          "carrierSettingsVersion": "<string>",
                          "currentCarrierNetwork": "<string>",
                          "currentMobileCountryCode": "<string>",
                          "currentMobileNetworkCode": "<string>",
                          "subscriberCarrierNetwork": "<string>",
                          "eid": "<string>",
                          "iccid": "<string>",
                          "imei": "<string>",
                          "dataPreferred": "<boolean>",
                          "roaming": "<boolean>",
                          "voicePreferred": "<boolean>",
                          "label": "<string>",
                          "labelId": "<string>",
                          "meid": "<string>",
                          "phoneNumber": "<string>",
                          "slot": "<string>"
                        },
                        {
                          "carrierSettingsVersion": "<string>",
                          "currentCarrierNetwork": "<string>",
                          "currentMobileCountryCode": "<string>",
                          "currentMobileNetworkCode": "<string>",
                          "subscriberCarrierNetwork": "<string>",
                          "eid": "<string>",
                          "iccid": "<string>",
                          "imei": "<string>",
                          "dataPreferred": "<boolean>",
                          "roaming": "<boolean>",
                          "voicePreferred": "<boolean>",
                          "label": "<string>",
                          "labelId": "<string>",
                          "meid": "<string>",
                          "phoneNumber": "<string>",
                          "slot": "<string>"
                        }
                      ],
                      "provisioningProfiles": [
                        {
                          "displayName": "<string>",
                          "uuid": "<string>",
                          "expirationDate": "<dateTime>"
                        },
                        {
                          "displayName": "<string>",
                          "uuid": "<string>",
                          "expirationDate": "<dateTime>"
                        }
                      ],
                      "sharedUsers": [
                        {
                          "managedAppleId": "<string>",
                          "loggedIn": "<boolean>",
                          "dataToSync": "<boolean>"
                        },
                        {
                          "managedAppleId": "<string>",
                          "loggedIn": "<boolean>",
                          "dataToSync": "<boolean>"
                        }
                      ],
                      "purchasing": {
                        "purchased": "<boolean>",
                        "leased": "<boolean>",
                        "poNumber": "<string>",
                        "vendor": "<string>",
                        "appleCareId": "<string>",
                        "purchasePrice": "<string>",
                        "purchasingAccount": "<string>",
                        "poDate": "<dateTime>",
                        "warrantyExpiresDate": "<dateTime>",
                        "leaseExpiresDate": "<dateTime>",
                        "lifeExpectancy": "<integer>",
                        "purchasingContact": "<string>",
                        "extensionAttributes": [
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "DATE",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          },
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "DATE",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          }
                        ]
                      },
                      "userProfiles": [
                        {
                          "displayName": "<string>",
                          "version": "<string>",
                          "uuid": "<string>",
                          "identifier": "<string>",
                          "removable": "<boolean>",
                          "lastInstalled": "<dateTime>",
                          "username": "<string>"
                        },
                        {
                          "displayName": "<string>",
                          "version": "<string>",
                          "uuid": "<string>",
                          "identifier": "<string>",
                          "removable": "<boolean>",
                          "lastInstalled": "<dateTime>",
                          "username": "<string>"
                        }
                      ]
                    },
                    {
                      "deviceType": "<string>",
                      "mobileDeviceId": "<string>",
                      "hardware": {
                        "capacityMb": "<integer>",
                        "availableSpaceMb": "<integer>",
                        "usedSpacePercentage": "<integer>",
                        "batteryLevel": "<integer>",
                        "serialNumber": "<string>",
                        "wifiMacAddress": "<string>",
                        "bluetoothMacAddress": "<string>",
                        "modemFirmwareVersion": "<string>",
                        "model": "<string>",
                        "modelIdentifier": "<string>",
                        "modelNumber": "<string>",
                        "bluetoothLowEnergyCapable": "<boolean>",
                        "deviceId": "<string>",
                        "extensionAttributes": [
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "STRING",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          },
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "STRING",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          }
                        ]
                      },
                      "userAndLocation": {
                        "username": "<string>",
                        "realName": "<string>",
                        "emailAddress": "<string>",
                        "position": "<string>",
                        "phoneNumber": "<string>",
                        "departmentId": "<string>",
                        "buildingId": "<string>",
                        "room": "<string>",
                        "building": "<string>",
                        "department": "<string>",
                        "extensionAttributes": [
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "DATE",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          },
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "INTEGER",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          }
                        ]
                      },
                      "applications": [
                        {
                          "identifier": "<string>",
                          "name": "<string>",
                          "version": "<string>",
                          "shortVersion": "<string>",
                          "managementStatus": "<string>",
                          "validationStatus": "<boolean>",
                          "bundleSize": "<string>",
                          "dynamicSize": "<string>"
                        },
                        {
                          "identifier": "<string>",
                          "name": "<string>",
                          "version": "<string>",
                          "shortVersion": "<string>",
                          "managementStatus": "<string>",
                          "validationStatus": "<boolean>",
                          "bundleSize": "<string>",
                          "dynamicSize": "<string>"
                        }
                      ],
                      "certificates": [
                        {
                          "commonName": "<string>",
                          "identity": "<boolean>",
                          "expirationDate": "<dateTime>"
                        },
                        {
                          "commonName": "<string>",
                          "identity": "<boolean>",
                          "expirationDate": "<dateTime>"
                        }
                      ],
                      "profiles": [
                        {
                          "displayName": "<string>",
                          "version": "<string>",
                          "uuid": "<string>",
                          "identifier": "<string>",
                          "removable": "<boolean>",
                          "lastInstalled": "<dateTime>"
                        },
                        {
                          "displayName": "<string>",
                          "version": "<string>",
                          "uuid": "<string>",
                          "identifier": "<string>",
                          "removable": "<boolean>",
                          "lastInstalled": "<dateTime>"
                        }
                      ],
                      "extensionAttributes": [
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "type": "INTEGER",
                          "value": [
                            "<string>",
                            "<string>"
                          ],
                          "extensionAttributeCollectionAllowed": "<boolean>",
                          "inventoryDisplay": "<string>"
                        },
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "type": "DATE",
                          "value": [
                            "<string>",
                            "<string>"
                          ],
                          "extensionAttributeCollectionAllowed": "<boolean>",
                          "inventoryDisplay": "<string>"
                        }
                      ],
                      "general": {
                        "udid": "<string>",
                        "displayName": "<string>",
                        "assetTag": "<string>",
                        "siteId": "<string>",
                        "lastInventoryUpdateDate": "<dateTime>",
                        "osVersion": "<string>",
                        "osRapidSecurityResponse": "<string>",
                        "osBuild": "<string>",
                        "osSupplementalBuildVersion": "<string>",
                        "softwareUpdateDeviceId": "<string>",
                        "ipAddress": "<string>",
                        "managed": "<boolean>",
                        "supervised": "<boolean>",
                        "deviceOwnershipType": "AccountDrivenUserEnrollment",
                        "enrollmentMethodPrestage": {
                          "mobileDevicePrestageId": "<string>",
                          "profileName": "<string>"
                        },
                        "enrollmentSessionTokenValid": "<boolean>",
                        "lastEnrolledDate": "<dateTime>",
                        "mdmProfileExpirationDate": "<dateTime>",
                        "timeZone": "<string>",
                        "declarativeDeviceManagementEnabled": "<boolean>",
                        "extensionAttributes": [
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "STRING",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          },
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "DATE",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          }
                        ],
                        "sharedIpad": "<boolean>",
                        "diagnosticAndUsageReportingEnabled": "<boolean>",
                        "appAnalyticsEnabled": "<boolean>",
                        "residentUsers": "<integer>",
                        "quotaSize": "<integer>",
                        "temporarySessionOnly": "<boolean>",
                        "temporarySessionTimeout": "<integer>",
                        "userSessionTimeout": "<integer>",
                        "syncedToComputer": "<integer>",
                        "maximumSharediPadUsersStored": "<integer>",
                        "lastBackupDate": "<dateTime>",
                        "deviceLocatorServiceEnabled": "<boolean>",
                        "doNotDisturbEnabled": "<boolean>",
                        "cloudBackupEnabled": "<boolean>",
                        "lastCloudBackupDate": "<dateTime>",
                        "locationServicesForSelfServiceMobileEnabled": "<boolean>",
                        "itunesStoreAccountActive": "<boolean>",
                        "exchangeDeviceId": "<string>",
                        "tethered": "<boolean>"
                      },
                      "security": {
                        "dataProtected": "<boolean>",
                        "blockLevelEncryptionCapable": "<boolean>",
                        "fileLevelEncryptionCapable": "<boolean>",
                        "passcodePresent": "<boolean>",
                        "passcodeCompliant": "<boolean>",
                        "passcodeCompliantWithProfile": "<boolean>",
                        "hardwareEncryption": "<integer>",
                        "activationLockEnabled": "<boolean>",
                        "jailBreakDetected": "<boolean>",
                        "passcodeLockGracePeriodEnforcedSeconds": "<integer>",
                        "personalDeviceProfileCurrent": "<boolean>",
                        "lostModeEnabled": "<boolean>",
                        "lostModePersistent": "<boolean>",
                        "lostModeMessage": "<string>",
                        "lostModePhoneNumber": "<string>",
                        "lostModeFootnote": "<string>",
                        "lostModeLocation": {
                          "lastLocationUpdate": "<dateTime>",
                          "lostModeLocationHorizontalAccuracyMeters": "<number>",
                          "lostModeLocationVerticalAccuracyMeters": "<number>",
                          "lostModeLocationAltitudeMeters": "<number>",
                          "lostModeLocationSpeedMetersPerSecond": "<number>",
                          "lostModeLocationCourseDegrees": "<number>",
                          "lostModeLocationTimestamp": "<string>"
                        }
                      },
                      "ebooks": [
                        {
                          "author": "<string>",
                          "title": "<string>",
                          "version": "<string>",
                          "kind": "<string>",
                          "managementState": "<string>"
                        },
                        {
                          "author": "<string>",
                          "title": "<string>",
                          "version": "<string>",
                          "kind": "<string>",
                          "managementState": "<string>"
                        }
                      ],
                      "network": {
                        "cellularTechnology": "<string>",
                        "voiceRoamingEnabled": "<boolean>",
                        "imei": "<string>",
                        "iccid": "<string>",
                        "meid": "<string>",
                        "eid": "<string>",
                        "carrierSettingsVersion": "<string>",
                        "currentCarrierNetwork": "<string>",
                        "currentMobileCountryCode": "<string>",
                        "currentMobileNetworkCode": "<string>",
                        "homeCarrierNetwork": "<string>",
                        "homeMobileCountryCode": "<string>",
                        "homeMobileNetworkCode": "<string>",
                        "dataRoamingEnabled": "<boolean>",
                        "roaming": "<boolean>",
                        "personalHotspotEnabled": "<boolean>",
                        "phoneNumber": "<string>"
                      },
                      "serviceSubscriptions": [
                        {
                          "carrierSettingsVersion": "<string>",
                          "currentCarrierNetwork": "<string>",
                          "currentMobileCountryCode": "<string>",
                          "currentMobileNetworkCode": "<string>",
                          "subscriberCarrierNetwork": "<string>",
                          "eid": "<string>",
                          "iccid": "<string>",
                          "imei": "<string>",
                          "dataPreferred": "<boolean>",
                          "roaming": "<boolean>",
                          "voicePreferred": "<boolean>",
                          "label": "<string>",
                          "labelId": "<string>",
                          "meid": "<string>",
                          "phoneNumber": "<string>",
                          "slot": "<string>"
                        },
                        {
                          "carrierSettingsVersion": "<string>",
                          "currentCarrierNetwork": "<string>",
                          "currentMobileCountryCode": "<string>",
                          "currentMobileNetworkCode": "<string>",
                          "subscriberCarrierNetwork": "<string>",
                          "eid": "<string>",
                          "iccid": "<string>",
                          "imei": "<string>",
                          "dataPreferred": "<boolean>",
                          "roaming": "<boolean>",
                          "voicePreferred": "<boolean>",
                          "label": "<string>",
                          "labelId": "<string>",
                          "meid": "<string>",
                          "phoneNumber": "<string>",
                          "slot": "<string>"
                        }
                      ],
                      "provisioningProfiles": [
                        {
                          "displayName": "<string>",
                          "uuid": "<string>",
                          "expirationDate": "<dateTime>"
                        },
                        {
                          "displayName": "<string>",
                          "uuid": "<string>",
                          "expirationDate": "<dateTime>"
                        }
                      ],
                      "sharedUsers": [
                        {
                          "managedAppleId": "<string>",
                          "loggedIn": "<boolean>",
                          "dataToSync": "<boolean>"
                        },
                        {
                          "managedAppleId": "<string>",
                          "loggedIn": "<boolean>",
                          "dataToSync": "<boolean>"
                        }
                      ],
                      "purchasing": {
                        "purchased": "<boolean>",
                        "leased": "<boolean>",
                        "poNumber": "<string>",
                        "vendor": "<string>",
                        "appleCareId": "<string>",
                        "purchasePrice": "<string>",
                        "purchasingAccount": "<string>",
                        "poDate": "<dateTime>",
                        "warrantyExpiresDate": "<dateTime>",
                        "leaseExpiresDate": "<dateTime>",
                        "lifeExpectancy": "<integer>",
                        "purchasingContact": "<string>",
                        "extensionAttributes": [
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "DATE",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          },
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "STRING",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          }
                        ]
                      },
                      "userProfiles": [
                        {
                          "displayName": "<string>",
                          "version": "<string>",
                          "uuid": "<string>",
                          "identifier": "<string>",
                          "removable": "<boolean>",
                          "lastInstalled": "<dateTime>",
                          "username": "<string>"
                        },
                        {
                          "displayName": "<string>",
                          "version": "<string>",
                          "uuid": "<string>",
                          "identifier": "<string>",
                          "removable": "<boolean>",
                          "lastInstalled": "<dateTime>",
                          "username": "<string>"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_mobile-devices_detail"
      }
    },
    "/v2/mobile-devices/{id}/detail": {
      "get": {
        "tags": [
          "v2 > mobile-devices > {id} > detail"
        ],
        "summary": "Get Mobile Device\n",
        "description": "Get MobileDevice",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of mobile device record",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "name": "<string>",
                  "enforceName": "<boolean>",
                  "assetTag": "<string>",
                  "lastInventoryUpdateTimestamp": "<dateTime>",
                  "osVersion": "<string>",
                  "osBuild": "<string>",
                  "osSupplementalBuildVersion": "<string>",
                  "osRapidSecurityResponse": "<string>",
                  "softwareUpdateDeviceId": "<string>",
                  "serialNumber": "<string>",
                  "udid": "<string>",
                  "ipAddress": "<string>",
                  "wifiMacAddress": "<string>",
                  "bluetoothMacAddress": "<string>",
                  "managed": "<boolean>",
                  "timeZone": "<string>",
                  "initialEntryTimestamp": "<dateTime>",
                  "lastEnrollmentTimestamp": "<dateTime>",
                  "mdmProfileExpirationTimestamp": "<dateTime>",
                  "deviceOwnershipLevel": "<string>",
                  "enrollmentMethod": "<string>",
                  "enrollmentSessionTokenValid": "<boolean>",
                  "declarativeDeviceManagementEnabled": "<boolean>",
                  "site": {
                    "id": "<string>",
                    "name": "<string>"
                  },
                  "extensionAttributes": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "type": "INTEGER",
                      "value": [
                        "<string>",
                        "<string>"
                      ],
                      "extensionAttributeCollectionAllowed": "<boolean>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "type": "STRING",
                      "value": [
                        "<string>",
                        "<string>"
                      ],
                      "extensionAttributeCollectionAllowed": "<boolean>"
                    }
                  ],
                  "location": {
                    "username": "<string>",
                    "realName": "<string>",
                    "emailAddress": "<string>",
                    "position": "<string>",
                    "phoneNumber": "<string>",
                    "departmentId": "<string>",
                    "buildingId": "<string>",
                    "room": "<string>"
                  },
                  "type": "ios",
                  "ios": {
                    "model": "<string>",
                    "modelIdentifier": "<string>",
                    "modelNumber": "<string>",
                    "supervised": "<boolean>",
                    "batteryLevel": "<integer>",
                    "lastBackupTimestamp": "<dateTime>",
                    "capacityMb": "<integer>",
                    "availableMb": "<integer>",
                    "percentageUsed": "<integer>",
                    "shared": "<boolean>",
                    "deviceLocatorServiceEnabled": "<boolean>",
                    "doNotDisturbEnabled": "<boolean>",
                    "cloudBackupEnabled": "<boolean>",
                    "lastCloudBackupTimestamp": "<dateTime>",
                    "locationServicesEnabled": "<boolean>",
                    "iTunesStoreAccountActive": "<boolean>",
                    "bleCapable": "<boolean>",
                    "computer": {
                      "id": "<string>",
                      "name": "<string>"
                    },
                    "purchasing": {
                      "purchased": "<boolean>",
                      "leased": "<boolean>",
                      "poNumber": "<string>",
                      "vendor": "<string>",
                      "appleCareId": "<string>",
                      "purchasePrice": "<string>",
                      "purchasingAccount": "<string>",
                      "poDate": "<dateTime>",
                      "warrantyExpiresDate": "<dateTime>",
                      "leaseExpiresDate": "<dateTime>",
                      "lifeExpectancy": "<integer>",
                      "purchasingContact": "<string>"
                    },
                    "security": {
                      "dataProtected": "<boolean>",
                      "blockLevelEncryptionCapable": "<boolean>",
                      "fileLevelEncryptionCapable": "<boolean>",
                      "passcodePresent": "<boolean>",
                      "passcodeCompliant": "<boolean>",
                      "passcodeCompliantWithProfile": "<boolean>",
                      "hardwareEncryption": "<integer>",
                      "activationLockEnabled": "<boolean>",
                      "jailBreakDetected": "<boolean>"
                    },
                    "network": {
                      "cellularTechnology": "<string>",
                      "voiceRoamingEnabled": "<boolean>",
                      "imei": "<string>",
                      "iccid": "<string>",
                      "meid": "<string>",
                      "eid": "<string>",
                      "carrierSettingsVersion": "<string>",
                      "currentCarrierNetwork": "<string>",
                      "currentMobileCountryCode": "<string>",
                      "currentMobileNetworkCode": "<string>",
                      "homeCarrierNetwork": "<string>",
                      "homeMobileCountryCode": "<string>",
                      "homeMobileNetworkCode": "<string>",
                      "dataRoamingEnabled": "<boolean>",
                      "roaming": "<boolean>",
                      "personalHotspotEnabled": "<boolean>",
                      "phoneNumber": "<string>"
                    },
                    "serviceSubscriptions": [
                      {
                        "carrierSettingsVersion": "<string>",
                        "currentCarrierNetwork": "<string>",
                        "currentMobileCountryCode": "<string>",
                        "currentMobileNetworkCode": "<string>",
                        "subscriberCarrierNetwork": "<string>",
                        "eid": "<string>",
                        "iccid": "<string>",
                        "imei": "<string>",
                        "dataPreferred": "<boolean>",
                        "roaming": "<boolean>",
                        "voicePreferred": "<boolean>",
                        "label": "<string>",
                        "labelId": "<string>",
                        "meid": "<string>",
                        "phoneNumber": "<string>",
                        "slot": "<string>"
                      },
                      {
                        "carrierSettingsVersion": "<string>",
                        "currentCarrierNetwork": "<string>",
                        "currentMobileCountryCode": "<string>",
                        "currentMobileNetworkCode": "<string>",
                        "subscriberCarrierNetwork": "<string>",
                        "eid": "<string>",
                        "iccid": "<string>",
                        "imei": "<string>",
                        "dataPreferred": "<boolean>",
                        "roaming": "<boolean>",
                        "voicePreferred": "<boolean>",
                        "label": "<string>",
                        "labelId": "<string>",
                        "meid": "<string>",
                        "phoneNumber": "<string>",
                        "slot": "<string>"
                      }
                    ],
                    "applications": [
                      {
                        "identifier": "<string>",
                        "name": "<string>",
                        "version": "<string>",
                        "shortVersion": "<string>"
                      },
                      {
                        "identifier": "<string>",
                        "name": "<string>",
                        "version": "<string>",
                        "shortVersion": "<string>"
                      }
                    ],
                    "certificates": [
                      {
                        "commonName": "<string>",
                        "identity": "<boolean>",
                        "expirationDateEpoch": "<dateTime>",
                        "subjectName": "<string>",
                        "serialNumber": "<string>",
                        "sha1Fingerprint": "<string>",
                        "issuedDateEpoch": "<string>",
                        "certificateStatus": "REVOKED",
                        "lifecycleStatus": "ACTIVE"
                      },
                      {
                        "commonName": "<string>",
                        "identity": "<boolean>",
                        "expirationDateEpoch": "<dateTime>",
                        "subjectName": "<string>",
                        "serialNumber": "<string>",
                        "sha1Fingerprint": "<string>",
                        "issuedDateEpoch": "<string>",
                        "certificateStatus": "PENDING_REVOKE",
                        "lifecycleStatus": "ACTIVE"
                      }
                    ],
                    "ebooks": [
                      {
                        "author": "<string>",
                        "title": "<string>",
                        "version": "<string>"
                      },
                      {
                        "author": "<string>",
                        "title": "<string>",
                        "version": "<string>"
                      }
                    ],
                    "configurationProfiles": [
                      {
                        "displayName": "<string>",
                        "version": "<string>",
                        "uuid": "<string>",
                        "identifier": "<string>"
                      },
                      {
                        "displayName": "<string>",
                        "version": "<string>",
                        "uuid": "<string>",
                        "identifier": "<string>"
                      }
                    ],
                    "provisioningProfiles": [
                      {
                        "displayName": "<string>",
                        "uuid": "<string>",
                        "expirationDate": "<dateTime>"
                      },
                      {
                        "displayName": "<string>",
                        "uuid": "<string>",
                        "expirationDate": "<dateTime>"
                      }
                    ],
                    "attachments": [
                      {
                        "name": "<string>",
                        "id": "<string>"
                      },
                      {
                        "name": "<string>",
                        "id": "<string>"
                      }
                    ]
                  },
                  "tvos": {
                    "model": "<string>",
                    "modelIdentifier": "<string>",
                    "modelNumber": "<string>",
                    "supervised": "<boolean>",
                    "airplayPassword": "<string>",
                    "deviceId": "<string>",
                    "locales": "<string>",
                    "purchasing": {
                      "purchased": "<boolean>",
                      "leased": "<boolean>",
                      "poNumber": "<string>",
                      "vendor": "<string>",
                      "appleCareId": "<string>",
                      "purchasePrice": "<string>",
                      "purchasingAccount": "<string>",
                      "poDate": "<dateTime>",
                      "warrantyExpiresDate": "<dateTime>",
                      "leaseExpiresDate": "<dateTime>",
                      "lifeExpectancy": "<integer>",
                      "purchasingContact": "<string>"
                    },
                    "configurationProfiles": [
                      {
                        "displayName": "<string>",
                        "version": "<string>",
                        "uuid": "<string>",
                        "identifier": "<string>"
                      },
                      {
                        "displayName": "<string>",
                        "version": "<string>",
                        "uuid": "<string>",
                        "identifier": "<string>"
                      }
                    ],
                    "certificates": [
                      {
                        "commonName": "<string>",
                        "identity": "<boolean>",
                        "expirationDateEpoch": "<dateTime>",
                        "subjectName": "<string>",
                        "serialNumber": "<string>",
                        "sha1Fingerprint": "<string>",
                        "issuedDateEpoch": "<string>",
                        "certificateStatus": "EXPIRED",
                        "lifecycleStatus": "ACTIVE"
                      },
                      {
                        "commonName": "<string>",
                        "identity": "<boolean>",
                        "expirationDateEpoch": "<dateTime>",
                        "subjectName": "<string>",
                        "serialNumber": "<string>",
                        "sha1Fingerprint": "<string>",
                        "issuedDateEpoch": "<string>",
                        "certificateStatus": "REVOKED",
                        "lifecycleStatus": "INACTIVE"
                      }
                    ]
                  },
                  "watchos": {
                    "model": "<string>",
                    "modelIdentifier": "<string>",
                    "modelNumber": "<string>",
                    "supervised": "<boolean>",
                    "batteryLevel": "<integer>",
                    "capacityMb": "<integer>",
                    "availableMb": "<integer>",
                    "percentageUsed": "<integer>",
                    "deviceLocatorServiceEnabled": "<boolean>",
                    "doNotDisturbEnabled": "<boolean>",
                    "lastCloudBackupTimestamp": "<dateTime>",
                    "iTunesStoreAccountActive": "<boolean>",
                    "bleCapable": "<boolean>",
                    "security": {
                      "dataProtected": "<boolean>",
                      "blockLevelEncryptionCapable": "<boolean>",
                      "fileLevelEncryptionCapable": "<boolean>",
                      "passcodePresent": "<boolean>",
                      "passcodeCompliant": "<boolean>",
                      "passcodeCompliantWithProfile": "<boolean>",
                      "hardwareEncryption": "<integer>",
                      "activationLockEnabled": "<boolean>",
                      "jailBreakDetected": "<boolean>"
                    },
                    "applications": [
                      {
                        "identifier": "<string>",
                        "name": "<string>",
                        "version": "<string>",
                        "shortVersion": "<string>"
                      },
                      {
                        "identifier": "<string>",
                        "name": "<string>",
                        "version": "<string>",
                        "shortVersion": "<string>"
                      }
                    ],
                    "certificates": [
                      {
                        "commonName": "<string>",
                        "identity": "<boolean>",
                        "expirationDateEpoch": "<dateTime>",
                        "subjectName": "<string>",
                        "serialNumber": "<string>",
                        "sha1Fingerprint": "<string>",
                        "issuedDateEpoch": "<string>",
                        "certificateStatus": "PENDING_REVOKE",
                        "lifecycleStatus": "ACTIVE"
                      },
                      {
                        "commonName": "<string>",
                        "identity": "<boolean>",
                        "expirationDateEpoch": "<dateTime>",
                        "subjectName": "<string>",
                        "serialNumber": "<string>",
                        "sha1Fingerprint": "<string>",
                        "issuedDateEpoch": "<string>",
                        "certificateStatus": "ISSUED",
                        "lifecycleStatus": "INACTIVE"
                      }
                    ],
                    "configurationProfiles": [
                      {
                        "displayName": "<string>",
                        "version": "<string>",
                        "uuid": "<string>",
                        "identifier": "<string>"
                      },
                      {
                        "displayName": "<string>",
                        "version": "<string>",
                        "uuid": "<string>",
                        "identifier": "<string>"
                      }
                    ],
                    "provisioningProfiles": [
                      {
                        "displayName": "<string>",
                        "uuid": "<string>",
                        "expirationDate": "<dateTime>"
                      },
                      {
                        "displayName": "<string>",
                        "uuid": "<string>",
                        "expirationDate": "<dateTime>"
                      }
                    ],
                    "attachments": [
                      {
                        "name": "<string>",
                        "id": "<string>"
                      },
                      {
                        "name": "<string>",
                        "id": "<string>"
                      }
                    ]
                  },
                  "visionos": {
                    "model": "<string>",
                    "modelIdentifier": "<string>",
                    "modelNumber": "<string>",
                    "supervised": "<boolean>",
                    "batteryLevel": "<integer>",
                    "lastBackupTimestamp": "<dateTime>",
                    "capacityMb": "<integer>",
                    "availableMb": "<integer>",
                    "percentageUsed": "<integer>",
                    "shared": "<boolean>",
                    "deviceLocatorServiceEnabled": "<boolean>",
                    "doNotDisturbEnabled": "<boolean>",
                    "cloudBackupEnabled": "<boolean>",
                    "lastCloudBackupTimestamp": "<dateTime>",
                    "locationServicesEnabled": "<boolean>",
                    "iTunesStoreAccountActive": "<boolean>",
                    "bleCapable": "<boolean>",
                    "computer": {
                      "id": "<string>",
                      "name": "<string>"
                    },
                    "purchasing": {
                      "purchased": "<boolean>",
                      "leased": "<boolean>",
                      "poNumber": "<string>",
                      "vendor": "<string>",
                      "appleCareId": "<string>",
                      "purchasePrice": "<string>",
                      "purchasingAccount": "<string>",
                      "poDate": "<dateTime>",
                      "warrantyExpiresDate": "<dateTime>",
                      "leaseExpiresDate": "<dateTime>",
                      "lifeExpectancy": "<integer>",
                      "purchasingContact": "<string>"
                    },
                    "security": {
                      "dataProtected": "<boolean>",
                      "blockLevelEncryptionCapable": "<boolean>",
                      "fileLevelEncryptionCapable": "<boolean>",
                      "passcodePresent": "<boolean>",
                      "passcodeCompliant": "<boolean>",
                      "passcodeCompliantWithProfile": "<boolean>",
                      "hardwareEncryption": "<integer>",
                      "activationLockEnabled": "<boolean>",
                      "jailBreakDetected": "<boolean>"
                    },
                    "network": {
                      "cellularTechnology": "<string>",
                      "voiceRoamingEnabled": "<boolean>",
                      "imei": "<string>",
                      "iccid": "<string>",
                      "meid": "<string>",
                      "eid": "<string>",
                      "carrierSettingsVersion": "<string>",
                      "currentCarrierNetwork": "<string>",
                      "currentMobileCountryCode": "<string>",
                      "currentMobileNetworkCode": "<string>",
                      "homeCarrierNetwork": "<string>",
                      "homeMobileCountryCode": "<string>",
                      "homeMobileNetworkCode": "<string>",
                      "dataRoamingEnabled": "<boolean>",
                      "roaming": "<boolean>",
                      "personalHotspotEnabled": "<boolean>",
                      "phoneNumber": "<string>"
                    },
                    "serviceSubscriptions": [
                      {
                        "carrierSettingsVersion": "<string>",
                        "currentCarrierNetwork": "<string>",
                        "currentMobileCountryCode": "<string>",
                        "currentMobileNetworkCode": "<string>",
                        "subscriberCarrierNetwork": "<string>",
                        "eid": "<string>",
                        "iccid": "<string>",
                        "imei": "<string>",
                        "dataPreferred": "<boolean>",
                        "roaming": "<boolean>",
                        "voicePreferred": "<boolean>",
                        "label": "<string>",
                        "labelId": "<string>",
                        "meid": "<string>",
                        "phoneNumber": "<string>",
                        "slot": "<string>"
                      },
                      {
                        "carrierSettingsVersion": "<string>",
                        "currentCarrierNetwork": "<string>",
                        "currentMobileCountryCode": "<string>",
                        "currentMobileNetworkCode": "<string>",
                        "subscriberCarrierNetwork": "<string>",
                        "eid": "<string>",
                        "iccid": "<string>",
                        "imei": "<string>",
                        "dataPreferred": "<boolean>",
                        "roaming": "<boolean>",
                        "voicePreferred": "<boolean>",
                        "label": "<string>",
                        "labelId": "<string>",
                        "meid": "<string>",
                        "phoneNumber": "<string>",
                        "slot": "<string>"
                      }
                    ],
                    "applications": [
                      {
                        "identifier": "<string>",
                        "name": "<string>",
                        "version": "<string>",
                        "shortVersion": "<string>"
                      },
                      {
                        "identifier": "<string>",
                        "name": "<string>",
                        "version": "<string>",
                        "shortVersion": "<string>"
                      }
                    ],
                    "certificates": [
                      {
                        "commonName": "<string>",
                        "identity": "<boolean>",
                        "expirationDateEpoch": "<dateTime>",
                        "subjectName": "<string>",
                        "serialNumber": "<string>",
                        "sha1Fingerprint": "<string>",
                        "issuedDateEpoch": "<string>",
                        "certificateStatus": "EXPIRING",
                        "lifecycleStatus": "ACTIVE"
                      },
                      {
                        "commonName": "<string>",
                        "identity": "<boolean>",
                        "expirationDateEpoch": "<dateTime>",
                        "subjectName": "<string>",
                        "serialNumber": "<string>",
                        "sha1Fingerprint": "<string>",
                        "issuedDateEpoch": "<string>",
                        "certificateStatus": "REVOKED",
                        "lifecycleStatus": "INACTIVE"
                      }
                    ],
                    "ebooks": [
                      {
                        "author": "<string>",
                        "title": "<string>",
                        "version": "<string>"
                      },
                      {
                        "author": "<string>",
                        "title": "<string>",
                        "version": "<string>"
                      }
                    ],
                    "configurationProfiles": [
                      {
                        "displayName": "<string>",
                        "version": "<string>",
                        "uuid": "<string>",
                        "identifier": "<string>"
                      },
                      {
                        "displayName": "<string>",
                        "version": "<string>",
                        "uuid": "<string>",
                        "identifier": "<string>"
                      }
                    ],
                    "provisioningProfiles": [
                      {
                        "displayName": "<string>",
                        "uuid": "<string>",
                        "expirationDate": "<dateTime>"
                      },
                      {
                        "displayName": "<string>",
                        "uuid": "<string>",
                        "expirationDate": "<dateTime>"
                      }
                    ],
                    "attachments": [
                      {
                        "name": "<string>",
                        "id": "<string>"
                      },
                      {
                        "name": "<string>",
                        "id": "<string>"
                      }
                    ]
                  },
                  "managementId": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_mobile-devices_id_detail"
      }
    },
    "/v2/mobile-devices/{id}/paired-devices": {
      "get": {
        "tags": [
          "v2 > mobile-devices > {id} > paired-devices"
        ],
        "summary": "Return paginated Mobile Device Inventory records of all paired devices for the device\n",
        "description": "Return paginated Mobile Device Inventory records of all paired devices for the device",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "section",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "section of mobile device details, if not specified, Paired Devices section data is returned. Multiple section parameters are supported, e.g. section=GENERAL&amp;section=HARDWARE",
            "example": "GENERAL"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort\nis displayName:asc. Multiple sort criteria are supported and must be separated with\na comma.\n  \nFields allowed in the sort: `airPlayPassword`, `appAnalyticsEnabled`, `assetTag`, `availableSpaceMb`,\n`batteryLevel`, `bluetoothLowEnergyCapable`, `bluetoothMacAddress`, `capacityMb`,\n`lostModeEnabledDate`, `declarativeDeviceManagementEnabled`, `deviceId`, `deviceLocatorServiceEnabled`,\n`devicePhoneNumber`, `diagnosticAndUsageReportingEnabled`, `displayName`, `doNotDisturbEnabled`,\n`enrollmentSessionTokenValid`, `osBuild`, `osSupplementalBuildVersion`, `osVersion`, `osRapidSecurityResponse`,\n`ipAddress`, `itunesStoreAccountActive`, `mobileDeviceId`, `languages`, `lastEnrolledDate`, `lastCloudBackupDate`,\n`lastInventoryUpdateDate`, `locales`, `lostModeEnabled`,\n`managed`, `mdmProfileExpirationDate`, `model`, `modelIdentifier`, `modelNumber`, `modemFirmwareVersion`,\n`serialNumber`, `supervised`, `timeZone`, `udid`, `usedSpacePercentage`, `wifiMacAddress`,\n`deviceOwnershipType`, `building`, `department`, `emailAddress`,\n`fullName`, `userPhoneNumber`, `position`, `room`,\n`username`, `appleCareId`, `leaseExpirationDate`,`lifeExpectancyYears`,\n`poDate`, `poNumber`, `purchasePrice`, `purchasedOrLeased`,\n`purchasingAccount`, `purchasingContact`, `vendor`, `warrantyExpirationDate`,\n`activationLockEnabled`, `blockEncryptionCapable`, `dataProtection`, `fileEncryptionCapable`,\n`hardwareEncryptionSupported`, `jailbreakStatus`, `passcodeCompliant`, `passcodeCompliantWithProfile`,\n`passcodeLockGracePeriodEnforcedSeconds`, `passcodePresent`, `personalDeviceProfileCurrent`, `carrierSettingsVersion`,\n`cellularTechnology`, `currentCarrierNetwork`, `currentMobileCountryCode`, `currentMobileNetworkCode`,\n`dataRoamingEnabled`, `eid`, `network`, `homeMobileCountryCode`,\n`homeMobileNetworkCode`, `iccid`, `imei`, `imei2`,\n`meid`, `personalHotspotEnabled`, `voiceRoamingEnabled`, `roaming`\n          \nExample: `sort=displayName:desc,username:asc`\n",
            "example": "displayName:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter mobile device collection.\nDefault filter is empty query - returning all results for the requested page.\n          \nFields allowed in the query: `airPlayPassword`, `appAnalyticsEnabled`, `assetTag`, `availableSpaceMb`,\n`batteryLevel`, `bluetoothLowEnergyCapable`, `bluetoothMacAddress`, `capacityMb`,\n`declarativeDeviceManagementEnabled`, `deviceId`, `deviceLocatorServiceEnabled`, `devicePhoneNumber`,\n`diagnosticAndUsageReportingEnabled`, `displayName`, `doNotDisturbEnabled`,\n`osBuild`, `osSupplementalBuildVersion`, `osVersion`, `osRapidSecurityResponse`,\n`ipAddress`, `itunesStoreAccountActive`, `mobileDeviceId`, `languages`, `lastInventoryUpdateDate`, `locales`,\n`lostModeEnabled`, `managed`, `model`,\n`modelIdentifier`, `modelNumber`, `modemFirmwareVersion`, `serialNumber`, `supervised`, `timeZone`, `udid`, `usedSpacePercentage`,\n`wifiMacAddress`, `building`, `department`, `emailAddress`,\n`fullName`, `userPhoneNumber`, `position`, `room`,\n`username`, `appleCareId`, `lifeExpectancyYears`, `poNumber`,\n`purchasePrice`, `purchasedOrLeased`, `purchasingAccount`, `purchasingContact`,\n`vendor`, `activationLockEnabled`, `blockEncryptionCapable`, `dataProtection`,\n`fileEncryptionCapable`, `passcodeCompliant`, `passcodeCompliantWithProfile`, `passcodeLockGracePeriodEnforcedSeconds`,\n`passcodePresent`, `personalDeviceProfileCurrent`, `carrierSettingsVersion`, `currentCarrierNetwork`,\n`currentMobileCountryCode`, `currentMobileNetworkCode`, `dataRoamingEnabled`, `eid`,\n`network`, `homeMobileCountryCode`, `homeMobileNetworkCode`, `iccid`,\n`imei`, `imei2`, `meid`, `personalHotspotEnabled`,\n`roaming`\n          \nThis param can be combined with paging and sorting.\nExample: `filter=displayName==\"iPad\"`\n"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of mobile device record",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "deviceType": "<string>",
                      "mobileDeviceId": "<string>",
                      "hardware": {
                        "capacityMb": "<integer>",
                        "availableSpaceMb": "<integer>",
                        "usedSpacePercentage": "<integer>",
                        "batteryLevel": "<integer>",
                        "serialNumber": "<string>",
                        "wifiMacAddress": "<string>",
                        "bluetoothMacAddress": "<string>",
                        "modemFirmwareVersion": "<string>",
                        "model": "<string>",
                        "modelIdentifier": "<string>",
                        "modelNumber": "<string>",
                        "bluetoothLowEnergyCapable": "<boolean>",
                        "deviceId": "<string>",
                        "extensionAttributes": [
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "STRING",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          },
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "STRING",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          }
                        ]
                      },
                      "userAndLocation": {
                        "username": "<string>",
                        "realName": "<string>",
                        "emailAddress": "<string>",
                        "position": "<string>",
                        "phoneNumber": "<string>",
                        "departmentId": "<string>",
                        "buildingId": "<string>",
                        "room": "<string>",
                        "building": "<string>",
                        "department": "<string>",
                        "extensionAttributes": [
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "INTEGER",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          },
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "INTEGER",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          }
                        ]
                      },
                      "applications": [
                        {
                          "identifier": "<string>",
                          "name": "<string>",
                          "version": "<string>",
                          "shortVersion": "<string>",
                          "managementStatus": "<string>",
                          "validationStatus": "<boolean>",
                          "bundleSize": "<string>",
                          "dynamicSize": "<string>"
                        },
                        {
                          "identifier": "<string>",
                          "name": "<string>",
                          "version": "<string>",
                          "shortVersion": "<string>",
                          "managementStatus": "<string>",
                          "validationStatus": "<boolean>",
                          "bundleSize": "<string>",
                          "dynamicSize": "<string>"
                        }
                      ],
                      "certificates": [
                        {
                          "commonName": "<string>",
                          "identity": "<boolean>",
                          "expirationDate": "<dateTime>"
                        },
                        {
                          "commonName": "<string>",
                          "identity": "<boolean>",
                          "expirationDate": "<dateTime>"
                        }
                      ],
                      "profiles": [
                        {
                          "displayName": "<string>",
                          "version": "<string>",
                          "uuid": "<string>",
                          "identifier": "<string>",
                          "removable": "<boolean>",
                          "lastInstalled": "<dateTime>"
                        },
                        {
                          "displayName": "<string>",
                          "version": "<string>",
                          "uuid": "<string>",
                          "identifier": "<string>",
                          "removable": "<boolean>",
                          "lastInstalled": "<dateTime>"
                        }
                      ],
                      "extensionAttributes": [
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "type": "DATE",
                          "value": [
                            "<string>",
                            "<string>"
                          ],
                          "extensionAttributeCollectionAllowed": "<boolean>",
                          "inventoryDisplay": "<string>"
                        },
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "type": "DATE",
                          "value": [
                            "<string>",
                            "<string>"
                          ],
                          "extensionAttributeCollectionAllowed": "<boolean>",
                          "inventoryDisplay": "<string>"
                        }
                      ],
                      "general": {
                        "udid": "<string>",
                        "displayName": "<string>",
                        "assetTag": "<string>",
                        "siteId": "<string>",
                        "lastInventoryUpdateDate": "<dateTime>",
                        "osVersion": "<string>",
                        "osRapidSecurityResponse": "<string>",
                        "osBuild": "<string>",
                        "osSupplementalBuildVersion": "<string>",
                        "softwareUpdateDeviceId": "<string>",
                        "ipAddress": "<string>",
                        "managed": "<boolean>",
                        "supervised": "<boolean>",
                        "deviceOwnershipType": "AccountDrivenUserEnrollment",
                        "enrollmentMethodPrestage": {
                          "mobileDevicePrestageId": "<string>",
                          "profileName": "<string>"
                        },
                        "enrollmentSessionTokenValid": "<boolean>",
                        "lastEnrolledDate": "<dateTime>",
                        "mdmProfileExpirationDate": "<dateTime>",
                        "timeZone": "<string>",
                        "declarativeDeviceManagementEnabled": "<boolean>",
                        "extensionAttributes": [
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "INTEGER",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          },
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "DATE",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          }
                        ],
                        "sharedIpad": "<boolean>",
                        "diagnosticAndUsageReportingEnabled": "<boolean>",
                        "appAnalyticsEnabled": "<boolean>",
                        "residentUsers": "<integer>",
                        "quotaSize": "<integer>",
                        "temporarySessionOnly": "<boolean>",
                        "temporarySessionTimeout": "<integer>",
                        "userSessionTimeout": "<integer>",
                        "syncedToComputer": "<integer>",
                        "maximumSharediPadUsersStored": "<integer>",
                        "lastBackupDate": "<dateTime>",
                        "deviceLocatorServiceEnabled": "<boolean>",
                        "doNotDisturbEnabled": "<boolean>",
                        "cloudBackupEnabled": "<boolean>",
                        "lastCloudBackupDate": "<dateTime>",
                        "locationServicesForSelfServiceMobileEnabled": "<boolean>",
                        "itunesStoreAccountActive": "<boolean>",
                        "exchangeDeviceId": "<string>",
                        "tethered": "<boolean>"
                      },
                      "security": {
                        "dataProtected": "<boolean>",
                        "blockLevelEncryptionCapable": "<boolean>",
                        "fileLevelEncryptionCapable": "<boolean>",
                        "passcodePresent": "<boolean>",
                        "passcodeCompliant": "<boolean>",
                        "passcodeCompliantWithProfile": "<boolean>",
                        "hardwareEncryption": "<integer>",
                        "activationLockEnabled": "<boolean>",
                        "jailBreakDetected": "<boolean>",
                        "passcodeLockGracePeriodEnforcedSeconds": "<integer>",
                        "personalDeviceProfileCurrent": "<boolean>",
                        "lostModeEnabled": "<boolean>",
                        "lostModePersistent": "<boolean>",
                        "lostModeMessage": "<string>",
                        "lostModePhoneNumber": "<string>",
                        "lostModeFootnote": "<string>",
                        "lostModeLocation": {
                          "lastLocationUpdate": "<dateTime>",
                          "lostModeLocationHorizontalAccuracyMeters": "<number>",
                          "lostModeLocationVerticalAccuracyMeters": "<number>",
                          "lostModeLocationAltitudeMeters": "<number>",
                          "lostModeLocationSpeedMetersPerSecond": "<number>",
                          "lostModeLocationCourseDegrees": "<number>",
                          "lostModeLocationTimestamp": "<string>"
                        }
                      },
                      "ebooks": [
                        {
                          "author": "<string>",
                          "title": "<string>",
                          "version": "<string>",
                          "kind": "<string>",
                          "managementState": "<string>"
                        },
                        {
                          "author": "<string>",
                          "title": "<string>",
                          "version": "<string>",
                          "kind": "<string>",
                          "managementState": "<string>"
                        }
                      ],
                      "network": {
                        "cellularTechnology": "<string>",
                        "voiceRoamingEnabled": "<boolean>",
                        "imei": "<string>",
                        "iccid": "<string>",
                        "meid": "<string>",
                        "eid": "<string>",
                        "carrierSettingsVersion": "<string>",
                        "currentCarrierNetwork": "<string>",
                        "currentMobileCountryCode": "<string>",
                        "currentMobileNetworkCode": "<string>",
                        "homeCarrierNetwork": "<string>",
                        "homeMobileCountryCode": "<string>",
                        "homeMobileNetworkCode": "<string>",
                        "dataRoamingEnabled": "<boolean>",
                        "roaming": "<boolean>",
                        "personalHotspotEnabled": "<boolean>",
                        "phoneNumber": "<string>"
                      },
                      "serviceSubscriptions": [
                        {
                          "carrierSettingsVersion": "<string>",
                          "currentCarrierNetwork": "<string>",
                          "currentMobileCountryCode": "<string>",
                          "currentMobileNetworkCode": "<string>",
                          "subscriberCarrierNetwork": "<string>",
                          "eid": "<string>",
                          "iccid": "<string>",
                          "imei": "<string>",
                          "dataPreferred": "<boolean>",
                          "roaming": "<boolean>",
                          "voicePreferred": "<boolean>",
                          "label": "<string>",
                          "labelId": "<string>",
                          "meid": "<string>",
                          "phoneNumber": "<string>",
                          "slot": "<string>"
                        },
                        {
                          "carrierSettingsVersion": "<string>",
                          "currentCarrierNetwork": "<string>",
                          "currentMobileCountryCode": "<string>",
                          "currentMobileNetworkCode": "<string>",
                          "subscriberCarrierNetwork": "<string>",
                          "eid": "<string>",
                          "iccid": "<string>",
                          "imei": "<string>",
                          "dataPreferred": "<boolean>",
                          "roaming": "<boolean>",
                          "voicePreferred": "<boolean>",
                          "label": "<string>",
                          "labelId": "<string>",
                          "meid": "<string>",
                          "phoneNumber": "<string>",
                          "slot": "<string>"
                        }
                      ],
                      "provisioningProfiles": [
                        {
                          "displayName": "<string>",
                          "uuid": "<string>",
                          "expirationDate": "<dateTime>"
                        },
                        {
                          "displayName": "<string>",
                          "uuid": "<string>",
                          "expirationDate": "<dateTime>"
                        }
                      ],
                      "sharedUsers": [
                        {
                          "managedAppleId": "<string>",
                          "loggedIn": "<boolean>",
                          "dataToSync": "<boolean>"
                        },
                        {
                          "managedAppleId": "<string>",
                          "loggedIn": "<boolean>",
                          "dataToSync": "<boolean>"
                        }
                      ],
                      "purchasing": {
                        "purchased": "<boolean>",
                        "leased": "<boolean>",
                        "poNumber": "<string>",
                        "vendor": "<string>",
                        "appleCareId": "<string>",
                        "purchasePrice": "<string>",
                        "purchasingAccount": "<string>",
                        "poDate": "<dateTime>",
                        "warrantyExpiresDate": "<dateTime>",
                        "leaseExpiresDate": "<dateTime>",
                        "lifeExpectancy": "<integer>",
                        "purchasingContact": "<string>",
                        "extensionAttributes": [
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "DATE",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          },
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "DATE",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          }
                        ]
                      },
                      "userProfiles": [
                        {
                          "displayName": "<string>",
                          "version": "<string>",
                          "uuid": "<string>",
                          "identifier": "<string>",
                          "removable": "<boolean>",
                          "lastInstalled": "<dateTime>",
                          "username": "<string>"
                        },
                        {
                          "displayName": "<string>",
                          "version": "<string>",
                          "uuid": "<string>",
                          "identifier": "<string>",
                          "removable": "<boolean>",
                          "lastInstalled": "<dateTime>",
                          "username": "<string>"
                        }
                      ]
                    },
                    {
                      "deviceType": "<string>",
                      "mobileDeviceId": "<string>",
                      "hardware": {
                        "capacityMb": "<integer>",
                        "availableSpaceMb": "<integer>",
                        "usedSpacePercentage": "<integer>",
                        "batteryLevel": "<integer>",
                        "serialNumber": "<string>",
                        "wifiMacAddress": "<string>",
                        "bluetoothMacAddress": "<string>",
                        "modemFirmwareVersion": "<string>",
                        "model": "<string>",
                        "modelIdentifier": "<string>",
                        "modelNumber": "<string>",
                        "bluetoothLowEnergyCapable": "<boolean>",
                        "deviceId": "<string>",
                        "extensionAttributes": [
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "STRING",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          },
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "STRING",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          }
                        ]
                      },
                      "userAndLocation": {
                        "username": "<string>",
                        "realName": "<string>",
                        "emailAddress": "<string>",
                        "position": "<string>",
                        "phoneNumber": "<string>",
                        "departmentId": "<string>",
                        "buildingId": "<string>",
                        "room": "<string>",
                        "building": "<string>",
                        "department": "<string>",
                        "extensionAttributes": [
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "DATE",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          },
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "INTEGER",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          }
                        ]
                      },
                      "applications": [
                        {
                          "identifier": "<string>",
                          "name": "<string>",
                          "version": "<string>",
                          "shortVersion": "<string>",
                          "managementStatus": "<string>",
                          "validationStatus": "<boolean>",
                          "bundleSize": "<string>",
                          "dynamicSize": "<string>"
                        },
                        {
                          "identifier": "<string>",
                          "name": "<string>",
                          "version": "<string>",
                          "shortVersion": "<string>",
                          "managementStatus": "<string>",
                          "validationStatus": "<boolean>",
                          "bundleSize": "<string>",
                          "dynamicSize": "<string>"
                        }
                      ],
                      "certificates": [
                        {
                          "commonName": "<string>",
                          "identity": "<boolean>",
                          "expirationDate": "<dateTime>"
                        },
                        {
                          "commonName": "<string>",
                          "identity": "<boolean>",
                          "expirationDate": "<dateTime>"
                        }
                      ],
                      "profiles": [
                        {
                          "displayName": "<string>",
                          "version": "<string>",
                          "uuid": "<string>",
                          "identifier": "<string>",
                          "removable": "<boolean>",
                          "lastInstalled": "<dateTime>"
                        },
                        {
                          "displayName": "<string>",
                          "version": "<string>",
                          "uuid": "<string>",
                          "identifier": "<string>",
                          "removable": "<boolean>",
                          "lastInstalled": "<dateTime>"
                        }
                      ],
                      "extensionAttributes": [
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "type": "INTEGER",
                          "value": [
                            "<string>",
                            "<string>"
                          ],
                          "extensionAttributeCollectionAllowed": "<boolean>",
                          "inventoryDisplay": "<string>"
                        },
                        {
                          "id": "<string>",
                          "name": "<string>",
                          "type": "DATE",
                          "value": [
                            "<string>",
                            "<string>"
                          ],
                          "extensionAttributeCollectionAllowed": "<boolean>",
                          "inventoryDisplay": "<string>"
                        }
                      ],
                      "general": {
                        "udid": "<string>",
                        "displayName": "<string>",
                        "assetTag": "<string>",
                        "siteId": "<string>",
                        "lastInventoryUpdateDate": "<dateTime>",
                        "osVersion": "<string>",
                        "osRapidSecurityResponse": "<string>",
                        "osBuild": "<string>",
                        "osSupplementalBuildVersion": "<string>",
                        "softwareUpdateDeviceId": "<string>",
                        "ipAddress": "<string>",
                        "managed": "<boolean>",
                        "supervised": "<boolean>",
                        "deviceOwnershipType": "AccountDrivenUserEnrollment",
                        "enrollmentMethodPrestage": {
                          "mobileDevicePrestageId": "<string>",
                          "profileName": "<string>"
                        },
                        "enrollmentSessionTokenValid": "<boolean>",
                        "lastEnrolledDate": "<dateTime>",
                        "mdmProfileExpirationDate": "<dateTime>",
                        "timeZone": "<string>",
                        "declarativeDeviceManagementEnabled": "<boolean>",
                        "extensionAttributes": [
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "STRING",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          },
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "DATE",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          }
                        ],
                        "sharedIpad": "<boolean>",
                        "diagnosticAndUsageReportingEnabled": "<boolean>",
                        "appAnalyticsEnabled": "<boolean>",
                        "residentUsers": "<integer>",
                        "quotaSize": "<integer>",
                        "temporarySessionOnly": "<boolean>",
                        "temporarySessionTimeout": "<integer>",
                        "userSessionTimeout": "<integer>",
                        "syncedToComputer": "<integer>",
                        "maximumSharediPadUsersStored": "<integer>",
                        "lastBackupDate": "<dateTime>",
                        "deviceLocatorServiceEnabled": "<boolean>",
                        "doNotDisturbEnabled": "<boolean>",
                        "cloudBackupEnabled": "<boolean>",
                        "lastCloudBackupDate": "<dateTime>",
                        "locationServicesForSelfServiceMobileEnabled": "<boolean>",
                        "itunesStoreAccountActive": "<boolean>",
                        "exchangeDeviceId": "<string>",
                        "tethered": "<boolean>"
                      },
                      "security": {
                        "dataProtected": "<boolean>",
                        "blockLevelEncryptionCapable": "<boolean>",
                        "fileLevelEncryptionCapable": "<boolean>",
                        "passcodePresent": "<boolean>",
                        "passcodeCompliant": "<boolean>",
                        "passcodeCompliantWithProfile": "<boolean>",
                        "hardwareEncryption": "<integer>",
                        "activationLockEnabled": "<boolean>",
                        "jailBreakDetected": "<boolean>",
                        "passcodeLockGracePeriodEnforcedSeconds": "<integer>",
                        "personalDeviceProfileCurrent": "<boolean>",
                        "lostModeEnabled": "<boolean>",
                        "lostModePersistent": "<boolean>",
                        "lostModeMessage": "<string>",
                        "lostModePhoneNumber": "<string>",
                        "lostModeFootnote": "<string>",
                        "lostModeLocation": {
                          "lastLocationUpdate": "<dateTime>",
                          "lostModeLocationHorizontalAccuracyMeters": "<number>",
                          "lostModeLocationVerticalAccuracyMeters": "<number>",
                          "lostModeLocationAltitudeMeters": "<number>",
                          "lostModeLocationSpeedMetersPerSecond": "<number>",
                          "lostModeLocationCourseDegrees": "<number>",
                          "lostModeLocationTimestamp": "<string>"
                        }
                      },
                      "ebooks": [
                        {
                          "author": "<string>",
                          "title": "<string>",
                          "version": "<string>",
                          "kind": "<string>",
                          "managementState": "<string>"
                        },
                        {
                          "author": "<string>",
                          "title": "<string>",
                          "version": "<string>",
                          "kind": "<string>",
                          "managementState": "<string>"
                        }
                      ],
                      "network": {
                        "cellularTechnology": "<string>",
                        "voiceRoamingEnabled": "<boolean>",
                        "imei": "<string>",
                        "iccid": "<string>",
                        "meid": "<string>",
                        "eid": "<string>",
                        "carrierSettingsVersion": "<string>",
                        "currentCarrierNetwork": "<string>",
                        "currentMobileCountryCode": "<string>",
                        "currentMobileNetworkCode": "<string>",
                        "homeCarrierNetwork": "<string>",
                        "homeMobileCountryCode": "<string>",
                        "homeMobileNetworkCode": "<string>",
                        "dataRoamingEnabled": "<boolean>",
                        "roaming": "<boolean>",
                        "personalHotspotEnabled": "<boolean>",
                        "phoneNumber": "<string>"
                      },
                      "serviceSubscriptions": [
                        {
                          "carrierSettingsVersion": "<string>",
                          "currentCarrierNetwork": "<string>",
                          "currentMobileCountryCode": "<string>",
                          "currentMobileNetworkCode": "<string>",
                          "subscriberCarrierNetwork": "<string>",
                          "eid": "<string>",
                          "iccid": "<string>",
                          "imei": "<string>",
                          "dataPreferred": "<boolean>",
                          "roaming": "<boolean>",
                          "voicePreferred": "<boolean>",
                          "label": "<string>",
                          "labelId": "<string>",
                          "meid": "<string>",
                          "phoneNumber": "<string>",
                          "slot": "<string>"
                        },
                        {
                          "carrierSettingsVersion": "<string>",
                          "currentCarrierNetwork": "<string>",
                          "currentMobileCountryCode": "<string>",
                          "currentMobileNetworkCode": "<string>",
                          "subscriberCarrierNetwork": "<string>",
                          "eid": "<string>",
                          "iccid": "<string>",
                          "imei": "<string>",
                          "dataPreferred": "<boolean>",
                          "roaming": "<boolean>",
                          "voicePreferred": "<boolean>",
                          "label": "<string>",
                          "labelId": "<string>",
                          "meid": "<string>",
                          "phoneNumber": "<string>",
                          "slot": "<string>"
                        }
                      ],
                      "provisioningProfiles": [
                        {
                          "displayName": "<string>",
                          "uuid": "<string>",
                          "expirationDate": "<dateTime>"
                        },
                        {
                          "displayName": "<string>",
                          "uuid": "<string>",
                          "expirationDate": "<dateTime>"
                        }
                      ],
                      "sharedUsers": [
                        {
                          "managedAppleId": "<string>",
                          "loggedIn": "<boolean>",
                          "dataToSync": "<boolean>"
                        },
                        {
                          "managedAppleId": "<string>",
                          "loggedIn": "<boolean>",
                          "dataToSync": "<boolean>"
                        }
                      ],
                      "purchasing": {
                        "purchased": "<boolean>",
                        "leased": "<boolean>",
                        "poNumber": "<string>",
                        "vendor": "<string>",
                        "appleCareId": "<string>",
                        "purchasePrice": "<string>",
                        "purchasingAccount": "<string>",
                        "poDate": "<dateTime>",
                        "warrantyExpiresDate": "<dateTime>",
                        "leaseExpiresDate": "<dateTime>",
                        "lifeExpectancy": "<integer>",
                        "purchasingContact": "<string>",
                        "extensionAttributes": [
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "DATE",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          },
                          {
                            "id": "<string>",
                            "name": "<string>",
                            "type": "STRING",
                            "value": [
                              "<string>",
                              "<string>"
                            ],
                            "extensionAttributeCollectionAllowed": "<boolean>",
                            "inventoryDisplay": "<string>"
                          }
                        ]
                      },
                      "userProfiles": [
                        {
                          "displayName": "<string>",
                          "version": "<string>",
                          "uuid": "<string>",
                          "identifier": "<string>",
                          "removable": "<boolean>",
                          "lastInstalled": "<dateTime>",
                          "username": "<string>"
                        },
                        {
                          "displayName": "<string>",
                          "version": "<string>",
                          "uuid": "<string>",
                          "identifier": "<string>",
                          "removable": "<boolean>",
                          "lastInstalled": "<dateTime>",
                          "username": "<string>"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_mobile-devices_id_paired-devices"
      }
    },
    "/v2/mobile-devices/{id}/unmanage": {
      "post": {
        "tags": [
          "v2 > mobile-devices > {id} > unmanage"
        ],
        "summary": "Unmanage a Mobile Device\n",
        "description": "Unmanage a Mobile Device",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Id of the mobile device to remove the MDM profile from",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "commandUuid": "<string>",
                  "deviceId": "<string>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_mobile-devices_id_unmanage"
      }
    },
    "/v2/mobile-devices/{id}": {
      "get": {
        "tags": [
          "v2 > mobile-devices > {id}"
        ],
        "summary": "Get Mobile Device\n",
        "description": "Get MobileDevice",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of mobile device record",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "name": "<string>",
                  "serialNumber": "<string>",
                  "wifiMacAddress": "<string>",
                  "udid": "<string>",
                  "phoneNumber": "<string>",
                  "model": "<string>",
                  "modelIdentifier": "<string>",
                  "username": "<string>",
                  "type": "tvos",
                  "managementId": "<string>",
                  "softwareUpdateDeviceId": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_mobile-devices_id"
      },
      "patch": {
        "tags": [
          "v2 > mobile-devices > {id}"
        ],
        "summary": "Update fields on a mobile device that are allowed to be modified by users\n",
        "description": "Updates fields on a mobile device that are allowed to be modified by users.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "<string>",
                  "enforceName": "<boolean>",
                  "assetTag": "<string>",
                  "siteId": "<string>",
                  "timeZone": "<string>",
                  "location": {
                    "username": "<string>",
                    "realName": "<string>",
                    "emailAddress": "<string>",
                    "position": "<string>",
                    "phoneNumber": "<string>",
                    "departmentId": "<string>",
                    "buildingId": "<string>",
                    "room": "<string>"
                  },
                  "updatedExtensionAttributes": [
                    {
                      "name": "<string>",
                      "type": "STRING",
                      "value": [
                        "<string>",
                        "<string>"
                      ],
                      "extensionAttributeCollectionAllowed": "<boolean>"
                    },
                    {
                      "name": "<string>",
                      "type": "INTEGER",
                      "value": [
                        "<string>",
                        "<string>"
                      ],
                      "extensionAttributeCollectionAllowed": "<boolean>"
                    }
                  ],
                  "ios": {
                    "purchasing": {
                      "purchased": "<boolean>",
                      "leased": "<boolean>",
                      "poNumber": "<string>",
                      "vendor": "<string>",
                      "appleCareId": "<string>",
                      "purchasePrice": "<string>",
                      "purchasingAccount": "<string>",
                      "poDate": "<dateTime>",
                      "warrantyExpiresDate": "<dateTime>",
                      "leaseExpiresDate": "<dateTime>",
                      "lifeExpectancy": "<integer>",
                      "purchasingContact": "<string>"
                    }
                  },
                  "tvos": {
                    "airplayPassword": "<string>",
                    "purchasing": {
                      "purchased": "<boolean>",
                      "leased": "<boolean>",
                      "poNumber": "<string>",
                      "vendor": "<string>",
                      "appleCareId": "<string>",
                      "purchasePrice": "<string>",
                      "purchasingAccount": "<string>",
                      "poDate": "<dateTime>",
                      "warrantyExpiresDate": "<dateTime>",
                      "leaseExpiresDate": "<dateTime>",
                      "lifeExpectancy": "<integer>",
                      "purchasingContact": "<string>"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance id of mobile device record",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "name": "<string>",
                  "enforceName": "<boolean>",
                  "assetTag": "<string>",
                  "lastInventoryUpdateTimestamp": "<dateTime>",
                  "osVersion": "<string>",
                  "osBuild": "<string>",
                  "osSupplementalBuildVersion": "<string>",
                  "osRapidSecurityResponse": "<string>",
                  "softwareUpdateDeviceId": "<string>",
                  "serialNumber": "<string>",
                  "udid": "<string>",
                  "ipAddress": "<string>",
                  "wifiMacAddress": "<string>",
                  "bluetoothMacAddress": "<string>",
                  "managed": "<boolean>",
                  "timeZone": "<string>",
                  "initialEntryTimestamp": "<dateTime>",
                  "lastEnrollmentTimestamp": "<dateTime>",
                  "mdmProfileExpirationTimestamp": "<dateTime>",
                  "deviceOwnershipLevel": "<string>",
                  "enrollmentMethod": "<string>",
                  "enrollmentSessionTokenValid": "<boolean>",
                  "declarativeDeviceManagementEnabled": "<boolean>",
                  "site": {
                    "id": "<string>",
                    "name": "<string>"
                  },
                  "extensionAttributes": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "type": "STRING",
                      "value": [
                        "<string>",
                        "<string>"
                      ],
                      "extensionAttributeCollectionAllowed": "<boolean>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "type": "DATE",
                      "value": [
                        "<string>",
                        "<string>"
                      ],
                      "extensionAttributeCollectionAllowed": "<boolean>"
                    }
                  ],
                  "location": {
                    "username": "<string>",
                    "realName": "<string>",
                    "emailAddress": "<string>",
                    "position": "<string>",
                    "phoneNumber": "<string>",
                    "departmentId": "<string>",
                    "buildingId": "<string>",
                    "room": "<string>"
                  },
                  "type": "unknown",
                  "ios": {
                    "model": "<string>",
                    "modelIdentifier": "<string>",
                    "modelNumber": "<string>",
                    "supervised": "<boolean>",
                    "batteryLevel": "<integer>",
                    "lastBackupTimestamp": "<dateTime>",
                    "capacityMb": "<integer>",
                    "availableMb": "<integer>",
                    "percentageUsed": "<integer>",
                    "shared": "<boolean>",
                    "deviceLocatorServiceEnabled": "<boolean>",
                    "doNotDisturbEnabled": "<boolean>",
                    "cloudBackupEnabled": "<boolean>",
                    "lastCloudBackupTimestamp": "<dateTime>",
                    "locationServicesEnabled": "<boolean>",
                    "iTunesStoreAccountActive": "<boolean>",
                    "bleCapable": "<boolean>",
                    "computer": {
                      "id": "<string>",
                      "name": "<string>"
                    },
                    "purchasing": {
                      "purchased": "<boolean>",
                      "leased": "<boolean>",
                      "poNumber": "<string>",
                      "vendor": "<string>",
                      "appleCareId": "<string>",
                      "purchasePrice": "<string>",
                      "purchasingAccount": "<string>",
                      "poDate": "<dateTime>",
                      "warrantyExpiresDate": "<dateTime>",
                      "leaseExpiresDate": "<dateTime>",
                      "lifeExpectancy": "<integer>",
                      "purchasingContact": "<string>"
                    },
                    "security": {
                      "dataProtected": "<boolean>",
                      "blockLevelEncryptionCapable": "<boolean>",
                      "fileLevelEncryptionCapable": "<boolean>",
                      "passcodePresent": "<boolean>",
                      "passcodeCompliant": "<boolean>",
                      "passcodeCompliantWithProfile": "<boolean>",
                      "hardwareEncryption": "<integer>",
                      "activationLockEnabled": "<boolean>",
                      "jailBreakDetected": "<boolean>"
                    },
                    "network": {
                      "cellularTechnology": "<string>",
                      "voiceRoamingEnabled": "<boolean>",
                      "imei": "<string>",
                      "iccid": "<string>",
                      "meid": "<string>",
                      "eid": "<string>",
                      "carrierSettingsVersion": "<string>",
                      "currentCarrierNetwork": "<string>",
                      "currentMobileCountryCode": "<string>",
                      "currentMobileNetworkCode": "<string>",
                      "homeCarrierNetwork": "<string>",
                      "homeMobileCountryCode": "<string>",
                      "homeMobileNetworkCode": "<string>",
                      "dataRoamingEnabled": "<boolean>",
                      "roaming": "<boolean>",
                      "personalHotspotEnabled": "<boolean>",
                      "phoneNumber": "<string>"
                    },
                    "serviceSubscriptions": [
                      {
                        "carrierSettingsVersion": "<string>",
                        "currentCarrierNetwork": "<string>",
                        "currentMobileCountryCode": "<string>",
                        "currentMobileNetworkCode": "<string>",
                        "subscriberCarrierNetwork": "<string>",
                        "eid": "<string>",
                        "iccid": "<string>",
                        "imei": "<string>",
                        "dataPreferred": "<boolean>",
                        "roaming": "<boolean>",
                        "voicePreferred": "<boolean>",
                        "label": "<string>",
                        "labelId": "<string>",
                        "meid": "<string>",
                        "phoneNumber": "<string>",
                        "slot": "<string>"
                      },
                      {
                        "carrierSettingsVersion": "<string>",
                        "currentCarrierNetwork": "<string>",
                        "currentMobileCountryCode": "<string>",
                        "currentMobileNetworkCode": "<string>",
                        "subscriberCarrierNetwork": "<string>",
                        "eid": "<string>",
                        "iccid": "<string>",
                        "imei": "<string>",
                        "dataPreferred": "<boolean>",
                        "roaming": "<boolean>",
                        "voicePreferred": "<boolean>",
                        "label": "<string>",
                        "labelId": "<string>",
                        "meid": "<string>",
                        "phoneNumber": "<string>",
                        "slot": "<string>"
                      }
                    ],
                    "applications": [
                      {
                        "identifier": "<string>",
                        "name": "<string>",
                        "version": "<string>",
                        "shortVersion": "<string>"
                      },
                      {
                        "identifier": "<string>",
                        "name": "<string>",
                        "version": "<string>",
                        "shortVersion": "<string>"
                      }
                    ],
                    "certificates": [
                      {
                        "commonName": "<string>",
                        "identity": "<boolean>",
                        "expirationDateEpoch": "<dateTime>",
                        "subjectName": "<string>",
                        "serialNumber": "<string>",
                        "sha1Fingerprint": "<string>",
                        "issuedDateEpoch": "<string>",
                        "certificateStatus": "EXPIRING",
                        "lifecycleStatus": "INACTIVE"
                      },
                      {
                        "commonName": "<string>",
                        "identity": "<boolean>",
                        "expirationDateEpoch": "<dateTime>",
                        "subjectName": "<string>",
                        "serialNumber": "<string>",
                        "sha1Fingerprint": "<string>",
                        "issuedDateEpoch": "<string>",
                        "certificateStatus": "PENDING_REVOKE",
                        "lifecycleStatus": "INACTIVE"
                      }
                    ],
                    "ebooks": [
                      {
                        "author": "<string>",
                        "title": "<string>",
                        "version": "<string>"
                      },
                      {
                        "author": "<string>",
                        "title": "<string>",
                        "version": "<string>"
                      }
                    ],
                    "configurationProfiles": [
                      {
                        "displayName": "<string>",
                        "version": "<string>",
                        "uuid": "<string>",
                        "identifier": "<string>"
                      },
                      {
                        "displayName": "<string>",
                        "version": "<string>",
                        "uuid": "<string>",
                        "identifier": "<string>"
                      }
                    ],
                    "provisioningProfiles": [
                      {
                        "displayName": "<string>",
                        "uuid": "<string>",
                        "expirationDate": "<dateTime>"
                      },
                      {
                        "displayName": "<string>",
                        "uuid": "<string>",
                        "expirationDate": "<dateTime>"
                      }
                    ],
                    "attachments": [
                      {
                        "name": "<string>",
                        "id": "<string>"
                      },
                      {
                        "name": "<string>",
                        "id": "<string>"
                      }
                    ]
                  },
                  "tvos": {
                    "model": "<string>",
                    "modelIdentifier": "<string>",
                    "modelNumber": "<string>",
                    "supervised": "<boolean>",
                    "airplayPassword": "<string>",
                    "deviceId": "<string>",
                    "locales": "<string>",
                    "purchasing": {
                      "purchased": "<boolean>",
                      "leased": "<boolean>",
                      "poNumber": "<string>",
                      "vendor": "<string>",
                      "appleCareId": "<string>",
                      "purchasePrice": "<string>",
                      "purchasingAccount": "<string>",
                      "poDate": "<dateTime>",
                      "warrantyExpiresDate": "<dateTime>",
                      "leaseExpiresDate": "<dateTime>",
                      "lifeExpectancy": "<integer>",
                      "purchasingContact": "<string>"
                    },
                    "configurationProfiles": [
                      {
                        "displayName": "<string>",
                        "version": "<string>",
                        "uuid": "<string>",
                        "identifier": "<string>"
                      },
                      {
                        "displayName": "<string>",
                        "version": "<string>",
                        "uuid": "<string>",
                        "identifier": "<string>"
                      }
                    ],
                    "certificates": [
                      {
                        "commonName": "<string>",
                        "identity": "<boolean>",
                        "expirationDateEpoch": "<dateTime>",
                        "subjectName": "<string>",
                        "serialNumber": "<string>",
                        "sha1Fingerprint": "<string>",
                        "issuedDateEpoch": "<string>",
                        "certificateStatus": "ISSUED",
                        "lifecycleStatus": "ACTIVE"
                      },
                      {
                        "commonName": "<string>",
                        "identity": "<boolean>",
                        "expirationDateEpoch": "<dateTime>",
                        "subjectName": "<string>",
                        "serialNumber": "<string>",
                        "sha1Fingerprint": "<string>",
                        "issuedDateEpoch": "<string>",
                        "certificateStatus": "PENDING_REVOKE",
                        "lifecycleStatus": "ACTIVE"
                      }
                    ]
                  },
                  "watchos": {
                    "model": "<string>",
                    "modelIdentifier": "<string>",
                    "modelNumber": "<string>",
                    "supervised": "<boolean>",
                    "batteryLevel": "<integer>",
                    "capacityMb": "<integer>",
                    "availableMb": "<integer>",
                    "percentageUsed": "<integer>",
                    "deviceLocatorServiceEnabled": "<boolean>",
                    "doNotDisturbEnabled": "<boolean>",
                    "lastCloudBackupTimestamp": "<dateTime>",
                    "iTunesStoreAccountActive": "<boolean>",
                    "bleCapable": "<boolean>",
                    "security": {
                      "dataProtected": "<boolean>",
                      "blockLevelEncryptionCapable": "<boolean>",
                      "fileLevelEncryptionCapable": "<boolean>",
                      "passcodePresent": "<boolean>",
                      "passcodeCompliant": "<boolean>",
                      "passcodeCompliantWithProfile": "<boolean>",
                      "hardwareEncryption": "<integer>",
                      "activationLockEnabled": "<boolean>",
                      "jailBreakDetected": "<boolean>"
                    },
                    "applications": [
                      {
                        "identifier": "<string>",
                        "name": "<string>",
                        "version": "<string>",
                        "shortVersion": "<string>"
                      },
                      {
                        "identifier": "<string>",
                        "name": "<string>",
                        "version": "<string>",
                        "shortVersion": "<string>"
                      }
                    ],
                    "certificates": [
                      {
                        "commonName": "<string>",
                        "identity": "<boolean>",
                        "expirationDateEpoch": "<dateTime>",
                        "subjectName": "<string>",
                        "serialNumber": "<string>",
                        "sha1Fingerprint": "<string>",
                        "issuedDateEpoch": "<string>",
                        "certificateStatus": "EXPIRED",
                        "lifecycleStatus": "ACTIVE"
                      },
                      {
                        "commonName": "<string>",
                        "identity": "<boolean>",
                        "expirationDateEpoch": "<dateTime>",
                        "subjectName": "<string>",
                        "serialNumber": "<string>",
                        "sha1Fingerprint": "<string>",
                        "issuedDateEpoch": "<string>",
                        "certificateStatus": "EXPIRED",
                        "lifecycleStatus": "ACTIVE"
                      }
                    ],
                    "configurationProfiles": [
                      {
                        "displayName": "<string>",
                        "version": "<string>",
                        "uuid": "<string>",
                        "identifier": "<string>"
                      },
                      {
                        "displayName": "<string>",
                        "version": "<string>",
                        "uuid": "<string>",
                        "identifier": "<string>"
                      }
                    ],
                    "provisioningProfiles": [
                      {
                        "displayName": "<string>",
                        "uuid": "<string>",
                        "expirationDate": "<dateTime>"
                      },
                      {
                        "displayName": "<string>",
                        "uuid": "<string>",
                        "expirationDate": "<dateTime>"
                      }
                    ],
                    "attachments": [
                      {
                        "name": "<string>",
                        "id": "<string>"
                      },
                      {
                        "name": "<string>",
                        "id": "<string>"
                      }
                    ]
                  },
                  "visionos": {
                    "model": "<string>",
                    "modelIdentifier": "<string>",
                    "modelNumber": "<string>",
                    "supervised": "<boolean>",
                    "batteryLevel": "<integer>",
                    "lastBackupTimestamp": "<dateTime>",
                    "capacityMb": "<integer>",
                    "availableMb": "<integer>",
                    "percentageUsed": "<integer>",
                    "shared": "<boolean>",
                    "deviceLocatorServiceEnabled": "<boolean>",
                    "doNotDisturbEnabled": "<boolean>",
                    "cloudBackupEnabled": "<boolean>",
                    "lastCloudBackupTimestamp": "<dateTime>",
                    "locationServicesEnabled": "<boolean>",
                    "iTunesStoreAccountActive": "<boolean>",
                    "bleCapable": "<boolean>",
                    "computer": {
                      "id": "<string>",
                      "name": "<string>"
                    },
                    "purchasing": {
                      "purchased": "<boolean>",
                      "leased": "<boolean>",
                      "poNumber": "<string>",
                      "vendor": "<string>",
                      "appleCareId": "<string>",
                      "purchasePrice": "<string>",
                      "purchasingAccount": "<string>",
                      "poDate": "<dateTime>",
                      "warrantyExpiresDate": "<dateTime>",
                      "leaseExpiresDate": "<dateTime>",
                      "lifeExpectancy": "<integer>",
                      "purchasingContact": "<string>"
                    },
                    "security": {
                      "dataProtected": "<boolean>",
                      "blockLevelEncryptionCapable": "<boolean>",
                      "fileLevelEncryptionCapable": "<boolean>",
                      "passcodePresent": "<boolean>",
                      "passcodeCompliant": "<boolean>",
                      "passcodeCompliantWithProfile": "<boolean>",
                      "hardwareEncryption": "<integer>",
                      "activationLockEnabled": "<boolean>",
                      "jailBreakDetected": "<boolean>"
                    },
                    "network": {
                      "cellularTechnology": "<string>",
                      "voiceRoamingEnabled": "<boolean>",
                      "imei": "<string>",
                      "iccid": "<string>",
                      "meid": "<string>",
                      "eid": "<string>",
                      "carrierSettingsVersion": "<string>",
                      "currentCarrierNetwork": "<string>",
                      "currentMobileCountryCode": "<string>",
                      "currentMobileNetworkCode": "<string>",
                      "homeCarrierNetwork": "<string>",
                      "homeMobileCountryCode": "<string>",
                      "homeMobileNetworkCode": "<string>",
                      "dataRoamingEnabled": "<boolean>",
                      "roaming": "<boolean>",
                      "personalHotspotEnabled": "<boolean>",
                      "phoneNumber": "<string>"
                    },
                    "serviceSubscriptions": [
                      {
                        "carrierSettingsVersion": "<string>",
                        "currentCarrierNetwork": "<string>",
                        "currentMobileCountryCode": "<string>",
                        "currentMobileNetworkCode": "<string>",
                        "subscriberCarrierNetwork": "<string>",
                        "eid": "<string>",
                        "iccid": "<string>",
                        "imei": "<string>",
                        "dataPreferred": "<boolean>",
                        "roaming": "<boolean>",
                        "voicePreferred": "<boolean>",
                        "label": "<string>",
                        "labelId": "<string>",
                        "meid": "<string>",
                        "phoneNumber": "<string>",
                        "slot": "<string>"
                      },
                      {
                        "carrierSettingsVersion": "<string>",
                        "currentCarrierNetwork": "<string>",
                        "currentMobileCountryCode": "<string>",
                        "currentMobileNetworkCode": "<string>",
                        "subscriberCarrierNetwork": "<string>",
                        "eid": "<string>",
                        "iccid": "<string>",
                        "imei": "<string>",
                        "dataPreferred": "<boolean>",
                        "roaming": "<boolean>",
                        "voicePreferred": "<boolean>",
                        "label": "<string>",
                        "labelId": "<string>",
                        "meid": "<string>",
                        "phoneNumber": "<string>",
                        "slot": "<string>"
                      }
                    ],
                    "applications": [
                      {
                        "identifier": "<string>",
                        "name": "<string>",
                        "version": "<string>",
                        "shortVersion": "<string>"
                      },
                      {
                        "identifier": "<string>",
                        "name": "<string>",
                        "version": "<string>",
                        "shortVersion": "<string>"
                      }
                    ],
                    "certificates": [
                      {
                        "commonName": "<string>",
                        "identity": "<boolean>",
                        "expirationDateEpoch": "<dateTime>",
                        "subjectName": "<string>",
                        "serialNumber": "<string>",
                        "sha1Fingerprint": "<string>",
                        "issuedDateEpoch": "<string>",
                        "certificateStatus": "PENDING_REVOKE",
                        "lifecycleStatus": "INACTIVE"
                      },
                      {
                        "commonName": "<string>",
                        "identity": "<boolean>",
                        "expirationDateEpoch": "<dateTime>",
                        "subjectName": "<string>",
                        "serialNumber": "<string>",
                        "sha1Fingerprint": "<string>",
                        "issuedDateEpoch": "<string>",
                        "certificateStatus": "EXPIRED",
                        "lifecycleStatus": "ACTIVE"
                      }
                    ],
                    "ebooks": [
                      {
                        "author": "<string>",
                        "title": "<string>",
                        "version": "<string>"
                      },
                      {
                        "author": "<string>",
                        "title": "<string>",
                        "version": "<string>"
                      }
                    ],
                    "configurationProfiles": [
                      {
                        "displayName": "<string>",
                        "version": "<string>",
                        "uuid": "<string>",
                        "identifier": "<string>"
                      },
                      {
                        "displayName": "<string>",
                        "version": "<string>",
                        "uuid": "<string>",
                        "identifier": "<string>"
                      }
                    ],
                    "provisioningProfiles": [
                      {
                        "displayName": "<string>",
                        "uuid": "<string>",
                        "expirationDate": "<dateTime>"
                      },
                      {
                        "displayName": "<string>",
                        "uuid": "<string>",
                        "expirationDate": "<dateTime>"
                      }
                    ],
                    "attachments": [
                      {
                        "name": "<string>",
                        "id": "<string>"
                      },
                      {
                        "name": "<string>",
                        "id": "<string>"
                      }
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "patch_v2_mobile-devices_id"
      }
    },
    "/v2/mobile-devices": {
      "get": {
        "tags": [
          "v2 > mobile-devices"
        ],
        "summary": "Get Mobile Device objects\n",
        "description": "Gets Mobile Device objects.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "id:asc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "serialNumber": "<string>",
                      "wifiMacAddress": "<string>",
                      "udid": "<string>",
                      "phoneNumber": "<string>",
                      "model": "<string>",
                      "modelIdentifier": "<string>",
                      "username": "<string>",
                      "type": "visionos",
                      "managementId": "<string>",
                      "softwareUpdateDeviceId": "<string>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "serialNumber": "<string>",
                      "wifiMacAddress": "<string>",
                      "udid": "<string>",
                      "phoneNumber": "<string>",
                      "model": "<string>",
                      "modelIdentifier": "<string>",
                      "username": "<string>",
                      "type": "tvos",
                      "managementId": "<string>",
                      "softwareUpdateDeviceId": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_mobile-devices"
      }
    },
    "/v2/patch-management-accept-disclaimer": {
      "post": {
        "tags": [
          "v2 > patch-management-accept-disclaimer"
        ],
        "summary": "Accept Patch Management disclaimer\n",
        "description": "Accept Patch Management disclaimer",
        "requestBody": {
          "content": {}
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "post_v2_patch-management-accept-disclaimer"
      }
    },
    "/v2/patch-policies/policy-details": {
      "get": {
        "tags": [
          "v2 > patch-policies > policy-details"
        ],
        "summary": "Retrieve Patch Policies",
        "description": "Retrieves a list of patch policies.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma.",
            "example": "id:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter Patch Policy collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name, enabled, targetPatchVersion, deploymentMethod, softwareTitleId, softwareTitleConfigurationId, killAppsDelayMinutes, killAppsMessage, isDowngrade, isPatchUnknownVersion, notificationHeader, selfServiceEnforceDeadline, selfServiceDeadline, installButtonText, selfServiceDescription, iconId, reminderFrequency, reminderEnabled. This param can be combined with paging and sorting."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "enabled": "<boolean>",
                      "targetPatchVersion": "<string>",
                      "deploymentMethod": "<string>",
                      "softwareTitleId": "<string>",
                      "softwareTitleConfigurationId": "<string>",
                      "killAppsDelayMinutes": "<integer>",
                      "killAppsMessage": "<string>",
                      "downgrade": "<boolean>",
                      "patchUnknownVersion": "<boolean>",
                      "notificationHeader": "<string>",
                      "selfServiceEnforceDeadline": "<boolean>",
                      "selfServiceDeadline": "<integer>",
                      "installButtonText": "<string>",
                      "selfServiceDescription": "<string>",
                      "iconId": "<string>",
                      "reminderFrequency": "<integer>",
                      "reminderEnabled": "<boolean>"
                    },
                    {
                      "id": "<string>",
                      "name": "<string>",
                      "enabled": "<boolean>",
                      "targetPatchVersion": "<string>",
                      "deploymentMethod": "<string>",
                      "softwareTitleId": "<string>",
                      "softwareTitleConfigurationId": "<string>",
                      "killAppsDelayMinutes": "<integer>",
                      "killAppsMessage": "<string>",
                      "downgrade": "<boolean>",
                      "patchUnknownVersion": "<boolean>",
                      "notificationHeader": "<string>",
                      "selfServiceEnforceDeadline": "<boolean>",
                      "selfServiceDeadline": "<integer>",
                      "installButtonText": "<string>",
                      "selfServiceDescription": "<string>",
                      "iconId": "<string>",
                      "reminderFrequency": "<integer>",
                      "reminderEnabled": "<boolean>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_patch-policies_policy-details"
      }
    },
    "/v2/patch-policies/{id}/dashboard": {
      "get": {
        "tags": [
          "v2 > patch-policies > {id} > dashboard"
        ],
        "summary": "Return whether or not the requested patch policy is on the dashboard\n",
        "description": "Returns whether or not the requested patch policy is on the dashboard",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) patch policy id",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "onDashboard": "<boolean>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_patch-policies_id_dashboard"
      },
      "post": {
        "tags": [
          "v2 > patch-policies > {id} > dashboard"
        ],
        "summary": "Add a patch policy to the dashboard\n",
        "description": "Adds a patch policy to the dashboard.",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) patch policy id",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "post_v2_patch-policies_id_dashboard"
      },
      "delete": {
        "tags": [
          "v2 > patch-policies > {id} > dashboard"
        ],
        "summary": "Remove a patch policy from the dashboard\n",
        "description": "Removes a patch policy from the dashboard.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) patch policy id",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v2_patch-policies_id_dashboard"
      }
    },
    "/v2/patch-policies/{id}/logs/eligible-retry-count": {
      "get": {
        "tags": [
          "v2 > patch-policies > {id} > logs > eligible-retry-count"
        ],
        "summary": "Return the count of the Patch Policy Logs for the patch policy id that are eligible for a retry attempt\n",
        "description": "return the count of the patch policy logs for the patch policy id that  are eligible for a retry attempt",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) patch policy id",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "count": "<integer>"
                }
              }
            }
          }
        },
        "operationId": "get_v2_patch-policies_id_logs_eligible-retry-count"
      }
    },
    "/v2/patch-policies/{id}/logs/retry": {
      "post": {
        "tags": [
          "v2 > patch-policies > {id} > logs > retry"
        ],
        "summary": "Send retry attempts for specific devices",
        "description": "Send retry attempts for specific devices",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "deviceIds": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) patch policy id",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "post_v2_patch-policies_id_logs_retry"
      }
    },
    "/v2/patch-policies/{id}/logs/retry-all": {
      "post": {
        "tags": [
          "v2 > patch-policies > {id} > logs > retry-all"
        ],
        "summary": "Send retry attempts for all devices",
        "description": "Send retry attempts for all devices",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) patch policy id",
            "example": "<string>"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "post_v2_patch-policies_id_logs_retry-all"
      }
    },
    "/v2/patch-policies/{id}/logs/{deviceId}/details": {
      "get": {
        "tags": [
          "v2 > patch-policies > {id} > logs > {deviceId} > details"
        ],
        "summary": "Return attempt details for a specific log",
        "description": "Return attempt details for a specific log",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) patch policy id",
            "example": "<string>"
          },
          {
            "name": "deviceId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) device id",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "id": "<string>",
                    "attemptNumber": "<integer>",
                    "deviceId": "<string>",
                    "actions": [
                      {
                        "id": "<string>",
                        "actionOrder": "<integer>",
                        "action": "<string>"
                      },
                      {
                        "id": "<string>",
                        "actionOrder": "<integer>",
                        "action": "<string>"
                      }
                    ]
                  },
                  {
                    "id": "<string>",
                    "attemptNumber": "<integer>",
                    "deviceId": "<string>",
                    "actions": [
                      {
                        "id": "<string>",
                        "actionOrder": "<integer>",
                        "action": "<string>"
                      },
                      {
                        "id": "<string>",
                        "actionOrder": "<integer>",
                        "action": "<string>"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_patch-policies_id_logs_deviceId_details"
      }
    },
    "/v2/patch-policies/{id}/logs/{deviceId}": {
      "get": {
        "tags": [
          "v2 > patch-policies > {id} > logs > {deviceId}"
        ],
        "summary": "Retrieves a single Patch Policy Log\n",
        "description": "Retrieves a single Patch Policy Log",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) patch policy id",
            "example": "<string>"
          },
          {
            "name": "deviceId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) device id",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "patchPolicyId": "<string>",
                  "deviceName": "<string>",
                  "deviceId": "<string>",
                  "statusCode": "<integer>",
                  "statusDate": "<dateTime>",
                  "statusEnum": "PENDING",
                  "attemptNumber": "<integer>",
                  "ignoredForPatchPolicyId": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_patch-policies_id_logs_deviceId"
      }
    },
    "/v2/patch-policies/{id}/logs": {
      "get": {
        "tags": [
          "v2 > patch-policies > {id} > logs"
        ],
        "summary": "Retrieve Patch Policy Logs\n",
        "description": "Retrieves Patch Policy Logs",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is deviceName:asc. Multiple sort criteria are supported and must be separated with a comma.",
            "example": "deviceName:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter Patch Policy Logs collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: deviceId, deviceName, statusCode, statusDate, attemptNumber, ignoredForPatchPolicyId. This param can be combined with paging and sorting."
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) patch policy id",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "patchPolicyId": "<string>",
                      "deviceName": "<string>",
                      "deviceId": "<string>",
                      "statusCode": "<integer>",
                      "statusDate": "<dateTime>",
                      "statusEnum": "FAILED",
                      "attemptNumber": "<integer>",
                      "ignoredForPatchPolicyId": "<string>"
                    },
                    {
                      "patchPolicyId": "<string>",
                      "deviceName": "<string>",
                      "deviceId": "<string>",
                      "statusCode": "<integer>",
                      "statusDate": "<dateTime>",
                      "statusEnum": "FAILED",
                      "attemptNumber": "<integer>",
                      "ignoredForPatchPolicyId": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_patch-policies_id_logs"
      }
    },
    "/v2/patch-policies": {
      "get": {
        "tags": [
          "v2 > patch-policies"
        ],
        "summary": "Retrieve Patch Policies",
        "description": "Retrieves a list of patch policies.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma.",
            "example": "id:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter Patch Policy collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, policyName, policyEnabled, policyTargetVersion, policyDeploymentMethod, softwareTitle, softwareTitleConfigurationId, pending, completed, deferred, and failed. This param can be combined with paging and sorting."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<string>",
                      "policyName": "<string>",
                      "policyEnabled": "<boolean>",
                      "policyTargetVersion": "<string>",
                      "policyDeploymentMethod": "<string>",
                      "softwareTitle": "<string>",
                      "softwareTitleConfigurationId": "<string>",
                      "pending": "<integer>",
                      "completed": "<integer>",
                      "deferred": "<integer>",
                      "failed": "<integer>"
                    },
                    {
                      "id": "<string>",
                      "policyName": "<string>",
                      "policyEnabled": "<boolean>",
                      "policyTargetVersion": "<string>",
                      "policyDeploymentMethod": "<string>",
                      "softwareTitle": "<string>",
                      "softwareTitleConfigurationId": "<string>",
                      "pending": "<integer>",
                      "completed": "<integer>",
                      "deferred": "<integer>",
                      "failed": "<integer>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_patch-policies"
      }
    },
    "/v2/patch-software-title-configurations/{id}/dashboard": {
      "get": {
        "tags": [
          "v2 > patch-software-title-configurations > {id} > dashboard"
        ],
        "summary": "Return whether or not the requested software title configuration is on the dashboard\n",
        "description": "Returns whether or not the requested software title configuration is on the dashboard",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) software title configuration id",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "onDashboard": "<boolean>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_patch-software-title-configurations_id_dashboard"
      },
      "post": {
        "tags": [
          "v2 > patch-software-title-configurations > {id} > dashboard"
        ],
        "summary": "Add a software title configuration to the dashboard\n",
        "description": "Adds asoftware title configuration to the dashboard.",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) software title configuration id",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "post_v2_patch-software-title-configurations_id_dashboard"
      },
      "delete": {
        "tags": [
          "v2 > patch-software-title-configurations > {id} > dashboard"
        ],
        "summary": "Remove a software title configuration from the dashboard\n",
        "description": "Removes a software title configuration from the dashboard.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) software title configuration id",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v2_patch-software-title-configurations_id_dashboard"
      }
    },
    "/v2/patch-software-title-configurations/{id}/definitions": {
      "get": {
        "tags": [
          "v2 > patch-software-title-configurations > {id} > definitions"
        ],
        "summary": "Retrieve Patch Software Title Definitions with the supplied id",
        "description": "Retrieves patch software title definitions with the supplied id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is absoluteOrderId:asc. Multiple sort criteria are supported and must be separated with a comma.",
            "example": "absoluteOrderId:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter Patch Software Title Definition collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, version, minimumOperatingSystem, releaseDate, reboot, standalone and absoluteOrderId. This param can be combined with paging and sorting."
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Patch Software Title identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "version": "<string>",
                      "minimumOperatingSystem": "-1",
                      "releaseDate": "-1",
                      "rebootRequired": false,
                      "killApps": [
                        {
                          "appName": "<string>"
                        },
                        {
                          "appName": "<string>"
                        }
                      ],
                      "standalone": false,
                      "absoluteOrderId": "<string>"
                    },
                    {
                      "version": "<string>",
                      "minimumOperatingSystem": "-1",
                      "releaseDate": "-1",
                      "rebootRequired": false,
                      "killApps": [
                        {
                          "appName": "<string>"
                        },
                        {
                          "appName": "<string>"
                        }
                      ],
                      "standalone": false,
                      "absoluteOrderId": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_patch-software-title-configurations_id_definitions"
      }
    },
    "/v2/patch-software-title-configurations/{id}/dependencies": {
      "get": {
        "tags": [
          "v2 > patch-software-title-configurations > {id} > dependencies"
        ],
        "summary": "Retrieve list of Patch Software Title Configuration Dependencies",
        "description": "Retrieve list of Patch Software Title Configuration Dependencies",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Patch Software Title Configuration Id",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "smartGroupId": "<string>",
                      "smartGroupName": "<string>"
                    },
                    {
                      "smartGroupId": "<string>",
                      "smartGroupName": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_patch-software-title-configurations_id_dependencies"
      }
    },
    "/v2/patch-software-title-configurations/{id}/export-report": {
      "get": {
        "tags": [
          "v2 > patch-software-title-configurations > {id} > export-report"
        ],
        "summary": "Export Patch Reporting Data",
        "description": "Export Patch Reporting Data",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/csv"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter Patch Report collection on version equality only. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: version. Comparators allowed in the query: ==, != This param can be combined with paging and sorting."
          },
          {
            "name": "columns-to-export",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "(Required) List of column names to export",
            "example": "version"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Patch Software Title Configurations identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/csv"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{\n  \"format\": \"binary\"\n}"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_patch-software-title-configurations_id_export-report"
      }
    },
    "/v2/patch-software-title-configurations/{id}/extension-attributes": {
      "get": {
        "tags": [
          "v2 > patch-software-title-configurations > {id} > extension-attributes"
        ],
        "summary": "Retrieve Software Title Extension Attributes with the supplied id",
        "description": "Retrieves software title extension attributes with the supplied id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Patch Software Title identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "eaId": "<string>",
                    "accepted": "<boolean>",
                    "displayName": "<string>",
                    "scriptContents": "<string>"
                  },
                  {
                    "eaId": "<string>",
                    "accepted": "<boolean>",
                    "displayName": "<string>",
                    "scriptContents": "<string>"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_patch-software-title-configurations_id_extension-attributes"
      }
    },
    "/v2/patch-software-title-configurations/{id}/history": {
      "get": {
        "tags": [
          "v2 > patch-software-title-configurations > {id} > history"
        ],
        "summary": "Get specified Patch Software Title Configuration history object\n",
        "description": "Gets specified Patch Software Title Configuration history object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. ",
            "example": "date:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Patch Software Title Configuration Id",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_patch-software-title-configurations_id_history"
      },
      "post": {
        "tags": [
          "v2 > patch-software-title-configurations > {id} > history"
        ],
        "summary": "Add Patch Software Title Configuration history object notes\n",
        "description": "Adds Patch Software Title Configuration history object notes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Patch Software Title Configuration Id",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_patch-software-title-configurations_id_history"
      }
    },
    "/v2/patch-software-title-configurations/{id}/patch-report": {
      "get": {
        "tags": [
          "v2 > patch-software-title-configurations > {id} > patch-report"
        ],
        "summary": "Retrieve Patch Software Title Configuration Patch Report",
        "description": "Retrieve Patch Software Title Configuration Patch Report",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is computerName:asc. Multiple sort criteria are supported and must be separated with a comma. Supported fields: computerName, deviceId, username, operatingSystemVersion, lastContactTime, buildingName, departmentName, siteName, version",
            "example": "computerName:asc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter Patch Report collection on version equality only. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: version. Comparators allowed in the query: ==, != This param can be combined with paging and sorting."
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Patch Software Title Configurations identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "computerName": "<string>",
                      "deviceId": "<string>",
                      "username": "<string>",
                      "operatingSystemVersion": "<string>",
                      "lastContactTime": "<dateTime>",
                      "buildingName": "<string>",
                      "departmentName": "<string>",
                      "siteName": "<string>",
                      "version": "<string>"
                    },
                    {
                      "computerName": "<string>",
                      "deviceId": "<string>",
                      "username": "<string>",
                      "operatingSystemVersion": "<string>",
                      "lastContactTime": "<dateTime>",
                      "buildingName": "<string>",
                      "departmentName": "<string>",
                      "siteName": "<string>",
                      "version": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_patch-software-title-configurations_id_patch-report"
      }
    },
    "/v2/patch-software-title-configurations/{id}/patch-summary/versions": {
      "get": {
        "tags": [
          "v2 > patch-software-title-configurations > {id} > patch-summary > versions"
        ],
        "summary": "Returns patch versions",
        "description": "Returns patch versions",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Patch id",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "absoluteOrderId": "<string>",
                    "version": "<string>",
                    "onVersion": "<integer>"
                  },
                  {
                    "absoluteOrderId": "<string>",
                    "version": "<string>",
                    "onVersion": "<integer>"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_patch-software-title-configurations_id_patch-summary_versions"
      }
    },
    "/v2/patch-software-title-configurations/{id}/patch-summary": {
      "get": {
        "tags": [
          "v2 > patch-software-title-configurations > {id} > patch-summary"
        ],
        "summary": "Return Active Patch Summary",
        "description": "Returns active patch summary.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Patch id",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "softwareTitleId": "<string>",
                  "title": "<string>",
                  "latestVersion": "<string>",
                  "releaseDate": "<dateTime>",
                  "upToDate": "<integer>",
                  "outOfDate": "<integer>",
                  "onDashboard": "<boolean>",
                  "softwareTitleConfigurationId": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_patch-software-title-configurations_id_patch-summary"
      }
    },
    "/v2/patch-software-title-configurations/{id}": {
      "get": {
        "tags": [
          "v2 > patch-software-title-configurations > {id}"
        ],
        "summary": "Retrieve Patch Software Title Configurations with the supplied id",
        "description": "Retrieves Patch Software Title Configurations with the supplied id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Patch Software Title Configurations identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "displayName": "<string>",
                  "softwareTitleId": "<string>",
                  "categoryId": "-1",
                  "siteId": "-1",
                  "uiNotifications": false,
                  "emailNotifications": false,
                  "jamfOfficial": "<boolean>",
                  "extensionAttributes": [
                    {
                      "accepted": false,
                      "eaId": "<string>"
                    },
                    {
                      "accepted": false,
                      "eaId": "<string>"
                    }
                  ],
                  "softwareTitleName": "<string>",
                  "softwareTitleNameId": "<string>",
                  "softwareTitlePublisher": "<string>",
                  "patchSourceName": "<string>",
                  "patchSourceEnabled": "<boolean>",
                  "id": "<string>",
                  "packages": [
                    {
                      "packageId": "<string>",
                      "version": "<string>",
                      "displayName": "<string>"
                    },
                    {
                      "packageId": "<string>",
                      "version": "<string>",
                      "displayName": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_patch-software-title-configurations_id"
      },
      "delete": {
        "tags": [
          "v2 > patch-software-title-configurations > {id}"
        ],
        "summary": "Delete Patch Software Title Configurations with the supplied id",
        "description": "Deletes Patch Software Title Configurations with the supplied id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Patch Software Title Configurations identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v2_patch-software-title-configurations_id"
      },
      "patch": {
        "tags": [
          "v2 > patch-software-title-configurations > {id}"
        ],
        "summary": "Update Patch Software Title Configurations",
        "description": "Updates Patch Software Title Configurations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "displayName": "<string>",
                  "categoryId": "<string>",
                  "siteId": "<string>",
                  "uiNotifications": "<boolean>",
                  "emailNotifications": "<boolean>",
                  "softwareTitleId": "<string>",
                  "packages": [
                    {
                      "packageId": "<string>",
                      "version": "<string>"
                    },
                    {
                      "packageId": "<string>",
                      "version": "<string>"
                    }
                  ],
                  "extensionAttributes": [
                    {
                      "accepted": false,
                      "eaId": "<string>"
                    },
                    {
                      "accepted": false,
                      "eaId": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/merge-patch+json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Patch Software Title Configurations identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "displayName": "<string>",
                  "softwareTitleId": "<string>",
                  "categoryId": "-1",
                  "siteId": "-1",
                  "uiNotifications": false,
                  "emailNotifications": false,
                  "jamfOfficial": "<boolean>",
                  "extensionAttributes": [
                    {
                      "accepted": false,
                      "eaId": "<string>"
                    },
                    {
                      "accepted": false,
                      "eaId": "<string>"
                    }
                  ],
                  "softwareTitleName": "<string>",
                  "softwareTitleNameId": "<string>",
                  "softwareTitlePublisher": "<string>",
                  "patchSourceName": "<string>",
                  "patchSourceEnabled": "<boolean>",
                  "id": "<string>",
                  "packages": [
                    {
                      "packageId": "<string>",
                      "version": "<string>",
                      "displayName": "<string>"
                    },
                    {
                      "packageId": "<string>",
                      "version": "<string>",
                      "displayName": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "patch_v2_patch-software-title-configurations_id"
      }
    },
    "/v2/patch-software-title-configurations": {
      "get": {
        "tags": [
          "v2 > patch-software-title-configurations"
        ],
        "summary": "Retrieve Patch Software Title Configurations",
        "description": "Retrieves patch software title configurations",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "displayName": "<string>",
                    "softwareTitleId": "<string>",
                    "categoryId": "-1",
                    "siteId": "-1",
                    "uiNotifications": false,
                    "emailNotifications": false,
                    "jamfOfficial": "<boolean>",
                    "extensionAttributes": [
                      {
                        "accepted": false,
                        "eaId": "<string>"
                      },
                      {
                        "accepted": false,
                        "eaId": "<string>"
                      }
                    ],
                    "softwareTitleName": "<string>",
                    "softwareTitleNameId": "<string>",
                    "softwareTitlePublisher": "<string>",
                    "patchSourceName": "<string>",
                    "patchSourceEnabled": "<boolean>",
                    "id": "<string>",
                    "packages": [
                      {
                        "packageId": "<string>",
                        "version": "<string>",
                        "displayName": "<string>"
                      },
                      {
                        "packageId": "<string>",
                        "version": "<string>",
                        "displayName": "<string>"
                      }
                    ]
                  },
                  {
                    "displayName": "<string>",
                    "softwareTitleId": "<string>",
                    "categoryId": "-1",
                    "siteId": "-1",
                    "uiNotifications": false,
                    "emailNotifications": false,
                    "jamfOfficial": "<boolean>",
                    "extensionAttributes": [
                      {
                        "accepted": false,
                        "eaId": "<string>"
                      },
                      {
                        "accepted": false,
                        "eaId": "<string>"
                      }
                    ],
                    "softwareTitleName": "<string>",
                    "softwareTitleNameId": "<string>",
                    "softwareTitlePublisher": "<string>",
                    "patchSourceName": "<string>",
                    "patchSourceEnabled": "<boolean>",
                    "id": "<string>",
                    "packages": [
                      {
                        "packageId": "<string>",
                        "version": "<string>",
                        "displayName": "<string>"
                      },
                      {
                        "packageId": "<string>",
                        "version": "<string>",
                        "displayName": "<string>"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v2_patch-software-title-configurations"
      },
      "post": {
        "tags": [
          "v2 > patch-software-title-configurations"
        ],
        "summary": "Create Patch Software Title Configurations",
        "description": "Creates Patch Software Title Configurations using sToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "displayName": "<string>",
                  "softwareTitleId": "<string>",
                  "categoryId": "-1",
                  "siteId": "-1",
                  "uiNotifications": false,
                  "emailNotifications": false,
                  "extensionAttributes": [
                    {
                      "accepted": false,
                      "eaId": "<string>"
                    },
                    {
                      "accepted": false,
                      "eaId": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_patch-software-title-configurations"
      }
    },
    "/v2/smtp-server": {
      "get": {
        "tags": [
          "v2 > smtp-server"
        ],
        "summary": "Finds the Jamf Pro SMTP Server information\n",
        "description": "Finds the Jamf Pro SMTP Server information\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "authenticationType": "GOOGLE_MAIL",
                  "enabled": false,
                  "senderSettings": {
                    "emailAddress": "",
                    "displayName": "Jamf Pro Server"
                  },
                  "connectionSettings": {
                    "connectionTimeout": 5,
                    "encryptionType": "NONE",
                    "host": "",
                    "port": 25
                  },
                  "basicAuthCredentials": {
                    "username": "",
                    "password": 67160274
                  },
                  "graphApiCredentials": {
                    "clientId": "",
                    "tenantId": "",
                    "clientSecret": false
                  },
                  "googleMailCredentials": {
                    "clientId": "",
                    "authentications": [
                      {
                        "emailAddress": "",
                        "status": "FAILED"
                      },
                      {
                        "emailAddress": "",
                        "status": "AUTHENTICATED"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get_v2_smtp-server"
      },
      "put": {
        "tags": [
          "v2 > smtp-server"
        ],
        "summary": "Updates Jamf Pro SMTP Server information\n",
        "description": "Updates Jamf Pro SMTP Server information. If requiresAuthentication is set to true, a username and password must be provided\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "authenticationType": "GRAPH_API",
                  "enabled": false,
                  "senderSettings": {
                    "emailAddress": "",
                    "displayName": "Jamf Pro Server"
                  },
                  "connectionSettings": {
                    "connectionTimeout": 5,
                    "encryptionType": "NONE",
                    "host": "",
                    "port": 25
                  },
                  "basicAuthCredentials": {
                    "password": "",
                    "username": ""
                  },
                  "graphApiCredentials": {
                    "clientId": "",
                    "clientSecret": "",
                    "tenantId": ""
                  },
                  "googleMailCredentials": {
                    "clientId": "",
                    "clientSecret": "",
                    "authentications": [
                      {
                        "emailAddress": "",
                        "status": -48268728.485690996
                      },
                      {
                        "emailAddress": "",
                        "status": 52531273.48059103
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/merge-patch+json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "oauth-state",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The OAuth state that was last used to authorize a Google Mail account. This is only required when the authentication type is Google Mail and new accounts are being added."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "authenticationType": "GOOGLE_MAIL",
                  "enabled": false,
                  "senderSettings": {
                    "emailAddress": "",
                    "displayName": "Jamf Pro Server"
                  },
                  "connectionSettings": {
                    "connectionTimeout": 5,
                    "encryptionType": "NONE",
                    "host": "",
                    "port": 25
                  },
                  "basicAuthCredentials": {
                    "username": "",
                    "password": 67160274
                  },
                  "graphApiCredentials": {
                    "clientId": "",
                    "tenantId": "",
                    "clientSecret": false
                  },
                  "googleMailCredentials": {
                    "clientId": "",
                    "authentications": [
                      {
                        "emailAddress": "",
                        "status": "FAILED"
                      },
                      {
                        "emailAddress": "",
                        "status": "AUTHENTICATED"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV) (RFC 4918)",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v2_smtp-server"
      }
    },
    "/v2/sso/cert/download": {
      "get": {
        "tags": [
          "v2 > sso > cert > download"
        ],
        "summary": "Download the certificate currently configured for use with Jamf Pro's SSO configuration\n",
        "description": "Downloads the certificate currently configured for use with Jamf Pro's SSO configuration",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/plain"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<binary>"
              }
            }
          }
        },
        "operationId": "get_v2_sso_cert_download"
      }
    },
    "/v2/sso/cert/parse": {
      "post": {
        "tags": [
          "v2 > sso > cert > parse"
        ],
        "summary": "Parse the certificate to get details about certificate type and keys needed to upload certificate file\n",
        "description": "Parse the certificate to get details about certificate type and keys needed to upload certificate file.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "keystoreFile": "f5==",
                  "keystoreFileName": "<string>",
                  "keystorePassword": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "key": " ",
                  "keys": [
                    {
                      "id": "<string>",
                      "valid": "<boolean>"
                    },
                    {
                      "id": "<string>",
                      "valid": "<boolean>"
                    }
                  ],
                  "type": "NONE",
                  "keystoreSetupType": "NONE",
                  "keystoreFile": [
                    "J7jBEATgxrX3+P739j2B3dxFEgR=",
                    ""
                  ],
                  "keystoreFileName": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_sso_cert_parse"
      }
    },
    "/v2/sso/cert": {
      "get": {
        "tags": [
          "v2 > sso > cert"
        ],
        "summary": "Retrieve the certificate currently configured for use with SSO\n",
        "description": "Retrieves the certificate currently configured for use with SSO.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "keystore": {
                    "key": " ",
                    "keys": [
                      {
                        "id": "<string>",
                        "valid": "<boolean>"
                      },
                      {
                        "id": "<string>",
                        "valid": "<boolean>"
                      }
                    ],
                    "type": "JKS",
                    "keystoreSetupType": "NONE",
                    "keystoreFileName": "<string>"
                  },
                  "keystoreDetails": {
                    "keys": [
                      "",
                      ""
                    ],
                    "serialNumber": "<integer>",
                    "subject": "<string>",
                    "issuer": "<string>",
                    "expiration": "<string>"
                  }
                }
              }
            }
          }
        },
        "operationId": "get_v2_sso_cert"
      },
      "put": {
        "tags": [
          "v2 > sso > cert"
        ],
        "summary": "Update the certificate used by Jamf Pro to sign SSO requests to the identify provider\n",
        "description": "Update the certificate used by Jamf Pro to sign SSO requests to the identify provider.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "key": " ",
                  "keystoreFile": "cbRzLdrOBHRlWgfumOV4z6CkWCWw",
                  "keystoreFileName": "<string>",
                  "keystorePassword": "<string>",
                  "password": "<string>",
                  "type": "JKS",
                  "keys": [
                    {
                      "id": "<string>",
                      "valid": "<boolean>"
                    },
                    {
                      "id": "<string>",
                      "valid": "<boolean>"
                    }
                  ],
                  "keystoreSetupType": "NONE"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "keystore": {
                    "key": " ",
                    "keys": [
                      {
                        "id": "<string>",
                        "valid": "<boolean>"
                      },
                      {
                        "id": "<string>",
                        "valid": "<boolean>"
                      }
                    ],
                    "type": "JKS",
                    "keystoreSetupType": "NONE",
                    "keystoreFileName": "<string>"
                  },
                  "keystoreDetails": {
                    "keys": [
                      "",
                      ""
                    ],
                    "serialNumber": "<integer>",
                    "subject": "<string>",
                    "issuer": "<string>",
                    "expiration": "<string>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v2_sso_cert"
      },
      "post": {
        "tags": [
          "v2 > sso > cert"
        ],
        "summary": "Jamf Pro will generate a new certificate and use it to sign SSO\n",
        "description": "Jamf Pro will generate a new certificate and use it to sign SSO requests to the identity provider.",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "keystore": {
                    "key": " ",
                    "keys": [
                      {
                        "id": "<string>",
                        "valid": "<boolean>"
                      },
                      {
                        "id": "<string>",
                        "valid": "<boolean>"
                      }
                    ],
                    "type": "JKS",
                    "keystoreSetupType": "NONE",
                    "keystoreFileName": "<string>"
                  },
                  "keystoreDetails": {
                    "keys": [
                      "",
                      ""
                    ],
                    "serialNumber": "<integer>",
                    "subject": "<string>",
                    "issuer": "<string>",
                    "expiration": "<string>"
                  }
                }
              }
            }
          }
        },
        "operationId": "post_v2_sso_cert"
      },
      "delete": {
        "tags": [
          "v2 > sso > cert"
        ],
        "summary": "Delete the currently configured certificate used by SSO\n",
        "description": "Deletes the currently configured certificate used by SSO.",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v2_sso_cert"
      }
    },
    "/v2/sso/dependencies": {
      "get": {
        "tags": [
          "v2 > sso > dependencies"
        ],
        "summary": "Retrieve the list of Enrollment Customizations using SSO\n",
        "description": "Retrieves the list of Enrollment Customizations using SSO",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "dependencies": [
                    {
                      "name": "<string>",
                      "humanReadableName": "<string>",
                      "hyperlink": "<string>"
                    },
                    {
                      "name": "<string>",
                      "humanReadableName": "<string>",
                      "hyperlink": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_sso_dependencies"
      }
    },
    "/v2/sso/disable": {
      "post": {
        "tags": [
          "v2 > sso > disable"
        ],
        "summary": "Disable SSO\n",
        "description": "Disable SSO",
        "requestBody": {
          "content": {}
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "post_v2_sso_disable"
      }
    },
    "/v2/sso/history": {
      "get": {
        "tags": [
          "v2 > sso > history"
        ],
        "summary": "Get SSO history object\n",
        "description": "Gets SSO history object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "id:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v2_sso_history"
      },
      "post": {
        "tags": [
          "v2 > sso > history"
        ],
        "summary": "Add SSO history object notes\n",
        "description": "Adds SSO history object notes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v2_sso_history"
      }
    },
    "/v2/sso/metadata/download": {
      "get": {
        "tags": [
          "v2 > sso > metadata > download"
        ],
        "summary": "Download the Jamf Pro SAML metadata file\n",
        "description": "Download the Jamf Pro SAML metadata file",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/plain"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<binary>"
              }
            }
          }
        },
        "operationId": "get_v2_sso_metadata_download"
      }
    },
    "/v2/sso/validate": {
      "post": {
        "tags": [
          "v2 > sso > validate"
        ],
        "summary": "Endpoint for validation of a saml metadata url\n",
        "description": "Validation of a content available under provided metadata URL.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "idpUrl": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "post_v2_sso_validate"
      }
    },
    "/v2/sso": {
      "get": {
        "tags": [
          "v2 > sso"
        ],
        "summary": "Retrieve the current Single Sign On configuration settings\n",
        "description": "Retrieves the current Single Sign On configuration settings",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "enrollmentSsoForAccountDrivenEnrollmentEnabled": false,
                  "entityId": "<string>",
                  "groupAttributeName": "http://schemas.xmlsoap.org/claims/Group",
                  "groupEnrollmentAccessEnabled": false,
                  "groupRdnKey": " ",
                  "idpProviderType": "SHIBBOLETH",
                  "metadataSource": "UNKNOWN",
                  "ssoBypassAllowed": false,
                  "ssoEnabled": false,
                  "ssoForEnrollmentEnabled": false,
                  "ssoForMacOsSelfServiceEnabled": false,
                  "tokenExpirationDisabled": false,
                  "userAttributeEnabled": false,
                  "userMapping": "EMAIL",
                  "userAttributeName": " ",
                  "enrollmentSsoConfig": {
                    "managementHint": ""
                  },
                  "groupEnrollmentAccessName": " ",
                  "idpUrl": "<string>",
                  "metadataFileName": "<string>",
                  "otherProviderTypeName": " ",
                  "federationMetadataFile": "kLPma7==",
                  "sessionTimeout": 480
                }
              }
            }
          }
        },
        "operationId": "get_v2_sso"
      },
      "put": {
        "tags": [
          "v2 > sso"
        ],
        "summary": "Updates the current Single Sign On configuration settings\n",
        "description": "Updates the current Single Sign On configuration settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "enrollmentSsoForAccountDrivenEnrollmentEnabled": false,
                  "entityId": "<string>",
                  "groupAttributeName": "http://schemas.xmlsoap.org/claims/Group",
                  "groupEnrollmentAccessEnabled": false,
                  "groupRdnKey": " ",
                  "idpProviderType": "SHIBBOLETH",
                  "metadataSource": "UNKNOWN",
                  "ssoBypassAllowed": false,
                  "ssoEnabled": false,
                  "ssoForEnrollmentEnabled": false,
                  "ssoForMacOsSelfServiceEnabled": false,
                  "tokenExpirationDisabled": false,
                  "userAttributeEnabled": false,
                  "userMapping": "EMAIL",
                  "userAttributeName": " ",
                  "enrollmentSsoConfig": {
                    "managementHint": ""
                  },
                  "groupEnrollmentAccessName": " ",
                  "idpUrl": "<string>",
                  "metadataFileName": "<string>",
                  "otherProviderTypeName": " ",
                  "federationMetadataFile": "kLPma7==",
                  "sessionTimeout": 480
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "enrollmentSsoForAccountDrivenEnrollmentEnabled": false,
                  "entityId": "<string>",
                  "groupAttributeName": "http://schemas.xmlsoap.org/claims/Group",
                  "groupEnrollmentAccessEnabled": false,
                  "groupRdnKey": " ",
                  "idpProviderType": "SHIBBOLETH",
                  "metadataSource": "UNKNOWN",
                  "ssoBypassAllowed": false,
                  "ssoEnabled": false,
                  "ssoForEnrollmentEnabled": false,
                  "ssoForMacOsSelfServiceEnabled": false,
                  "tokenExpirationDisabled": false,
                  "userAttributeEnabled": false,
                  "userMapping": "EMAIL",
                  "userAttributeName": " ",
                  "enrollmentSsoConfig": {
                    "managementHint": ""
                  },
                  "groupEnrollmentAccessName": " ",
                  "idpUrl": "<string>",
                  "metadataFileName": "<string>",
                  "otherProviderTypeName": " ",
                  "federationMetadataFile": "kLPma7==",
                  "sessionTimeout": 480
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v2_sso"
      }
    },
    "/v3/check-in/history": {
      "get": {
        "tags": [
          "v3 > check-in > history"
        ],
        "summary": "Get Client Check-In history object\n",
        "description": "Gets Client Check-In history object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,username:asc ",
            "example": "date:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<string>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<string>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v3_check-in_history"
      },
      "post": {
        "tags": [
          "v3 > check-in > history"
        ],
        "summary": "Add a Note to Client Check-In History\n",
        "description": "Adds Client Check-In history object notes\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v3_check-in_history"
      }
    },
    "/v3/check-in": {
      "get": {
        "tags": [
          "v3 > check-in"
        ],
        "summary": "Get Client Check-In settings\n",
        "description": "Gets `Client Check-In` object.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "checkInFrequency": 15,
                  "createHooks": false,
                  "hookLog": false,
                  "hookPolicies": false,
                  "createStartupScript": false,
                  "startupLog": false,
                  "startupPolicies": false,
                  "startupSsh": false,
                  "enableLocalConfigurationProfiles": false
                }
              }
            }
          }
        },
        "operationId": "get_v3_check-in"
      },
      "put": {
        "tags": [
          "v3 > check-in"
        ],
        "summary": "Update Client Check-In object\n",
        "description": "Update Client Check-In object\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "checkInFrequency": 15,
                  "createHooks": false,
                  "hookLog": false,
                  "hookPolicies": false,
                  "createStartupScript": false,
                  "startupLog": false,
                  "startupPolicies": false,
                  "startupSsh": false,
                  "enableLocalConfigurationProfiles": false
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "checkInFrequency": 15,
                  "createHooks": false,
                  "hookLog": false,
                  "hookPolicies": false,
                  "createStartupScript": false,
                  "startupLog": false,
                  "startupPolicies": false,
                  "startupSsh": false,
                  "enableLocalConfigurationProfiles": false
                }
              }
            }
          }
        },
        "operationId": "put_v3_check-in"
      }
    },
    "/v3/computer-prestages/{id}": {
      "get": {
        "tags": [
          "v3 > computer-prestages > {id}"
        ],
        "summary": "Retrieve a Computer Prestage with the supplied id\n",
        "description": "Retrieves a Computer Prestage with the supplied id",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Computer Prestage identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "authenticationPrompt": "<string>",
                  "autoAdvanceSetup": "<boolean>",
                  "customPackageDistributionPointId": "<string>",
                  "customPackageIds": [
                    "<string>",
                    "<string>"
                  ],
                  "defaultPrestage": "<boolean>",
                  "department": "<string>",
                  "deviceEnrollmentProgramInstanceId": "<string>",
                  "displayName": "<string>",
                  "enableDeviceBasedActivationLock": "<boolean>",
                  "enrollmentSiteId": "<string>",
                  "installProfilesDuringSetup": "<boolean>",
                  "keepExistingLocationInformation": "<boolean>",
                  "keepExistingSiteMembership": "<boolean>",
                  "locationInformation": {
                    "buildingId": "<string>",
                    "departmentId": "<string>",
                    "email": "<string>",
                    "id": "<string>",
                    "phone": "<string>",
                    "position": "<string>",
                    "realname": "<string>",
                    "room": "<string>",
                    "username": "<string>",
                    "versionLock": "<integer>"
                  },
                  "mandatory": "<boolean>",
                  "mdmRemovable": "<boolean>",
                  "prestageInstalledProfileIds": [
                    "<string>",
                    "<string>"
                  ],
                  "preventActivationLock": "<boolean>",
                  "purchasingInformation": {
                    "appleCareId": "<string>",
                    "id": "<string>",
                    "leaseDate": "<string>",
                    "leased": "<boolean>",
                    "lifeExpectancy": "<integer>",
                    "poDate": "<string>",
                    "poNumber": "<string>",
                    "purchasePrice": "<string>",
                    "purchased": "<boolean>",
                    "purchasingAccount": "<string>",
                    "purchasingContact": "<string>",
                    "vendor": "<string>",
                    "versionLock": "<integer>",
                    "warrantyDate": "<string>"
                  },
                  "requireAuthentication": "<boolean>",
                  "supportEmailAddress": "<string>",
                  "supportPhoneNumber": "<string>",
                  "skipSetupItems": {
                    "in_64": "<boolean>",
                    "qui_9a4": "<boolean>"
                  },
                  "anchorCertificates": [
                    "<string>",
                    "<string>"
                  ],
                  "enrollmentCustomizationId": "<string>",
                  "language": "<string>",
                  "region": "<string>",
                  "enableRecoveryLock": "<boolean>",
                  "recoveryLockPasswordType": "MANUAL",
                  "rotateRecoveryLockPassword": "<boolean>",
                  "prestageMinimumOsTargetVersionType": "MINIMUM_OS_SPECIFIC_VERSION",
                  "minimumOsSpecificVersion": "<string>",
                  "id": "<string>",
                  "profileUuid": "<string>",
                  "siteId": "<string>",
                  "versionLock": "<integer>",
                  "accountSettings": {
                    "id": "<string>",
                    "payloadConfigured": false,
                    "localAdminAccountEnabled": false,
                    "adminUsername": "",
                    "hiddenAdminAccount": false,
                    "localUserManaged": false,
                    "userAccountType": "STANDARD",
                    "versionLock": 0,
                    "prefillPrimaryAccountInfoFeatureEnabled": false,
                    "prefillType": "CUSTOM",
                    "prefillAccountFullName": "",
                    "prefillAccountUserName": "",
                    "preventPrefillInfoFromModification": false
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v3_computer-prestages_id"
      },
      "put": {
        "tags": [
          "v3 > computer-prestages > {id}"
        ],
        "summary": "Update a Computer Prestage\n",
        "description": "Updates a Computer Prestage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "authenticationPrompt": "<string>",
                  "autoAdvanceSetup": "<boolean>",
                  "customPackageDistributionPointId": "<string>",
                  "customPackageIds": [
                    "<string>",
                    "<string>"
                  ],
                  "defaultPrestage": "<boolean>",
                  "department": "<string>",
                  "deviceEnrollmentProgramInstanceId": "<string>",
                  "displayName": "<string>",
                  "enableDeviceBasedActivationLock": "<boolean>",
                  "enrollmentSiteId": "<string>",
                  "installProfilesDuringSetup": "<boolean>",
                  "keepExistingLocationInformation": "<boolean>",
                  "keepExistingSiteMembership": "<boolean>",
                  "locationInformation": {
                    "buildingId": "<string>",
                    "departmentId": "<string>",
                    "email": "<string>",
                    "id": "<string>",
                    "phone": "<string>",
                    "position": "<string>",
                    "realname": "<string>",
                    "room": "<string>",
                    "username": "<string>",
                    "versionLock": "<integer>"
                  },
                  "mandatory": "<boolean>",
                  "mdmRemovable": "<boolean>",
                  "prestageInstalledProfileIds": [
                    "<string>",
                    "<string>"
                  ],
                  "preventActivationLock": "<boolean>",
                  "purchasingInformation": {
                    "appleCareId": "<string>",
                    "id": "<string>",
                    "leaseDate": "<string>",
                    "leased": "<boolean>",
                    "lifeExpectancy": "<integer>",
                    "poDate": "<string>",
                    "poNumber": "<string>",
                    "purchasePrice": "<string>",
                    "purchased": "<boolean>",
                    "purchasingAccount": "<string>",
                    "purchasingContact": "<string>",
                    "vendor": "<string>",
                    "versionLock": "<integer>",
                    "warrantyDate": "<string>"
                  },
                  "requireAuthentication": "<boolean>",
                  "supportEmailAddress": "<string>",
                  "supportPhoneNumber": "<string>",
                  "skipSetupItems": {
                    "nostrude_": "<boolean>",
                    "sunt1": "<boolean>",
                    "consequat_25": "<boolean>"
                  },
                  "anchorCertificates": [
                    "<string>",
                    "<string>"
                  ],
                  "enrollmentCustomizationId": "<string>",
                  "language": "<string>",
                  "region": "<string>",
                  "enableRecoveryLock": "<boolean>",
                  "recoveryLockPasswordType": "RANDOM",
                  "rotateRecoveryLockPassword": "<boolean>",
                  "prestageMinimumOsTargetVersionType": "NO_ENFORCEMENT",
                  "minimumOsSpecificVersion": "<string>",
                  "accountSettings": {
                    "id": "<string>",
                    "payloadConfigured": false,
                    "localAdminAccountEnabled": false,
                    "adminUsername": "",
                    "adminPassword": "",
                    "hiddenAdminAccount": false,
                    "localUserManaged": false,
                    "userAccountType": "STANDARD",
                    "versionLock": 0,
                    "prefillPrimaryAccountInfoFeatureEnabled": false,
                    "prefillType": "CUSTOM",
                    "prefillAccountFullName": "",
                    "prefillAccountUserName": "",
                    "preventPrefillInfoFromModification": false
                  },
                  "recoveryLockPassword": "<string>",
                  "versionLock": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Computer Prestage identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "authenticationPrompt": "<string>",
                  "autoAdvanceSetup": "<boolean>",
                  "customPackageDistributionPointId": "<string>",
                  "customPackageIds": [
                    "<string>",
                    "<string>"
                  ],
                  "defaultPrestage": "<boolean>",
                  "department": "<string>",
                  "deviceEnrollmentProgramInstanceId": "<string>",
                  "displayName": "<string>",
                  "enableDeviceBasedActivationLock": "<boolean>",
                  "enrollmentSiteId": "<string>",
                  "installProfilesDuringSetup": "<boolean>",
                  "keepExistingLocationInformation": "<boolean>",
                  "keepExistingSiteMembership": "<boolean>",
                  "locationInformation": {
                    "buildingId": "<string>",
                    "departmentId": "<string>",
                    "email": "<string>",
                    "id": "<string>",
                    "phone": "<string>",
                    "position": "<string>",
                    "realname": "<string>",
                    "room": "<string>",
                    "username": "<string>",
                    "versionLock": "<integer>"
                  },
                  "mandatory": "<boolean>",
                  "mdmRemovable": "<boolean>",
                  "prestageInstalledProfileIds": [
                    "<string>",
                    "<string>"
                  ],
                  "preventActivationLock": "<boolean>",
                  "purchasingInformation": {
                    "appleCareId": "<string>",
                    "id": "<string>",
                    "leaseDate": "<string>",
                    "leased": "<boolean>",
                    "lifeExpectancy": "<integer>",
                    "poDate": "<string>",
                    "poNumber": "<string>",
                    "purchasePrice": "<string>",
                    "purchased": "<boolean>",
                    "purchasingAccount": "<string>",
                    "purchasingContact": "<string>",
                    "vendor": "<string>",
                    "versionLock": "<integer>",
                    "warrantyDate": "<string>"
                  },
                  "requireAuthentication": "<boolean>",
                  "supportEmailAddress": "<string>",
                  "supportPhoneNumber": "<string>",
                  "skipSetupItems": {
                    "in_64": "<boolean>",
                    "qui_9a4": "<boolean>"
                  },
                  "anchorCertificates": [
                    "<string>",
                    "<string>"
                  ],
                  "enrollmentCustomizationId": "<string>",
                  "language": "<string>",
                  "region": "<string>",
                  "enableRecoveryLock": "<boolean>",
                  "recoveryLockPasswordType": "MANUAL",
                  "rotateRecoveryLockPassword": "<boolean>",
                  "prestageMinimumOsTargetVersionType": "MINIMUM_OS_SPECIFIC_VERSION",
                  "minimumOsSpecificVersion": "<string>",
                  "id": "<string>",
                  "profileUuid": "<string>",
                  "siteId": "<string>",
                  "versionLock": "<integer>",
                  "accountSettings": {
                    "id": "<string>",
                    "payloadConfigured": false,
                    "localAdminAccountEnabled": false,
                    "adminUsername": "",
                    "hiddenAdminAccount": false,
                    "localUserManaged": false,
                    "userAccountType": "STANDARD",
                    "versionLock": 0,
                    "prefillPrimaryAccountInfoFeatureEnabled": false,
                    "prefillType": "CUSTOM",
                    "prefillAccountFullName": "",
                    "prefillAccountUserName": "",
                    "preventPrefillInfoFromModification": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v3_computer-prestages_id"
      },
      "delete": {
        "tags": [
          "v3 > computer-prestages > {id}"
        ],
        "summary": "Delete a Computer Prestage with the supplied id\n",
        "description": "Deletes a Computer Prestage with the supplied id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Computer Prestage identifier",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_v3_computer-prestages_id"
      }
    },
    "/v3/computer-prestages": {
      "get": {
        "tags": [
          "v3 > computer-prestages"
        ],
        "summary": "Get sorted and paged Computer Prestages\n",
        "description": "Gets sorted and paged computer prestages",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "id:desc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "authenticationPrompt": "<string>",
                      "autoAdvanceSetup": "<boolean>",
                      "customPackageDistributionPointId": "<string>",
                      "customPackageIds": [
                        "<string>",
                        "<string>"
                      ],
                      "defaultPrestage": "<boolean>",
                      "department": "<string>",
                      "deviceEnrollmentProgramInstanceId": "<string>",
                      "displayName": "<string>",
                      "enableDeviceBasedActivationLock": "<boolean>",
                      "enrollmentSiteId": "<string>",
                      "installProfilesDuringSetup": "<boolean>",
                      "keepExistingLocationInformation": "<boolean>",
                      "keepExistingSiteMembership": "<boolean>",
                      "locationInformation": {
                        "buildingId": "<string>",
                        "departmentId": "<string>",
                        "email": "<string>",
                        "id": "<string>",
                        "phone": "<string>",
                        "position": "<string>",
                        "realname": "<string>",
                        "room": "<string>",
                        "username": "<string>",
                        "versionLock": "<integer>"
                      },
                      "mandatory": "<boolean>",
                      "mdmRemovable": "<boolean>",
                      "prestageInstalledProfileIds": [
                        "<string>",
                        "<string>"
                      ],
                      "preventActivationLock": "<boolean>",
                      "purchasingInformation": {
                        "appleCareId": "<string>",
                        "id": "<string>",
                        "leaseDate": "<string>",
                        "leased": "<boolean>",
                        "lifeExpectancy": "<integer>",
                        "poDate": "<string>",
                        "poNumber": "<string>",
                        "purchasePrice": "<string>",
                        "purchased": "<boolean>",
                        "purchasingAccount": "<string>",
                        "purchasingContact": "<string>",
                        "vendor": "<string>",
                        "versionLock": "<integer>",
                        "warrantyDate": "<string>"
                      },
                      "requireAuthentication": "<boolean>",
                      "supportEmailAddress": "<string>",
                      "supportPhoneNumber": "<string>",
                      "skipSetupItems": {
                        "laborum_b": "<boolean>",
                        "suntf": "<boolean>"
                      },
                      "anchorCertificates": [
                        "<string>",
                        "<string>"
                      ],
                      "enrollmentCustomizationId": "<string>",
                      "language": "<string>",
                      "region": "<string>",
                      "enableRecoveryLock": "<boolean>",
                      "recoveryLockPasswordType": "MANUAL",
                      "rotateRecoveryLockPassword": "<boolean>",
                      "prestageMinimumOsTargetVersionType": "MINIMUM_OS_LATEST_VERSION",
                      "minimumOsSpecificVersion": "<string>",
                      "id": "<string>",
                      "profileUuid": "<string>",
                      "siteId": "<string>",
                      "versionLock": "<integer>",
                      "accountSettings": {
                        "id": "<string>",
                        "payloadConfigured": false,
                        "localAdminAccountEnabled": false,
                        "adminUsername": "",
                        "hiddenAdminAccount": false,
                        "localUserManaged": false,
                        "userAccountType": "STANDARD",
                        "versionLock": 0,
                        "prefillPrimaryAccountInfoFeatureEnabled": false,
                        "prefillType": "CUSTOM",
                        "prefillAccountFullName": "",
                        "prefillAccountUserName": "",
                        "preventPrefillInfoFromModification": false
                      }
                    },
                    {
                      "authenticationPrompt": "<string>",
                      "autoAdvanceSetup": "<boolean>",
                      "customPackageDistributionPointId": "<string>",
                      "customPackageIds": [
                        "<string>",
                        "<string>"
                      ],
                      "defaultPrestage": "<boolean>",
                      "department": "<string>",
                      "deviceEnrollmentProgramInstanceId": "<string>",
                      "displayName": "<string>",
                      "enableDeviceBasedActivationLock": "<boolean>",
                      "enrollmentSiteId": "<string>",
                      "installProfilesDuringSetup": "<boolean>",
                      "keepExistingLocationInformation": "<boolean>",
                      "keepExistingSiteMembership": "<boolean>",
                      "locationInformation": {
                        "buildingId": "<string>",
                        "departmentId": "<string>",
                        "email": "<string>",
                        "id": "<string>",
                        "phone": "<string>",
                        "position": "<string>",
                        "realname": "<string>",
                        "room": "<string>",
                        "username": "<string>",
                        "versionLock": "<integer>"
                      },
                      "mandatory": "<boolean>",
                      "mdmRemovable": "<boolean>",
                      "prestageInstalledProfileIds": [
                        "<string>",
                        "<string>"
                      ],
                      "preventActivationLock": "<boolean>",
                      "purchasingInformation": {
                        "appleCareId": "<string>",
                        "id": "<string>",
                        "leaseDate": "<string>",
                        "leased": "<boolean>",
                        "lifeExpectancy": "<integer>",
                        "poDate": "<string>",
                        "poNumber": "<string>",
                        "purchasePrice": "<string>",
                        "purchased": "<boolean>",
                        "purchasingAccount": "<string>",
                        "purchasingContact": "<string>",
                        "vendor": "<string>",
                        "versionLock": "<integer>",
                        "warrantyDate": "<string>"
                      },
                      "requireAuthentication": "<boolean>",
                      "supportEmailAddress": "<string>",
                      "supportPhoneNumber": "<string>",
                      "skipSetupItems": {
                        "esse_0": "<boolean>",
                        "ea_e": "<boolean>"
                      },
                      "anchorCertificates": [
                        "<string>",
                        "<string>"
                      ],
                      "enrollmentCustomizationId": "<string>",
                      "language": "<string>",
                      "region": "<string>",
                      "enableRecoveryLock": "<boolean>",
                      "recoveryLockPasswordType": "RANDOM",
                      "rotateRecoveryLockPassword": "<boolean>",
                      "prestageMinimumOsTargetVersionType": "MINIMUM_OS_LATEST_VERSION",
                      "minimumOsSpecificVersion": "<string>",
                      "id": "<string>",
                      "profileUuid": "<string>",
                      "siteId": "<string>",
                      "versionLock": "<integer>",
                      "accountSettings": {
                        "id": "<string>",
                        "payloadConfigured": false,
                        "localAdminAccountEnabled": false,
                        "adminUsername": "",
                        "hiddenAdminAccount": false,
                        "localUserManaged": false,
                        "userAccountType": "STANDARD",
                        "versionLock": 0,
                        "prefillPrimaryAccountInfoFeatureEnabled": false,
                        "prefillType": "CUSTOM",
                        "prefillAccountFullName": "",
                        "prefillAccountUserName": "",
                        "preventPrefillInfoFromModification": false
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v3_computer-prestages"
      },
      "post": {
        "tags": [
          "v3 > computer-prestages"
        ],
        "summary": "Create a Computer Prestage\n",
        "description": "Create a computer prestage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "authenticationPrompt": "<string>",
                  "autoAdvanceSetup": "<boolean>",
                  "customPackageDistributionPointId": "<string>",
                  "customPackageIds": [
                    "<string>",
                    "<string>"
                  ],
                  "defaultPrestage": "<boolean>",
                  "department": "<string>",
                  "deviceEnrollmentProgramInstanceId": "<string>",
                  "displayName": "<string>",
                  "enableDeviceBasedActivationLock": "<boolean>",
                  "enrollmentSiteId": "<string>",
                  "installProfilesDuringSetup": "<boolean>",
                  "keepExistingLocationInformation": "<boolean>",
                  "keepExistingSiteMembership": "<boolean>",
                  "locationInformation": {
                    "buildingId": "<string>",
                    "departmentId": "<string>",
                    "email": "<string>",
                    "id": "<string>",
                    "phone": "<string>",
                    "position": "<string>",
                    "realname": "<string>",
                    "room": "<string>",
                    "username": "<string>",
                    "versionLock": "<integer>"
                  },
                  "mandatory": "<boolean>",
                  "mdmRemovable": "<boolean>",
                  "prestageInstalledProfileIds": [
                    "<string>",
                    "<string>"
                  ],
                  "preventActivationLock": "<boolean>",
                  "purchasingInformation": {
                    "appleCareId": "<string>",
                    "id": "<string>",
                    "leaseDate": "<string>",
                    "leased": "<boolean>",
                    "lifeExpectancy": "<integer>",
                    "poDate": "<string>",
                    "poNumber": "<string>",
                    "purchasePrice": "<string>",
                    "purchased": "<boolean>",
                    "purchasingAccount": "<string>",
                    "purchasingContact": "<string>",
                    "vendor": "<string>",
                    "versionLock": "<integer>",
                    "warrantyDate": "<string>"
                  },
                  "requireAuthentication": "<boolean>",
                  "supportEmailAddress": "<string>",
                  "supportPhoneNumber": "<string>",
                  "skipSetupItems": {
                    "ut_0": "<boolean>"
                  },
                  "anchorCertificates": [
                    "<string>",
                    "<string>"
                  ],
                  "enrollmentCustomizationId": "<string>",
                  "language": "<string>",
                  "region": "<string>",
                  "enableRecoveryLock": "<boolean>",
                  "recoveryLockPasswordType": "RANDOM",
                  "rotateRecoveryLockPassword": "<boolean>",
                  "prestageMinimumOsTargetVersionType": "MINIMUM_OS_LATEST_MAJOR_VERSION",
                  "minimumOsSpecificVersion": "<string>",
                  "accountSettings": {
                    "id": "<string>",
                    "payloadConfigured": false,
                    "localAdminAccountEnabled": false,
                    "adminUsername": "",
                    "adminPassword": "",
                    "hiddenAdminAccount": false,
                    "localUserManaged": false,
                    "userAccountType": "STANDARD",
                    "versionLock": 0,
                    "prefillPrimaryAccountInfoFeatureEnabled": false,
                    "prefillType": "CUSTOM",
                    "prefillAccountFullName": "",
                    "prefillAccountUserName": "",
                    "preventPrefillInfoFromModification": false
                  },
                  "recoveryLockPassword": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v3_computer-prestages"
      }
    },
    "/v3/enrollment/access-groups/{id}": {
      "get": {
        "tags": [
          "v3 > enrollment > access-groups > {id}"
        ],
        "summary": "Retrieve the configured LDAP groups configured for User-Initiated Enrollment\n",
        "description": "Retrieves the configured LDAP groups configured for User-Initiated Enrollment.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Autogenerated Access Group ID.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "groupId": "<string>",
                  "ldapServerId": "<string>",
                  "name": "<string>",
                  "id": "<string>",
                  "siteId": "<string>",
                  "enterpriseEnrollmentEnabled": "<boolean>",
                  "personalEnrollmentEnabled": "<boolean>",
                  "accountDrivenUserEnrollmentEnabled": "<boolean>",
                  "requireEula": "<boolean>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v3_enrollment_access-groups_id"
      },
      "put": {
        "tags": [
          "v3 > enrollment > access-groups > {id}"
        ],
        "summary": "Modify the configured LDAP groups configured for User-Initiated Enrollment. Only exiting Access Groups can be updated.\n",
        "description": "Modify the configured LDAP groups configured for User-Initiated Enrollment. Only exiting Access Groups can be updated.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "groupId": "<string>",
                  "ldapServerId": "<string>",
                  "name": "<string>",
                  "siteId": "<string>",
                  "enterpriseEnrollmentEnabled": "<boolean>",
                  "personalEnrollmentEnabled": "<boolean>",
                  "accountDrivenUserEnrollmentEnabled": "<boolean>",
                  "requireEula": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Autogenerated Access Group ID.",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "groupId": "<string>",
                  "ldapServerId": "<string>",
                  "name": "<string>",
                  "id": "<string>",
                  "siteId": "<string>",
                  "enterpriseEnrollmentEnabled": "<boolean>",
                  "personalEnrollmentEnabled": "<boolean>",
                  "accountDrivenUserEnrollmentEnabled": "<boolean>",
                  "requireEula": "<boolean>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v3_enrollment_access-groups_id"
      },
      "delete": {
        "tags": [
          "v3 > enrollment > access-groups > {id}"
        ],
        "summary": "Delete an LDAP group's access to user initiated Enrollment.\n",
        "description": "Deletes an LDAP group's access to user initiated enrollment. The group \"All LDAP Users\" cannot be deleted, but it can be modified to disallow User-Initiated Enrollment.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Autogenerated Access Group ID.",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v3_enrollment_access-groups_id"
      }
    },
    "/v3/enrollment/access-groups": {
      "get": {
        "tags": [
          "v3 > enrollment > access-groups"
        ],
        "summary": "Retrieve the configured LDAP groups configured for User-Initiated Enrollment.\n",
        "description": "Retrieves the configured LDAP groups configured for User-Initiated Enrollment.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: `property:asc/desc`. Default sort\nis `name:asc`. Multiple sort criteria are supported and must be separated\nwith a comma. Example: `sort=date:desc,name:asc`.\n",
            "example": "name:asc"
          },
          {
            "name": "all-users-option-first",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Return \"All LDAP Users\" option on the first position if it is present in the current page",
            "example": "false"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "groupId": "<string>",
                      "ldapServerId": "<string>",
                      "name": "<string>",
                      "id": "<string>",
                      "siteId": "<string>",
                      "enterpriseEnrollmentEnabled": "<boolean>",
                      "personalEnrollmentEnabled": "<boolean>",
                      "accountDrivenUserEnrollmentEnabled": "<boolean>",
                      "requireEula": "<boolean>"
                    },
                    {
                      "groupId": "<string>",
                      "ldapServerId": "<string>",
                      "name": "<string>",
                      "id": "<string>",
                      "siteId": "<string>",
                      "enterpriseEnrollmentEnabled": "<boolean>",
                      "personalEnrollmentEnabled": "<boolean>",
                      "accountDrivenUserEnrollmentEnabled": "<boolean>",
                      "requireEula": "<boolean>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v3_enrollment_access-groups"
      },
      "post": {
        "tags": [
          "v3 > enrollment > access-groups"
        ],
        "summary": "Add the configured LDAP group for User-Initiated Enrollment.\n",
        "description": "Add the configured LDAP group for User-Initiated Enrollment.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "groupId": "<string>",
                  "ldapServerId": "<string>",
                  "name": "<string>",
                  "siteId": "<string>",
                  "enterpriseEnrollmentEnabled": "<boolean>",
                  "personalEnrollmentEnabled": "<boolean>",
                  "accountDrivenUserEnrollmentEnabled": "<boolean>",
                  "requireEula": "<boolean>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v3_enrollment_access-groups"
      }
    },
    "/v3/enrollment/filtered-language-codes": {
      "get": {
        "tags": [
          "v3 > enrollment > filtered-language-codes"
        ],
        "summary": "Retrieve the list of languages and corresponding ISO 639-1 Codes but only those not already added to Enrollment\n",
        "description": "Retrieves the list of languages and corresponding ISO 639-1 Codes, but only those not already added to Enrollment.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "value": "<string>",
                    "name": "<string>"
                  },
                  {
                    "value": "<string>",
                    "name": "<string>"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v3_enrollment_filtered-language-codes"
      }
    },
    "/v3/enrollment/language-codes": {
      "get": {
        "tags": [
          "v3 > enrollment > language-codes"
        ],
        "summary": "Retrieve the list of languages and corresponding ISO 639-1 Codes\n",
        "description": "Retrieves the list of languages and corresponding ISO 639-1 Codes.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "value": "<string>",
                    "name": "<string>"
                  },
                  {
                    "value": "<string>",
                    "name": "<string>"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_v3_enrollment_language-codes"
      }
    },
    "/v3/enrollment/languages/delete-multiple": {
      "post": {
        "tags": [
          "v3 > enrollment > languages > delete-multiple"
        ],
        "summary": "Delete multiple configured languages from User-Initiated Enrollment settings\n",
        "description": "Delete multiple configured languages from User-Initiated Enrollment settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "ids": [
                    "<string>",
                    "<string>"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v3_enrollment_languages_delete-multiple"
      }
    },
    "/v3/enrollment/languages/{languageId}": {
      "get": {
        "tags": [
          "v3 > enrollment > languages > {languageId}"
        ],
        "summary": "Retrieve the Enrollment messaging for a language\n",
        "description": "Retrieves the enrollment messaging for a language.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "languageId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Two letter ISO 639-1 Language Code",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "languageCode": "<string>",
                  "name": "<string>",
                  "title": "<string>",
                  "loginDescription": "<string>",
                  "username": "<string>",
                  "password": "<string>",
                  "loginButton": "<string>",
                  "deviceClassDescription": "<string>",
                  "deviceClassPersonal": "<string>",
                  "deviceClassPersonalDescription": "<string>",
                  "deviceClassEnterprise": "<string>",
                  "deviceClassEnterpriseDescription": "<string>",
                  "deviceClassButton": "<string>",
                  "personalEula": "<string>",
                  "enterpriseEula": "<string>",
                  "eulaButton": "<string>",
                  "siteDescription": "<string>",
                  "certificateText": "<string>",
                  "certificateButton": "<string>",
                  "certificateProfileName": "<string>",
                  "certificateProfileDescription": "<string>",
                  "personalText": "<string>",
                  "personalButton": "<string>",
                  "personalProfileName": "<string>",
                  "personalProfileDescription": "<string>",
                  "userEnrollmentText": "Enter your Managed Apple id to install the MDM Profile.",
                  "userEnrollmentButton": "Continue",
                  "userEnrollmentProfileName": "MDM Profile",
                  "userEnrollmentProfileDescription": "MDM Profile for mobile device management",
                  "enterpriseText": "<string>",
                  "enterpriseButton": "<string>",
                  "enterpriseProfileName": "<string>",
                  "enterpriseProfileDescription": "<string>",
                  "enterprisePending": "<string>",
                  "quickAddText": "<string>",
                  "quickAddButton": "<string>",
                  "quickAddName": "QuickAdd.pkg",
                  "quickAddPending": "<string>",
                  "completeMessage": "<string>",
                  "failedMessage": "<string>",
                  "tryAgainButton": "<string>",
                  "checkNowButton": "<string>",
                  "checkEnrollmentMessage": "<string>",
                  "logoutButton": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v3_enrollment_languages_languageId"
      },
      "put": {
        "tags": [
          "v3 > enrollment > languages > {languageId}"
        ],
        "summary": "Edit Enrollment messaging for a language\n",
        "description": "Edit enrollment messaging for a language.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "languageCode": "<string>",
                  "name": "<string>",
                  "title": "<string>",
                  "loginDescription": "<string>",
                  "username": "<string>",
                  "password": "<string>",
                  "loginButton": "<string>",
                  "deviceClassDescription": "<string>",
                  "deviceClassPersonal": "<string>",
                  "deviceClassPersonalDescription": "<string>",
                  "deviceClassEnterprise": "<string>",
                  "deviceClassEnterpriseDescription": "<string>",
                  "deviceClassButton": "<string>",
                  "personalEula": "<string>",
                  "enterpriseEula": "<string>",
                  "eulaButton": "<string>",
                  "siteDescription": "<string>",
                  "certificateText": "<string>",
                  "certificateButton": "<string>",
                  "certificateProfileName": "<string>",
                  "certificateProfileDescription": "<string>",
                  "personalText": "<string>",
                  "personalButton": "<string>",
                  "personalProfileName": "<string>",
                  "personalProfileDescription": "<string>",
                  "userEnrollmentText": "Enter your Managed Apple id to install the MDM Profile.",
                  "userEnrollmentButton": "Continue",
                  "userEnrollmentProfileName": "MDM Profile",
                  "userEnrollmentProfileDescription": "MDM Profile for mobile device management",
                  "enterpriseText": "<string>",
                  "enterpriseButton": "<string>",
                  "enterpriseProfileName": "<string>",
                  "enterpriseProfileDescription": "<string>",
                  "enterprisePending": "<string>",
                  "quickAddText": "<string>",
                  "quickAddButton": "<string>",
                  "quickAddName": "QuickAdd.pkg",
                  "quickAddPending": "<string>",
                  "completeMessage": "<string>",
                  "failedMessage": "<string>",
                  "tryAgainButton": "<string>",
                  "checkNowButton": "<string>",
                  "checkEnrollmentMessage": "<string>",
                  "logoutButton": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "languageId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Two letter ISO 639-1 Language Code",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "languageCode": "<string>",
                  "name": "<string>",
                  "title": "<string>",
                  "loginDescription": "<string>",
                  "username": "<string>",
                  "password": "<string>",
                  "loginButton": "<string>",
                  "deviceClassDescription": "<string>",
                  "deviceClassPersonal": "<string>",
                  "deviceClassPersonalDescription": "<string>",
                  "deviceClassEnterprise": "<string>",
                  "deviceClassEnterpriseDescription": "<string>",
                  "deviceClassButton": "<string>",
                  "personalEula": "<string>",
                  "enterpriseEula": "<string>",
                  "eulaButton": "<string>",
                  "siteDescription": "<string>",
                  "certificateText": "<string>",
                  "certificateButton": "<string>",
                  "certificateProfileName": "<string>",
                  "certificateProfileDescription": "<string>",
                  "personalText": "<string>",
                  "personalButton": "<string>",
                  "personalProfileName": "<string>",
                  "personalProfileDescription": "<string>",
                  "userEnrollmentText": "Enter your Managed Apple id to install the MDM Profile.",
                  "userEnrollmentButton": "Continue",
                  "userEnrollmentProfileName": "MDM Profile",
                  "userEnrollmentProfileDescription": "MDM Profile for mobile device management",
                  "enterpriseText": "<string>",
                  "enterpriseButton": "<string>",
                  "enterpriseProfileName": "<string>",
                  "enterpriseProfileDescription": "<string>",
                  "enterprisePending": "<string>",
                  "quickAddText": "<string>",
                  "quickAddButton": "<string>",
                  "quickAddName": "QuickAdd.pkg",
                  "quickAddPending": "<string>",
                  "completeMessage": "<string>",
                  "failedMessage": "<string>",
                  "tryAgainButton": "<string>",
                  "checkNowButton": "<string>",
                  "checkEnrollmentMessage": "<string>",
                  "logoutButton": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v3_enrollment_languages_languageId"
      },
      "delete": {
        "tags": [
          "v3 > enrollment > languages > {languageId}"
        ],
        "summary": "Delete the Enrollment messaging for a language\n",
        "description": "Delete the enrollment messaging for a language.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "languageId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Two letter ISO 639-1 Language Code",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_v3_enrollment_languages_languageId"
      }
    },
    "/v3/enrollment/languages": {
      "get": {
        "tags": [
          "v3 > enrollment > languages"
        ],
        "summary": "Get an array of the language codes that have Enrollment messaging\n",
        "description": "Returns an array of the language codes that have enrollment messaging currently configured.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort\nis `languageCode:asc`. Multiple sort criteria are supported and must be separated\nwith a comma. Example: `sort=date:desc,name:asc`.\n",
            "example": "languageCode:asc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "languageCode": "<string>",
                      "name": "<string>",
                      "title": "<string>",
                      "loginDescription": "<string>",
                      "username": "<string>",
                      "password": "<string>",
                      "loginButton": "<string>",
                      "deviceClassDescription": "<string>",
                      "deviceClassPersonal": "<string>",
                      "deviceClassPersonalDescription": "<string>",
                      "deviceClassEnterprise": "<string>",
                      "deviceClassEnterpriseDescription": "<string>",
                      "deviceClassButton": "<string>",
                      "personalEula": "<string>",
                      "enterpriseEula": "<string>",
                      "eulaButton": "<string>",
                      "siteDescription": "<string>",
                      "certificateText": "<string>",
                      "certificateButton": "<string>",
                      "certificateProfileName": "<string>",
                      "certificateProfileDescription": "<string>",
                      "personalText": "<string>",
                      "personalButton": "<string>",
                      "personalProfileName": "<string>",
                      "personalProfileDescription": "<string>",
                      "userEnrollmentText": "Enter your Managed Apple id to install the MDM Profile.",
                      "userEnrollmentButton": "Continue",
                      "userEnrollmentProfileName": "MDM Profile",
                      "userEnrollmentProfileDescription": "MDM Profile for mobile device management",
                      "enterpriseText": "<string>",
                      "enterpriseButton": "<string>",
                      "enterpriseProfileName": "<string>",
                      "enterpriseProfileDescription": "<string>",
                      "enterprisePending": "<string>",
                      "quickAddText": "<string>",
                      "quickAddButton": "<string>",
                      "quickAddName": "QuickAdd.pkg",
                      "quickAddPending": "<string>",
                      "completeMessage": "<string>",
                      "failedMessage": "<string>",
                      "tryAgainButton": "<string>",
                      "checkNowButton": "<string>",
                      "checkEnrollmentMessage": "<string>",
                      "logoutButton": "<string>"
                    },
                    {
                      "languageCode": "<string>",
                      "name": "<string>",
                      "title": "<string>",
                      "loginDescription": "<string>",
                      "username": "<string>",
                      "password": "<string>",
                      "loginButton": "<string>",
                      "deviceClassDescription": "<string>",
                      "deviceClassPersonal": "<string>",
                      "deviceClassPersonalDescription": "<string>",
                      "deviceClassEnterprise": "<string>",
                      "deviceClassEnterpriseDescription": "<string>",
                      "deviceClassButton": "<string>",
                      "personalEula": "<string>",
                      "enterpriseEula": "<string>",
                      "eulaButton": "<string>",
                      "siteDescription": "<string>",
                      "certificateText": "<string>",
                      "certificateButton": "<string>",
                      "certificateProfileName": "<string>",
                      "certificateProfileDescription": "<string>",
                      "personalText": "<string>",
                      "personalButton": "<string>",
                      "personalProfileName": "<string>",
                      "personalProfileDescription": "<string>",
                      "userEnrollmentText": "Enter your Managed Apple id to install the MDM Profile.",
                      "userEnrollmentButton": "Continue",
                      "userEnrollmentProfileName": "MDM Profile",
                      "userEnrollmentProfileDescription": "MDM Profile for mobile device management",
                      "enterpriseText": "<string>",
                      "enterpriseButton": "<string>",
                      "enterpriseProfileName": "<string>",
                      "enterpriseProfileDescription": "<string>",
                      "enterprisePending": "<string>",
                      "quickAddText": "<string>",
                      "quickAddButton": "<string>",
                      "quickAddName": "QuickAdd.pkg",
                      "quickAddPending": "<string>",
                      "completeMessage": "<string>",
                      "failedMessage": "<string>",
                      "tryAgainButton": "<string>",
                      "checkNowButton": "<string>",
                      "checkEnrollmentMessage": "<string>",
                      "logoutButton": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v3_enrollment_languages"
      }
    },
    "/v3/enrollment": {
      "get": {
        "tags": [
          "v3 > enrollment"
        ],
        "summary": "Get Enrollment object and Re-enrollment settings\n",
        "description": "Gets Enrollment object and re-enrollment settings.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "managementUsername": "",
                  "installSingleProfile": false,
                  "signingMdmProfileEnabled": false,
                  "mdmSigningCertificate": {
                    "filename": "null",
                    "md5Sum": ""
                  },
                  "restrictReenrollment": false,
                  "flushLocationInformation": false,
                  "flushLocationHistoryInformation": false,
                  "flushPolicyHistory": false,
                  "flushExtensionAttributes": false,
                  "flushMdmCommandsOnReenroll": "DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED",
                  "macOsEnterpriseEnrollmentEnabled": false,
                  "createManagementAccount": true,
                  "hideManagementAccount": false,
                  "allowSshOnlyManagementAccount": false,
                  "ensureSshRunning": true,
                  "launchSelfService": false,
                  "signQuickAdd": false,
                  "developerCertificateIdentity": {
                    "filename": "null",
                    "md5Sum": ""
                  },
                  "developerCertificateIdentityDetails": {
                    "subject": "",
                    "serialNumber": ""
                  },
                  "mdmSigningCertificateDetails": {
                    "subject": "",
                    "serialNumber": ""
                  },
                  "iosEnterpriseEnrollmentEnabled": true,
                  "iosPersonalEnrollmentEnabled": false,
                  "personalDeviceEnrollmentType": "PERSONALDEVICEPROFILES",
                  "accountDrivenUserEnrollmentEnabled": false,
                  "accountDrivenDeviceEnrollmentEnabled": false
                }
              }
            }
          }
        },
        "operationId": "get_v3_enrollment"
      },
      "put": {
        "tags": [
          "v3 > enrollment"
        ],
        "summary": "Update Enrollment object\n",
        "description": "Update enrollment object. Regarding the `developerCertificateIdentity`,\nif this object is omitted, the certificate will not be deleted from Jamf Pro.\nThe `identityKeystore` is the entire cert file as a base64 encoded string. The\n`md5Sum` field is not required in the PUT request, but is calculated and returned\nin the response.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "managementUsername": "",
                  "installSingleProfile": false,
                  "signingMdmProfileEnabled": false,
                  "mdmSigningCertificate": {
                    "filename": "null",
                    "keystorePassword": "",
                    "identityKeystore": "/5jIvG9VFLKPV/fEW7FLbqg="
                  },
                  "restrictReenrollment": false,
                  "flushLocationInformation": false,
                  "flushLocationHistoryInformation": false,
                  "flushPolicyHistory": false,
                  "flushExtensionAttributes": false,
                  "flushMdmCommandsOnReenroll": "DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED",
                  "macOsEnterpriseEnrollmentEnabled": false,
                  "createManagementAccount": true,
                  "hideManagementAccount": false,
                  "allowSshOnlyManagementAccount": false,
                  "ensureSshRunning": true,
                  "launchSelfService": false,
                  "signQuickAdd": false,
                  "developerCertificateIdentity": {
                    "filename": "null",
                    "keystorePassword": "",
                    "identityKeystore": "SKOKy9OcunKVBHRJ3AYh18gtOL6hq+9NRB=="
                  },
                  "developerCertificateIdentityDetails": {
                    "subject": "",
                    "serialNumber": ""
                  },
                  "mdmSigningCertificateDetails": {
                    "subject": "",
                    "serialNumber": ""
                  },
                  "iosEnterpriseEnrollmentEnabled": true,
                  "iosPersonalEnrollmentEnabled": false,
                  "personalDeviceEnrollmentType": "PERSONALDEVICEPROFILES",
                  "accountDrivenUserEnrollmentEnabled": false,
                  "accountDrivenDeviceEnrollmentEnabled": false
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "managementUsername": "",
                  "installSingleProfile": false,
                  "signingMdmProfileEnabled": false,
                  "mdmSigningCertificate": {
                    "filename": "null",
                    "md5Sum": ""
                  },
                  "restrictReenrollment": false,
                  "flushLocationInformation": false,
                  "flushLocationHistoryInformation": false,
                  "flushPolicyHistory": false,
                  "flushExtensionAttributes": false,
                  "flushMdmCommandsOnReenroll": "DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED",
                  "macOsEnterpriseEnrollmentEnabled": false,
                  "createManagementAccount": true,
                  "hideManagementAccount": false,
                  "allowSshOnlyManagementAccount": false,
                  "ensureSshRunning": true,
                  "launchSelfService": false,
                  "signQuickAdd": false,
                  "developerCertificateIdentity": {
                    "filename": "null",
                    "md5Sum": ""
                  },
                  "developerCertificateIdentityDetails": {
                    "subject": "",
                    "serialNumber": ""
                  },
                  "mdmSigningCertificateDetails": {
                    "subject": "",
                    "serialNumber": ""
                  },
                  "iosEnterpriseEnrollmentEnabled": true,
                  "iosPersonalEnrollmentEnabled": false,
                  "personalDeviceEnrollmentType": "PERSONALDEVICEPROFILES",
                  "accountDrivenUserEnrollmentEnabled": false,
                  "accountDrivenDeviceEnrollmentEnabled": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v3_enrollment"
      }
    },
    "/v3/sso/dependencies": {
      "get": {
        "tags": [
          "v3 > sso > dependencies"
        ],
        "summary": "Retrieve the list of Enrollment Customizations using SSO\n",
        "description": "Retrieves the list of Enrollment Customizations using SSO",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "dependencies": [
                    {
                      "name": "<string>",
                      "humanReadableName": "<string>",
                      "hyperlink": "<string>"
                    },
                    {
                      "name": "<string>",
                      "humanReadableName": "<string>",
                      "hyperlink": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v3_sso_dependencies"
      }
    },
    "/v3/sso/disable": {
      "post": {
        "tags": [
          "v3 > sso > disable"
        ],
        "summary": "Disable SSO\n",
        "description": "Disable SSO",
        "requestBody": {
          "content": {}
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "post_v3_sso_disable"
      }
    },
    "/v3/sso/history": {
      "get": {
        "tags": [
          "v3 > sso > history"
        ],
        "summary": "Get SSO history object\n",
        "description": "Gets SSO history object\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "id:desc"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_v3_sso_history"
      },
      "post": {
        "tags": [
          "v3 > sso > history"
        ],
        "summary": "Add SSO history object notes\n",
        "description": "Adds SSO history object notes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_v3_sso_history"
      }
    },
    "/v3/sso/metadata/download": {
      "get": {
        "tags": [
          "v3 > sso > metadata > download"
        ],
        "summary": "Download the Jamf Pro SAML metadata file\n",
        "description": "Download the Jamf Pro SAML metadata file",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/plain"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/plain"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "<binary>"
              }
            }
          }
        },
        "operationId": "get_v3_sso_metadata_download"
      }
    },
    "/v3/sso": {
      "get": {
        "tags": [
          "v3 > sso"
        ],
        "summary": "Retrieve the current Single Sign On configuration settings\n",
        "description": "Retrieves the current Single Sign On configuration settings",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "configurationType": "OIDC_WITH_SAML",
                  "enrollmentSsoForAccountDrivenEnrollmentEnabled": false,
                  "groupEnrollmentAccessEnabled": false,
                  "oidcSettings": {
                    "userMapping": "USERNAME"
                  },
                  "samlSettings": {
                    "tokenExpirationDisabled": false,
                    "userAttributeEnabled": false,
                    "userAttributeName": " ",
                    "userMapping": "USERNAME",
                    "groupAttributeName": "http://schemas.xmlsoap.org/claims/Group",
                    "groupRdnKey": " ",
                    "idpProviderType": "CENTRIFY",
                    "idpUrl": "<string>",
                    "entityId": "<string>",
                    "metadataFileName": "<string>",
                    "otherProviderTypeName": " ",
                    "federationMetadataFile": "",
                    "metadataSource": "UNKNOWN",
                    "sessionTimeout": 480
                  },
                  "ssoBypassAllowed": false,
                  "ssoEnabled": false,
                  "ssoForEnrollmentEnabled": false,
                  "ssoForMacOsSelfServiceEnabled": false,
                  "enrollmentSsoConfig": {
                    "managementHint": ""
                  },
                  "groupEnrollmentAccessName": " "
                }
              }
            }
          }
        },
        "operationId": "get_v3_sso"
      },
      "put": {
        "tags": [
          "v3 > sso"
        ],
        "summary": "Updates the current Single Sign On configuration settings\n",
        "description": "Updates the current Single Sign On configuration settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "configurationType": "OIDC_WITH_SAML",
                  "enrollmentSsoForAccountDrivenEnrollmentEnabled": false,
                  "groupEnrollmentAccessEnabled": false,
                  "oidcSettings": {
                    "userMapping": "USERNAME"
                  },
                  "samlSettings": {
                    "tokenExpirationDisabled": false,
                    "userAttributeEnabled": false,
                    "userAttributeName": " ",
                    "userMapping": "USERNAME",
                    "groupAttributeName": "http://schemas.xmlsoap.org/claims/Group",
                    "groupRdnKey": " ",
                    "idpProviderType": "CENTRIFY",
                    "idpUrl": "<string>",
                    "entityId": "<string>",
                    "metadataFileName": "<string>",
                    "otherProviderTypeName": " ",
                    "federationMetadataFile": "",
                    "metadataSource": "UNKNOWN",
                    "sessionTimeout": 480
                  },
                  "ssoBypassAllowed": false,
                  "ssoEnabled": false,
                  "ssoForEnrollmentEnabled": false,
                  "ssoForMacOsSelfServiceEnabled": false,
                  "enrollmentSsoConfig": {
                    "managementHint": ""
                  },
                  "groupEnrollmentAccessName": " "
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "configurationType": "OIDC_WITH_SAML",
                  "enrollmentSsoForAccountDrivenEnrollmentEnabled": false,
                  "groupEnrollmentAccessEnabled": false,
                  "oidcSettings": {
                    "userMapping": "USERNAME"
                  },
                  "samlSettings": {
                    "tokenExpirationDisabled": false,
                    "userAttributeEnabled": false,
                    "userAttributeName": " ",
                    "userMapping": "USERNAME",
                    "groupAttributeName": "http://schemas.xmlsoap.org/claims/Group",
                    "groupRdnKey": " ",
                    "idpProviderType": "CENTRIFY",
                    "idpUrl": "<string>",
                    "entityId": "<string>",
                    "metadataFileName": "<string>",
                    "otherProviderTypeName": " ",
                    "federationMetadataFile": "",
                    "metadataSource": "UNKNOWN",
                    "sessionTimeout": 480
                  },
                  "ssoBypassAllowed": false,
                  "ssoEnabled": false,
                  "ssoForEnrollmentEnabled": false,
                  "ssoForMacOsSelfServiceEnabled": false,
                  "enrollmentSsoConfig": {
                    "managementHint": ""
                  },
                  "groupEnrollmentAccessName": " "
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v3_sso"
      }
    },
    "/v4/enrollment": {
      "get": {
        "tags": [
          "v4 > enrollment"
        ],
        "summary": "Get Enrollment object and Re-enrollment settings\n",
        "description": "Gets Enrollment object and re-enrollment settings.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "managementUsername": "",
                  "installSingleProfile": false,
                  "signingMdmProfileEnabled": false,
                  "mdmSigningCertificate": {
                    "filename": "null",
                    "md5Sum": ""
                  },
                  "restrictReenrollment": false,
                  "flushLocationInformation": false,
                  "flushLocationHistoryInformation": false,
                  "flushPolicyHistory": false,
                  "flushExtensionAttributes": false,
                  "flushSoftwareUpdatePlans": false,
                  "flushMdmCommandsOnReenroll": "DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED",
                  "macOsEnterpriseEnrollmentEnabled": false,
                  "createManagementAccount": true,
                  "hideManagementAccount": false,
                  "allowSshOnlyManagementAccount": false,
                  "ensureSshRunning": true,
                  "launchSelfService": false,
                  "signQuickAdd": false,
                  "developerCertificateIdentity": {
                    "filename": "null",
                    "md5Sum": ""
                  },
                  "developerCertificateIdentityDetails": {
                    "subject": "",
                    "serialNumber": ""
                  },
                  "mdmSigningCertificateDetails": {
                    "subject": "",
                    "serialNumber": ""
                  },
                  "iosEnterpriseEnrollmentEnabled": true,
                  "iosPersonalEnrollmentEnabled": false,
                  "personalDeviceEnrollmentType": "PERSONALDEVICEPROFILES",
                  "accountDrivenUserEnrollmentEnabled": false,
                  "accountDrivenDeviceIosEnrollmentEnabled": false,
                  "accountDrivenDeviceMacosEnrollmentEnabled": false,
                  "accountDrivenUserVisionosEnrollmentEnabled": false,
                  "accountDrivenDeviceVisionosEnrollmentEnabled": false
                }
              }
            }
          }
        },
        "operationId": "get_v4_enrollment"
      },
      "put": {
        "tags": [
          "v4 > enrollment"
        ],
        "summary": "Update Enrollment object\n",
        "description": "Update enrollment object. Regarding the `developerCertificateIdentity`,\nif this object is omitted, the certificate will not be deleted from Jamf Pro.\nThe `identityKeystore` is the entire cert file as a base64 encoded string. The\n`md5Sum` field is not required in the PUT request, but is calculated and returned\nin the response.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "managementUsername": "",
                  "installSingleProfile": false,
                  "signingMdmProfileEnabled": false,
                  "mdmSigningCertificate": {
                    "filename": "null",
                    "keystorePassword": "",
                    "identityKeystore": ""
                  },
                  "restrictReenrollment": false,
                  "flushLocationInformation": false,
                  "flushLocationHistoryInformation": false,
                  "flushPolicyHistory": false,
                  "flushExtensionAttributes": false,
                  "flushSoftwareUpdatePlans": false,
                  "flushMdmCommandsOnReenroll": "DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED",
                  "macOsEnterpriseEnrollmentEnabled": false,
                  "createManagementAccount": true,
                  "hideManagementAccount": false,
                  "allowSshOnlyManagementAccount": false,
                  "ensureSshRunning": true,
                  "launchSelfService": false,
                  "signQuickAdd": false,
                  "developerCertificateIdentity": {
                    "filename": "null",
                    "keystorePassword": "",
                    "identityKeystore": "nm8YBfxcO7=="
                  },
                  "developerCertificateIdentityDetails": {
                    "subject": "",
                    "serialNumber": ""
                  },
                  "mdmSigningCertificateDetails": {
                    "subject": "",
                    "serialNumber": ""
                  },
                  "iosEnterpriseEnrollmentEnabled": true,
                  "iosPersonalEnrollmentEnabled": false,
                  "personalDeviceEnrollmentType": "PERSONALDEVICEPROFILES",
                  "accountDrivenUserEnrollmentEnabled": false,
                  "accountDrivenDeviceIosEnrollmentEnabled": false,
                  "accountDrivenDeviceMacosEnrollmentEnabled": false,
                  "accountDrivenUserVisionosEnrollmentEnabled": false,
                  "accountDrivenDeviceVisionosEnrollmentEnabled": false
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "managementUsername": "",
                  "installSingleProfile": false,
                  "signingMdmProfileEnabled": false,
                  "mdmSigningCertificate": {
                    "filename": "null",
                    "md5Sum": ""
                  },
                  "restrictReenrollment": false,
                  "flushLocationInformation": false,
                  "flushLocationHistoryInformation": false,
                  "flushPolicyHistory": false,
                  "flushExtensionAttributes": false,
                  "flushSoftwareUpdatePlans": false,
                  "flushMdmCommandsOnReenroll": "DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED",
                  "macOsEnterpriseEnrollmentEnabled": false,
                  "createManagementAccount": true,
                  "hideManagementAccount": false,
                  "allowSshOnlyManagementAccount": false,
                  "ensureSshRunning": true,
                  "launchSelfService": false,
                  "signQuickAdd": false,
                  "developerCertificateIdentity": {
                    "filename": "null",
                    "md5Sum": ""
                  },
                  "developerCertificateIdentityDetails": {
                    "subject": "",
                    "serialNumber": ""
                  },
                  "mdmSigningCertificateDetails": {
                    "subject": "",
                    "serialNumber": ""
                  },
                  "iosEnterpriseEnrollmentEnabled": true,
                  "iosPersonalEnrollmentEnabled": false,
                  "personalDeviceEnrollmentType": "PERSONALDEVICEPROFILES",
                  "accountDrivenUserEnrollmentEnabled": false,
                  "accountDrivenDeviceIosEnrollmentEnabled": false,
                  "accountDrivenDeviceMacosEnrollmentEnabled": false,
                  "accountDrivenUserVisionosEnrollmentEnabled": false,
                  "accountDrivenDeviceVisionosEnrollmentEnabled": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_v4_enrollment"
      }
    },
    "/auth/current": {
      "post": {
        "tags": [
          "auth > current"
        ],
        "summary": "Get the authorization details associated with the current API token\n",
        "description": "Get the authorization details associated with the current API token for the users current site",
        "requestBody": {
          "content": {}
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "account": {
                    "id": "<integer>",
                    "username": "<string>",
                    "realName": "<string>",
                    "email": "<string>",
                    "preferences": {
                      "language": "<string>",
                      "dateFormat": "<string>",
                      "region": "<string>",
                      "timezone": "<string>",
                      "isDisableRelativeDates": "<boolean>"
                    },
                    "isMultiSiteAdmin": "<boolean>",
                    "accessLevel": "FullAccess",
                    "privilegeSet": "CUSTOM",
                    "privileges": [
                      "<string>",
                      "<string>"
                    ],
                    "groupIds": [
                      "<integer>",
                      "<integer>"
                    ],
                    "currentSiteId": "<integer>"
                  },
                  "sites": [
                    {
                      "id": "<integer>",
                      "name": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "name": "<string>"
                    }
                  ],
                  "authenticationType": "CLOUD_CONNECTOR"
                }
              }
            }
          }
        },
        "operationId": "post_auth_current"
      }
    },
    "/auth/invalidateToken": {
      "post": {
        "tags": [
          "auth > invalidateToken"
        ],
        "summary": "Invalidate current token\n",
        "description": "Invalidates current token",
        "requestBody": {
          "content": {}
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "post_auth_invalidateToken"
      }
    },
    "/auth/keepAlive": {
      "post": {
        "tags": [
          "auth > keepAlive"
        ],
        "summary": "Invalidate existing token and generates new token\n",
        "description": "Invalidates existing token and generates new token with extended expiration based on existing token credentials.",
        "requestBody": {
          "content": {}
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "token": "<string>",
                  "expires": "<integer>"
                }
              }
            }
          }
        },
        "operationId": "post_auth_keepAlive"
      }
    },
    "/auth": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get all the Authorization details associated with the current api\n",
        "description": "Get all the authorization details associated with the current api token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "account": {
                    "id": "<integer>",
                    "username": "<string>",
                    "realName": "<string>",
                    "email": "<string>",
                    "preferences": {
                      "language": "<string>",
                      "dateFormat": "<string>",
                      "region": "<string>",
                      "timezone": "<string>",
                      "isDisableRelativeDates": "<boolean>"
                    },
                    "isMultiSiteAdmin": "<boolean>",
                    "accessLevel": "GroupBasedAccess",
                    "privilegeSet": "ADMINISTRATOR",
                    "privilegesBySite": {
                      "sed6": [
                        "<string>",
                        "<string>"
                      ],
                      "magna75": [
                        "<string>",
                        "<string>"
                      ]
                    },
                    "groupIds": [
                      "<integer>",
                      "<integer>"
                    ],
                    "currentSiteId": "<integer>"
                  },
                  "accountGroups": [
                    {
                      "accessLevel": "GroupBasedAccess",
                      "privilegeSet": "AUDITOR",
                      "siteId": "<integer>",
                      "privileges": [
                        "<string>",
                        "<string>"
                      ],
                      "memberUserIds": [
                        "<integer>",
                        "<integer>"
                      ]
                    },
                    {
                      "accessLevel": "FullAccess",
                      "privilegeSet": "ENROLLMENT",
                      "siteId": "<integer>",
                      "privileges": [
                        "<string>",
                        "<string>"
                      ],
                      "memberUserIds": [
                        "<integer>",
                        "<integer>"
                      ]
                    }
                  ],
                  "sites": [
                    {
                      "id": "<integer>",
                      "name": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "name": "<string>"
                    }
                  ],
                  "authenticationType": "NATIVE_APP_API_INTEGRATION"
                }
              }
            }
          }
        },
        "operationId": "get_auth"
      }
    },
    "/preview/computers": {
      "get": {
        "tags": [
          "preview > computers"
        ],
        "summary": "Return a list of Computers\n",
        "description": "Returns a list of computers.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc",
            "example": "name:asc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<string>",
                      "location": {
                        "username": "<string>",
                        "position": "<string>",
                        "room": "<string>"
                      },
                      "name": "<string>",
                      "udid": "<string>",
                      "serialNumber": "<string>",
                      "lastContactDate": "<string>",
                      "lastReportDate": "<string>",
                      "lastEnrolledDate": "<string>",
                      "operatingSystemVersion": "<string>",
                      "operatingSystemBuild": "<string>",
                      "operatingSystemSupplementalBuildVersion": "<string>",
                      "operatingSystemRapidSecurityResponse": "<string>",
                      "ipAddress": "<string>",
                      "macAddress": "<string>",
                      "assetTag": "<string>",
                      "modelIdentifier": "<string>",
                      "mdmAccessRights": "<integer>",
                      "isManaged": "<boolean>",
                      "managementId": "<string>"
                    },
                    {
                      "id": "<string>",
                      "location": {
                        "username": "<string>",
                        "position": "<string>",
                        "room": "<string>"
                      },
                      "name": "<string>",
                      "udid": "<string>",
                      "serialNumber": "<string>",
                      "lastContactDate": "<string>",
                      "lastReportDate": "<string>",
                      "lastEnrolledDate": "<string>",
                      "operatingSystemVersion": "<string>",
                      "operatingSystemBuild": "<string>",
                      "operatingSystemSupplementalBuildVersion": "<string>",
                      "operatingSystemRapidSecurityResponse": "<string>",
                      "ipAddress": "<string>",
                      "macAddress": "<string>",
                      "assetTag": "<string>",
                      "modelIdentifier": "<string>",
                      "mdmAccessRights": "<integer>",
                      "isManaged": "<boolean>",
                      "managementId": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_preview_computers"
      }
    },
    "/preview/mdm/commands": {
      "post": {
        "tags": [
          "preview > mdm > commands"
        ],
        "summary": "Post a command for creation and queuing\n",
        "description": "Provided an MDM command type and appropriate information, will create and then queue said command.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "clientData": [
                    {
                      "managementId": "<string>"
                    },
                    {
                      "managementId": "<string>"
                    }
                  ],
                  "commandData": {
                    "commandType": "SET_AUTO_ADMIN_PASSWORD",
                    "identifier": "<string>",
                    "redemptionCode": "<string>"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "id": "<string>",
                    "href": "<string>"
                  },
                  {
                    "id": "<string>",
                    "href": "<string>"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_preview_mdm_commands"
      }
    },
    "/preview/remote-administration-configurations/team-viewer/{configurationId}/sessions/{sessionId}/close": {
      "post": {
        "tags": [
          "preview > remote-administration-configurations > team-viewer > {configurationId} > sessions > {sessionId} > close"
        ],
        "summary": "Close a session",
        "description": "Changes the session state from open to close. Closing a session means it is not possible to establish new remote connection between devices",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "configurationId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Team Viewer connection configuration",
            "example": "<string>"
          },
          {
            "name": "sessionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Team Viewer session",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_preview_remote-administration-configurations_team-viewer_configurationId_sessions_sessionId_close"
      }
    },
    "/preview/remote-administration-configurations/team-viewer/{configurationId}/sessions/{sessionId}/resend-notification": {
      "post": {
        "tags": [
          "preview > remote-administration-configurations > team-viewer > {configurationId} > sessions > {sessionId} > resend-notification"
        ],
        "summary": "Resend nofications for a session",
        "description": "Resends configured notifications (e.g. Self Service push notifications).",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "configurationId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Team Viewer connection configuration",
            "example": "<string>"
          },
          {
            "name": "sessionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Team Viewer session",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_preview_remote-administration-configurations_team-viewer_configurationId_sessions_sessionId_resend-notification"
      }
    },
    "/preview/remote-administration-configurations/team-viewer/{configurationId}/sessions/{sessionId}/status": {
      "get": {
        "tags": [
          "preview > remote-administration-configurations > team-viewer > {configurationId} > sessions > {sessionId} > status"
        ],
        "summary": "Get a session status by its ID\n",
        "description": "Returns a session status if found.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "configurationId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Team Viewer connection configuration",
            "example": "<string>"
          },
          {
            "name": "sessionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Team Viewer session",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "sessionState": "UNKNOWN",
                  "online": "<boolean>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_preview_remote-administration-configurations_team-viewer_configurationId_sessions_sessionId_status"
      }
    },
    "/preview/remote-administration-configurations/team-viewer/{configurationId}/sessions/{sessionId}": {
      "get": {
        "tags": [
          "preview > remote-administration-configurations > team-viewer > {configurationId} > sessions > {sessionId}"
        ],
        "summary": "Get a session by its ID\n",
        "description": "Returns a session details if found.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "configurationId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Team Viewer connection configuration",
            "example": "<string>"
          },
          {
            "name": "sessionId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Team Viewer session",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "code": "<string>",
                  "description": "<string>",
                  "supporterLink": "<string>",
                  "endUserLink": "<string>",
                  "deviceId": "<string>",
                  "deviceName": "<string>",
                  "deviceType": "COMPUTER",
                  "state": "OPEN",
                  "creatorId": "<string>",
                  "creatorName": "<string>",
                  "createdAt": "<dateTime>"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_preview_remote-administration-configurations_team-viewer_configurationId_sessions_sessionId"
      }
    },
    "/preview/remote-administration-configurations/team-viewer/{configurationId}/sessions": {
      "get": {
        "tags": [
          "preview > remote-administration-configurations > team-viewer > {configurationId} > sessions"
        ],
        "summary": "Get a paginated list of sessions\n",
        "description": "Returns a paginated list of sessions for a given configuration ID",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query in the RSQL format, allowing to filter sessions collection.\nDefault filter is empty query - returning all results for the requested page.\n\nFields allowed in the query: `deviceId`, `deviceType`, `state`\n\nThis param can be combined with paging.\n"
          },
          {
            "name": "configurationId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Team Viewer connection configuration",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "supporterLink": "<string>",
                      "endUserLink": "<string>",
                      "deviceId": "<string>",
                      "deviceName": "<string>",
                      "deviceType": "COMPUTER",
                      "state": "OPEN",
                      "creatorId": "<string>",
                      "creatorName": "<string>",
                      "createdAt": "<dateTime>"
                    },
                    {
                      "id": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "supporterLink": "<string>",
                      "endUserLink": "<string>",
                      "deviceId": "<string>",
                      "deviceName": "<string>",
                      "deviceType": "COMPUTER",
                      "state": "UNKNOWN",
                      "creatorId": "<string>",
                      "creatorName": "<string>",
                      "createdAt": "<dateTime>"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_preview_remote-administration-configurations_team-viewer_configurationId_sessions"
      },
      "post": {
        "tags": [
          "preview > remote-administration-configurations > team-viewer > {configurationId} > sessions"
        ],
        "summary": "Create a new session",
        "description": "Creates a new Team Viewer session to be used to establish a remote connection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "description": "<string>",
                  "deviceId": "<string>",
                  "deviceType": "COMPUTER"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "configurationId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Team Viewer connection configuration",
            "example": "<string>"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_preview_remote-administration-configurations_team-viewer_configurationId_sessions"
      }
    },
    "/preview/remote-administration-configurations/team-viewer/{id}/status": {
      "get": {
        "tags": [
          "preview > remote-administration-configurations > team-viewer > {id} > status"
        ],
        "summary": "Get Team Viewer Remote Administration connection status",
        "description": "Returns Team Viewer Remote Administration connection status",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Team Viewer connection configuration",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "connectionVerificationResult": "<string>"
                }
              }
            }
          }
        },
        "operationId": "get_preview_remote-administration-configurations_team-viewer_id_status"
      }
    },
    "/preview/remote-administration-configurations/team-viewer/{id}": {
      "get": {
        "tags": [
          "preview > remote-administration-configurations > team-viewer > {id}"
        ],
        "summary": "Get Team Viewer Remote Administration connection configuration",
        "description": "Returns Team Viewer Remote Administration connection configuration",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Team Viewer connection configuration",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "displayName": "<string>",
                  "enabled": "<boolean>",
                  "id": "<string>",
                  "sessionTimeout": "<integer>",
                  "siteId": "<string>"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_preview_remote-administration-configurations_team-viewer_id"
      },
      "delete": {
        "tags": [
          "preview > remote-administration-configurations > team-viewer > {id}"
        ],
        "summary": "Delete Team Viewer Remote Administration connection configuration",
        "description": "Deletes Team Viewer Remote Administration connection configuration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Team Viewer connection configuration",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_preview_remote-administration-configurations_team-viewer_id"
      },
      "patch": {
        "tags": [
          "preview > remote-administration-configurations > team-viewer > {id}"
        ],
        "summary": "Update Team Viewer Remote Administration connection configuration",
        "description": "Updates Team Viewer Remote Administration connection configuration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "displayName": "<string>",
                  "enabled": "<boolean>",
                  "sessionTimeout": "<integer>",
                  "token": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) ID of the Team Viewer connection configuration",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "displayName": "<string>",
                  "enabled": "<boolean>",
                  "id": "<string>",
                  "sessionTimeout": "<integer>",
                  "siteId": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "patch_preview_remote-administration-configurations_team-viewer_id"
      }
    },
    "/preview/remote-administration-configurations/team-viewer": {
      "post": {
        "tags": [
          "preview > remote-administration-configurations > team-viewer"
        ],
        "summary": "Create Team Viewer Remote Administration connection configuration",
        "description": "Creates Team Viewer Remote Administration connection configuration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "displayName": "<string>",
                  "enabled": "<boolean>",
                  "scriptToken": "<string>",
                  "sessionTimeout": "<integer>",
                  "siteId": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<string>",
                  "href": "<string>"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_preview_remote-administration-configurations_team-viewer"
      }
    },
    "/preview/remote-administration-configurations": {
      "get": {
        "tags": [
          "preview > remote-administration-configurations"
        ],
        "summary": "Get information about all remote administration configurations.",
        "description": "Remote administration feature creates a secure screen-sharing experience between Jamf Pro administrators and their end-users.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<string>",
                      "siteId": "<string>",
                      "displayName": "<string>",
                      "type": "team-viewer"
                    },
                    {
                      "id": "<string>",
                      "siteId": "<string>",
                      "displayName": "<string>",
                      "type": "team-viewer"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_preview_remote-administration-configurations"
      }
    },
    "/inventory-preload/csv-template": {
      "get": {
        "tags": [
          "inventory-preload > csv-template"
        ],
        "summary": "Get the Inventory Preload CSV template\n",
        "description": "Retrieves the Inventory Preload CSV template.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/csv"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "text/csv"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "{}"
              }
            }
          }
        },
        "operationId": "get_inventory-preload_csv-template"
      }
    },
    "/inventory-preload/history/notes": {
      "post": {
        "tags": [
          "inventory-preload > history > notes"
        ],
        "summary": "Add Inventory Preload history object notes\n",
        "description": "Adds Inventory Preload history object notes.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "note": "<string>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "id": "<integer>",
                  "username": "<string>",
                  "date": "<string>",
                  "note": "<string>",
                  "details": "<string>"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_inventory-preload_history_notes"
      }
    },
    "/inventory-preload/history": {
      "get": {
        "tags": [
          "inventory-preload > history"
        ],
        "summary": "Get Inventory Preload history entries\n",
        "description": "Gets Inventory Preload history entries.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "page-size",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc ",
            "example": "date:desc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    },
                    {
                      "id": "<integer>",
                      "username": "<string>",
                      "date": "<string>",
                      "note": "<string>",
                      "details": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_inventory-preload_history"
      }
    },
    "/inventory-preload/validate-csv": {
      "post": {
        "tags": [
          "inventory-preload > validate-csv"
        ],
        "summary": "Validate a given CSV file\n",
        "description": "Validate a given CSV file.\nSerial number and device type are required. All other fields are optional.\nA CSV template can be downloaded from /api/inventory-preload/csv-template.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {}
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "text/csv"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "recordCount": "<integer>"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpsStatus": "<integer>",
                  "errors": [
                    {
                      "code": "<string>",
                      "description": "<string>",
                      "field": "<string>",
                      "value": "<string>",
                      "serialNumber": "<string>",
                      "line": "<integer>",
                      "fieldSize": "<integer>",
                      "deviceType": "<string>"
                    },
                    {
                      "code": "<string>",
                      "description": "<string>",
                      "field": "<string>",
                      "value": "<string>",
                      "serialNumber": "<string>",
                      "line": "<integer>",
                      "fieldSize": "<integer>",
                      "deviceType": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_inventory-preload_validate-csv"
      }
    },
    "/inventory-preload/{id}": {
      "get": {
        "tags": [
          "inventory-preload > {id}"
        ],
        "summary": "Get an Inventory Preload record\n",
        "description": "Retrieves an Inventory Preload record.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Inventory Preload identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "deviceType": "Mobile Device",
                  "serialNumber": "<string>",
                  "id": "<integer>",
                  "username": "<string>",
                  "fullName": "<string>",
                  "emailAddress": "<string>",
                  "phoneNumber": "<string>",
                  "position": "<string>",
                  "department": "<string>",
                  "building": "<string>",
                  "room": "<string>",
                  "poNumber": "<string>",
                  "poDate": "<string>",
                  "warrantyExpiration": "<string>",
                  "appleCareId": "<string>",
                  "lifeExpectancy": "<string>",
                  "purchasePrice": "<string>",
                  "purchasingContact": "<string>",
                  "purchasingAccount": "<string>",
                  "leaseExpiration": "<string>",
                  "barCode1": "<string>",
                  "barCode2": "<string>",
                  "assetTag": "<string>",
                  "vendor": "<string>",
                  "extensionAttributes": [
                    {
                      "name": "<string>",
                      "value": "<string>"
                    },
                    {
                      "name": "<string>",
                      "value": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_inventory-preload_id"
      },
      "put": {
        "tags": [
          "inventory-preload > {id}"
        ],
        "summary": "Update an Inventory Preload record\n",
        "description": "Updates an Inventory Preload record.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "deviceType": "Computer",
                  "serialNumber": "<string>",
                  "username": "<string>",
                  "fullName": "<string>",
                  "emailAddress": "<string>",
                  "phoneNumber": "<string>",
                  "position": "<string>",
                  "department": "<string>",
                  "building": "<string>",
                  "room": "<string>",
                  "poNumber": "<string>",
                  "poDate": "<string>",
                  "warrantyExpiration": "<string>",
                  "appleCareId": "<string>",
                  "lifeExpectancy": "<string>",
                  "purchasePrice": "<string>",
                  "purchasingContact": "<string>",
                  "purchasingAccount": "<string>",
                  "leaseExpiration": "<string>",
                  "barCode1": "<string>",
                  "barCode2": "<string>",
                  "assetTag": "<string>",
                  "vendor": "<string>",
                  "extensionAttributes": [
                    {
                      "name": "<string>",
                      "value": "<string>"
                    },
                    {
                      "name": "<string>",
                      "value": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Inventory Preload identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "deviceType": "Mobile Device",
                  "serialNumber": "<string>",
                  "id": "<integer>",
                  "username": "<string>",
                  "fullName": "<string>",
                  "emailAddress": "<string>",
                  "phoneNumber": "<string>",
                  "position": "<string>",
                  "department": "<string>",
                  "building": "<string>",
                  "room": "<string>",
                  "poNumber": "<string>",
                  "poDate": "<string>",
                  "warrantyExpiration": "<string>",
                  "appleCareId": "<string>",
                  "lifeExpectancy": "<string>",
                  "purchasePrice": "<string>",
                  "purchasingContact": "<string>",
                  "purchasingAccount": "<string>",
                  "leaseExpiration": "<string>",
                  "barCode1": "<string>",
                  "barCode2": "<string>",
                  "assetTag": "<string>",
                  "vendor": "<string>",
                  "extensionAttributes": [
                    {
                      "name": "<string>",
                      "value": "<string>"
                    },
                    {
                      "name": "<string>",
                      "value": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "put_inventory-preload_id"
      },
      "delete": {
        "tags": [
          "inventory-preload > {id}"
        ],
        "summary": "Delete an Inventory Preload record\n",
        "description": "Deletes an Inventory Preload record.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) Inventory Preload identifier",
            "example": "<integer>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_inventory-preload_id"
      }
    },
    "/inventory-preload": {
      "get": {
        "tags": [
          "inventory-preload"
        ],
        "summary": "Return all Inventory Preload records\n",
        "description": "Returns all Inventory Preload records.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "0"
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "example": "100"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "ASC"
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "totalCount": "<integer>",
                    "results": [
                      {
                        "deviceType": "Computer",
                        "serialNumber": "<string>",
                        "id": "<integer>",
                        "username": "<string>",
                        "fullName": "<string>",
                        "emailAddress": "<string>",
                        "phoneNumber": "<string>",
                        "position": "<string>",
                        "department": "<string>",
                        "building": "<string>",
                        "room": "<string>",
                        "poNumber": "<string>",
                        "poDate": "<string>",
                        "warrantyExpiration": "<string>",
                        "appleCareId": "<string>",
                        "lifeExpectancy": "<string>",
                        "purchasePrice": "<string>",
                        "purchasingContact": "<string>",
                        "purchasingAccount": "<string>",
                        "leaseExpiration": "<string>",
                        "barCode1": "<string>",
                        "barCode2": "<string>",
                        "assetTag": "<string>",
                        "vendor": "<string>",
                        "extensionAttributes": [
                          {
                            "name": "<string>",
                            "value": "<string>"
                          },
                          {
                            "name": "<string>",
                            "value": "<string>"
                          }
                        ]
                      },
                      {
                        "deviceType": "Mobile Device",
                        "serialNumber": "<string>",
                        "id": "<integer>",
                        "username": "<string>",
                        "fullName": "<string>",
                        "emailAddress": "<string>",
                        "phoneNumber": "<string>",
                        "position": "<string>",
                        "department": "<string>",
                        "building": "<string>",
                        "room": "<string>",
                        "poNumber": "<string>",
                        "poDate": "<string>",
                        "warrantyExpiration": "<string>",
                        "appleCareId": "<string>",
                        "lifeExpectancy": "<string>",
                        "purchasePrice": "<string>",
                        "purchasingContact": "<string>",
                        "purchasingAccount": "<string>",
                        "leaseExpiration": "<string>",
                        "barCode1": "<string>",
                        "barCode2": "<string>",
                        "assetTag": "<string>",
                        "vendor": "<string>",
                        "extensionAttributes": [
                          {
                            "name": "<string>",
                            "value": "<string>"
                          },
                          {
                            "name": "<string>",
                            "value": "<string>"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "totalCount": "<integer>",
                    "results": [
                      {
                        "deviceType": "Unknown",
                        "serialNumber": "<string>",
                        "id": "<integer>",
                        "username": "<string>",
                        "fullName": "<string>",
                        "emailAddress": "<string>",
                        "phoneNumber": "<string>",
                        "position": "<string>",
                        "department": "<string>",
                        "building": "<string>",
                        "room": "<string>",
                        "poNumber": "<string>",
                        "poDate": "<string>",
                        "warrantyExpiration": "<string>",
                        "appleCareId": "<string>",
                        "lifeExpectancy": "<string>",
                        "purchasePrice": "<string>",
                        "purchasingContact": "<string>",
                        "purchasingAccount": "<string>",
                        "leaseExpiration": "<string>",
                        "barCode1": "<string>",
                        "barCode2": "<string>",
                        "assetTag": "<string>",
                        "vendor": "<string>",
                        "extensionAttributes": [
                          {
                            "name": "<string>",
                            "value": "<string>"
                          },
                          {
                            "name": "<string>",
                            "value": "<string>"
                          }
                        ]
                      },
                      {
                        "deviceType": "Computer",
                        "serialNumber": "<string>",
                        "id": "<integer>",
                        "username": "<string>",
                        "fullName": "<string>",
                        "emailAddress": "<string>",
                        "phoneNumber": "<string>",
                        "position": "<string>",
                        "department": "<string>",
                        "building": "<string>",
                        "room": "<string>",
                        "poNumber": "<string>",
                        "poDate": "<string>",
                        "warrantyExpiration": "<string>",
                        "appleCareId": "<string>",
                        "lifeExpectancy": "<string>",
                        "purchasePrice": "<string>",
                        "purchasingContact": "<string>",
                        "purchasingAccount": "<string>",
                        "leaseExpiration": "<string>",
                        "barCode1": "<string>",
                        "barCode2": "<string>",
                        "assetTag": "<string>",
                        "vendor": "<string>",
                        "extensionAttributes": [
                          {
                            "name": "<string>",
                            "value": "<string>"
                          },
                          {
                            "name": "<string>",
                            "value": "<string>"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_inventory-preload"
      },
      "post": {
        "tags": [
          "inventory-preload"
        ],
        "summary": "Create a new Inventory Preload record using JSON or CSV\n",
        "description": "Create a new Inventory Preload record using JSON or CSV.\nA CSV template can be downloaded from /api/inventory-preload/csv-template.\nSerial number and device type are required. All other fields are optional.\nWhen a matching serial number exists in the Inventory Preload data, the record will be overwritten with the CSV data.\nIf the CSV file contains a new username and an email address is provided, the new user is created in Jamf Pro.\nIf the CSV file contains an existing username, the following user-related fields are updated in Jamf Pro.\nFull Name,\nEmail Address,\nPhone Number,\nPosition.\nThis endpoint does not do full validation of each record in the CSV data.\nTo do full validation, use the /inventory-preload/validate-csv endpoint first.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "deviceType": "Computer",
                  "serialNumber": "<string>",
                  "username": "<string>",
                  "fullName": "<string>",
                  "emailAddress": "<string>",
                  "phoneNumber": "<string>",
                  "position": "<string>",
                  "department": "<string>",
                  "building": "<string>",
                  "room": "<string>",
                  "poNumber": "<string>",
                  "poDate": "<string>",
                  "warrantyExpiration": "<string>",
                  "appleCareId": "<string>",
                  "lifeExpectancy": "<string>",
                  "purchasePrice": "<string>",
                  "purchasingContact": "<string>",
                  "purchasingAccount": "<string>",
                  "leaseExpiration": "<string>",
                  "barCode1": "<string>",
                  "barCode2": "<string>",
                  "assetTag": "<string>",
                  "vendor": "<string>",
                  "extensionAttributes": [
                    {
                      "name": "<string>",
                      "value": "<string>"
                    },
                    {
                      "name": "<string>",
                      "value": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "deviceType": "Mobile Device",
                  "serialNumber": "<string>",
                  "id": "<integer>",
                  "username": "<string>",
                  "fullName": "<string>",
                  "emailAddress": "<string>",
                  "phoneNumber": "<string>",
                  "position": "<string>",
                  "department": "<string>",
                  "building": "<string>",
                  "room": "<string>",
                  "poNumber": "<string>",
                  "poDate": "<string>",
                  "warrantyExpiration": "<string>",
                  "appleCareId": "<string>",
                  "lifeExpectancy": "<string>",
                  "purchasePrice": "<string>",
                  "purchasingContact": "<string>",
                  "purchasingAccount": "<string>",
                  "leaseExpiration": "<string>",
                  "barCode1": "<string>",
                  "barCode2": "<string>",
                  "assetTag": "<string>",
                  "vendor": "<string>",
                  "extensionAttributes": [
                    {
                      "name": "<string>",
                      "value": "<string>"
                    },
                    {
                      "name": "<string>",
                      "value": "<string>"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "post_inventory-preload"
      },
      "delete": {
        "tags": [
          "inventory-preload"
        ],
        "summary": "Delete all Inventory Preload records\n",
        "description": "Deletes all Inventory Preload records.",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_inventory-preload"
      }
    },
    "/notifications/alerts/{id}": {
      "delete": {
        "tags": [
          "notifications > alerts > {id}"
        ],
        "summary": "DEPRECATED - USE \"alerts/{type}/{id}\" INSTEAD. Deletes only Patch Management notifications.\n",
        "description": "DEPRECATED - USE \"alerts/{type}/{id}\" INSTEAD. Deletes only Patch Management notifications.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance ID of the notification",
            "example": "<integer>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_notifications_alerts_id"
      }
    },
    "/notifications/alerts/{type}/{id}": {
      "delete": {
        "tags": [
          "notifications > alerts > {type} > {id}"
        ],
        "summary": "Delete Notifications\n",
        "description": "Deletes notifications. Option for 'type' is 'PATCH_UPDATE'.\n",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) type of the notification",
            "example": "VPP_ACCOUNT_EXPIRED"
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) instance ID of the notification",
            "example": "<integer>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "delete_notifications_alerts_type_id"
      }
    },
    "/notifications/alerts": {
      "get": {
        "tags": [
          "notifications > alerts"
        ],
        "summary": "Get Notifications for user and site\n",
        "description": "Gets notifications for user and site\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "type": "<string>",
                    "id": "<integer>",
                    "params": {
                      "pariatur_b": {},
                      "dolor_0": {},
                      "consectetur_e": {},
                      "ullamco_0f": {}
                    }
                  },
                  {
                    "type": "<string>",
                    "id": "<integer>",
                    "params": {
                      "laboris5d": {},
                      "voluptate_5_9": {}
                    }
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_notifications_alerts"
      }
    },
    "/user/obj/preference/{key}": {
      "get": {
        "tags": [
          "user > obj > preference > {key}"
        ],
        "summary": "Get the user setting for the authenticated user and key\n",
        "description": "Gets the user setting for the authenticated user and key.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "key",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) user setting to be retrieved",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_user_obj_preference_key"
      },
      "put": {
        "tags": [
          "user > obj > preference > {key}"
        ],
        "summary": "Persist the user setting\n",
        "description": "Persists the user setting\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": "<string>"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "key",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) key of user setting to be persisted",
            "example": "<string>"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {}
              }
            }
          }
        },
        "operationId": "put_user_obj_preference_key"
      },
      "delete": {
        "tags": [
          "user > obj > preference > {key}"
        ],
        "summary": "Remove specified setting for authenticated user\n",
        "description": "Remove specified setting for authenticated user\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "key",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "(Required) key of user setting to be persisted",
            "example": "<string>"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "httpStatus": "<integer>",
                  "errors": [
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    },
                    {
                      "field": "<string>",
                      "code": "<string>",
                      "description": "<string>",
                      "id": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "delete_user_obj_preference_key"
      }
    },
    "/user/updateSession": {
      "post": {
        "tags": [
          "user > updateSession"
        ],
        "summary": "Update values in the User's current session\n",
        "description": "Updates values in the user's current session.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "currentSiteId": "<integer>"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "currentSiteId": "<integer>"
                }
              }
            }
          }
        },
        "operationId": "post_user_updateSession"
      }
    },
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Return all Jamf Pro user acounts\n",
        "description": "Return all Jamf Pro user acounts.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "id": "<integer>",
                    "username": "<string>",
                    "realName": "<string>",
                    "email": "<string>",
                    "preferences": {
                      "language": "<string>",
                      "dateFormat": "<string>",
                      "region": "<string>",
                      "timezone": "<string>",
                      "isDisableRelativeDates": "<boolean>"
                    },
                    "isMultiSiteAdmin": "<boolean>",
                    "accessLevel": "GroupBasedAccess",
                    "privilegeSet": "ENROLLMENT",
                    "privilegesBySite": {
                      "velit_8": [
                        "<string>",
                        "<string>"
                      ]
                    },
                    "groupIds": [
                      "<integer>",
                      "<integer>"
                    ],
                    "currentSiteId": "<integer>"
                  },
                  {
                    "id": "<integer>",
                    "username": "<string>",
                    "realName": "<string>",
                    "email": "<string>",
                    "preferences": {
                      "language": "<string>",
                      "dateFormat": "<string>",
                      "region": "<string>",
                      "timezone": "<string>",
                      "isDisableRelativeDates": "<boolean>"
                    },
                    "isMultiSiteAdmin": "<boolean>",
                    "accessLevel": "SiteAccess",
                    "privilegeSet": "CUSTOM",
                    "privilegesBySite": {
                      "quis_1": [
                        "<string>",
                        "<string>"
                      ],
                      "mollitd": [
                        "<string>",
                        "<string>"
                      ]
                    },
                    "groupIds": [
                      "<integer>",
                      "<integer>"
                    ],
                    "currentSiteId": "<integer>"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_user"
      }
    },
    "/ldap/groups": {
      "get": {
        "tags": [
          "ldap > groups"
        ],
        "summary": "Retrieve the configured access groups that contain the text in the search param\n",
        "description": "Retrieves the configured access groups that contain the text in the searchParam.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Will perform a \"contains\" search on the names of access groups",
            "example": "null"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "totalCount": "<integer>",
                  "results": [
                    {
                      "id": "<string>",
                      "uuid": "<string>",
                      "ldapServerId": "<integer>",
                      "name": "<string>",
                      "distinguishedName": "<string>"
                    },
                    {
                      "id": "<string>",
                      "uuid": "<string>",
                      "ldapServerId": "<integer>",
                      "name": "<string>",
                      "distinguishedName": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_ldap_groups"
      }
    },
    "/ldap/servers": {
      "get": {
        "tags": [
          "ldap > servers"
        ],
        "summary": "Retrieve all Servers including LDAP and Cloud Identity Providers.\n",
        "description": "Retrieve all Servers including LDAP and Cloud Identity Providers.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "id": "<integer>",
                    "name": "<string>"
                  },
                  {
                    "id": "<integer>",
                    "name": "<string>"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_ldap_servers"
      }
    },
    "/devices/extensionAttributes": {
      "get": {
        "tags": [
          "devices > extensionAttributes"
        ],
        "summary": "Get Mobile Device Extension Attribute values placed in select paramter\n",
        "description": "Gets Mobile Device Extension Attribute values placed in select parameter.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Acceptable values currently include:\n* name\n",
            "example": "name"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "extensionAttributes": [
                    {
                      "name": "<string>"
                    },
                    {
                      "name": "<string>"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get_devices_extensionAttributes"
      }
    },
    "/settings/obj/policyProperties": {
      "get": {
        "tags": [
          "settings > obj > policyProperties"
        ],
        "summary": "Get Policy Properties object\n",
        "description": "Gets `Policy Properties` object.\n",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "isPoliciesRequireNetworkStateChange": false,
                  "isAllowNetworkStateChangeTriggers": true
                }
              }
            }
          }
        },
        "operationId": "get_settings_obj_policyProperties"
      },
      "put": {
        "tags": [
          "settings > obj > policyProperties"
        ],
        "summary": "Update Policy Properties object\n",
        "description": "Update Policy Properties object\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "isPoliciesRequireNetworkStateChange": false,
                  "isAllowNetworkStateChangeTriggers": true
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "isPoliciesRequireNetworkStateChange": false,
                  "isAllowNetworkStateChangeTriggers": true
                }
              }
            }
          }
        },
        "operationId": "put_settings_obj_policyProperties"
      }
    },
    "/settings/sites": {
      "get": {
        "tags": [
          "settings > sites"
        ],
        "summary": "Find all sites\n",
        "description": "Found all sites.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": [
                  {
                    "id": "<integer>",
                    "name": "<string>"
                  },
                  {
                    "id": "<integer>",
                    "name": "<string>"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get_settings_sites"
      }
    },
    "/settings/issueTomcatSslCertificate": {
      "post": {
        "tags": [
          "settings > issueTomcatSslCertificate"
        ],
        "summary": "Generate a SSL Certificate using Jamf Certificate Authority\n",
        "description": "generate a SSL Certificate using Jamf Certificate Authority",
        "requestBody": {
          "content": {}
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": ""
              }
            }
          }
        },
        "operationId": "post_settings_issueTomcatSslCertificate"
      }
    },
    "/self-service/branding/images": {
      "post": {
        "tags": [
          "self-service > branding > images"
        ],
        "summary": "Upload an image\n",
        "description": "Uploads an image",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "(Required) The file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "multipart/form-data"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "url": "<string>"
                }
              }
            }
          }
        },
        "operationId": "post_self-service_branding_images"
      }
    },
    "/startup-status": {
      "get": {
        "tags": [
          "startup-status"
        ],
        "summary": "Retrieve information about application startup\n",
        "description": "Retrieves information about application startup. Current startup operation taking place (if any) and overall startup completion percentage.",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "step": "<string>",
                  "stepCode": "SERVER_INIT_DB_COLUMN_ENCODING_CHANGE_STEP_2",
                  "stepParam": "<string>",
                  "percentage": "<integer>",
                  "warning": "<string>",
                  "warningCode": "SERVER_INIT_WARNING_DB_TABLE_ENCODING",
                  "warningParam": "<string>",
                  "error": "<string>",
                  "errorCode": "DATABASE_PASSWORD_MISSING",
                  "setupAssistantNecessary": "<boolean>"
                }
              }
            }
          }
        },
        "operationId": "get_startup-status"
      }
    }
  }
}
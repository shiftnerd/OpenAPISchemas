{
  "openapi": "3.0.3",
  "info": {
    "description": "Welcome to Cloudflare's API documentation site.",
    "license": {
      "name": "BSD-3-Clause",
      "url": "https://opensource.org/licenses/BSD-3-Clause"
    },
    "title": "Cloudflare API",
    "version": "4.0.0"
  },
  "servers": [
    {
      "description": "Client API",
      "url": "https://api.cloudflare.com/client/v4"
    }
  ],
  "paths": {
    "/accounts/{account_id}/dex/warp-change-events": {
      "get": {
        "description": "List WARP configuration and enablement toggle change events by device.",
        "operationId": "list-warp-change-events",
        "parameters": [
          {
            "description": "unique identifier linked to an account in the API request path",
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/digital-experience-monitoring_account_identifier"
            }
          },
          {
            "description": "Page number of paginated results",
            "in": "query",
            "name": "page",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "description": "Number of items per page",
            "in": "query",
            "name": "per_page",
            "required": true,
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "description": "Start time for the query in ISO (RFC3339 - ISO 8601) format",
            "in": "query",
            "name": "from",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "End time for the query in ISO (RFC3339 - ISO 8601) format",
            "in": "query",
            "name": "to",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter events by type 'config' or 'toggle'",
            "in": "query",
            "name": "type",
            "schema": {
              "enum": [
                "config",
                "toggle"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filter events by type toggle value. Applicable to type='toggle' events only.",
            "in": "query",
            "name": "toggle",
            "schema": {
              "enum": [
                "on",
                "off"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filter events by WARP configuration name changed from or to.",
            "in": "query",
            "name": "config_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter events by account name.",
            "in": "query",
            "name": "account_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort response by event timestamp.",
            "in": "query",
            "name": "sort_order",
            "schema": {
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/digital-experience-monitoring_api-response-collection"
                    },
                    {
                      "properties": {
                        "result": {
                          "$ref": "#/components/schemas/digital-experience-monitoring_warp_events_response"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "success response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/digital-experience-monitoring_api-response-common-failure"
                }
              }
            },
            "description": "List WARP change events failure response"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          },
          {
            "api_token": []
          },
          {
            "user_service_key": []
          }
        ],
        "summary": "List WARP change events.",
        "tags": [
          "WARP Change Events"
        ],
        "x-api-token-group": [
          "Cloudflare DEX Write",
          "Cloudflare DEX Read",
          "Zero Trust Report",
          "Zero Trust Read"
        ]
      }
    },
    "/accounts/{account_id}/dns_firewall": {
      "get": {
        "description": "List DNS Firewall clusters for an account",
        "operationId": "dns-firewall-list-dns-firewall-clusters",
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-firewall_identifier"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "description": "Page number of paginated results",
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "default": 20,
              "description": "Number of clusters per page",
              "maximum": 100,
              "minimum": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dns-firewall_dns_firewall_response_collection"
                }
              }
            },
            "description": "List DNS Firewall Clusters response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-firewall_dns_firewall_response_collection"
                    },
                    {
                      "$ref": "#/components/schemas/dns-firewall_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "List DNS Firewall Clusters response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "List DNS Firewall Clusters",
        "tags": [
          "DNS Firewall"
        ],
        "x-api-token-group": [
          "DNS Firewall Write",
          "DNS Firewall Read"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns_records:read"
          ]
        },
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      },
      "post": {
        "description": "Create a DNS Firewall cluster",
        "operationId": "dns-firewall-create-dns-firewall-cluster",
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-firewall_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dns-firewall_dns-firewall-cluster-post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dns-firewall_dns_firewall_single_response"
                }
              }
            },
            "description": "Create DNS Firewall Cluster response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-firewall_dns_firewall_single_response"
                    },
                    {
                      "$ref": "#/components/schemas/dns-firewall_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Create DNS Firewall Cluster response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Create DNS Firewall Cluster",
        "tags": [
          "DNS Firewall"
        ],
        "x-api-token-group": [
          "DNS Firewall Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns_records:edit"
          ]
        },
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      }
    },
    "/accounts/{account_id}/dns_firewall/{dns_firewall_id}": {
      "delete": {
        "description": "Delete a DNS Firewall cluster",
        "operationId": "dns-firewall-delete-dns-firewall-cluster",
        "parameters": [
          {
            "in": "path",
            "name": "dns_firewall_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-firewall_identifier"
            }
          },
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-firewall_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-firewall_api-response-single"
                    },
                    {
                      "properties": {
                        "result": {
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/dns-firewall_identifier"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Delete DNS Firewall Cluster response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/dns-firewall_api-response-single"
                        },
                        {
                          "properties": {
                            "result": {
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/dns-firewall_identifier"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "$ref": "#/components/schemas/dns-firewall_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Delete DNS Firewall Cluster response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Delete DNS Firewall Cluster",
        "tags": [
          "DNS Firewall"
        ],
        "x-api-token-group": [
          "DNS Firewall Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns_records:edit"
          ]
        },
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      },
      "get": {
        "description": "Show a single DNS Firewall cluster for an account",
        "operationId": "dns-firewall-dns-firewall-cluster-details",
        "parameters": [
          {
            "in": "path",
            "name": "dns_firewall_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-firewall_identifier"
            }
          },
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-firewall_identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dns-firewall_dns_firewall_single_response"
                }
              }
            },
            "description": "DNS Firewall Cluster Details response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-firewall_dns_firewall_single_response"
                    },
                    {
                      "$ref": "#/components/schemas/dns-firewall_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "DNS Firewall Cluster Details response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "DNS Firewall Cluster Details",
        "tags": [
          "DNS Firewall"
        ],
        "x-api-token-group": [
          "DNS Firewall Write",
          "DNS Firewall Read"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns_records:read"
          ]
        },
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      },
      "patch": {
        "description": "Modify the configuration of a DNS Firewall cluster",
        "operationId": "dns-firewall-update-dns-firewall-cluster",
        "parameters": [
          {
            "in": "path",
            "name": "dns_firewall_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-firewall_identifier"
            }
          },
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-firewall_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dns-firewall_dns-firewall-cluster-patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dns-firewall_dns_firewall_single_response"
                }
              }
            },
            "description": "Update DNS Firewall Cluster response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-firewall_dns_firewall_single_response"
                    },
                    {
                      "$ref": "#/components/schemas/dns-firewall_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Update DNS Firewall Cluster response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Update DNS Firewall Cluster",
        "tags": [
          "DNS Firewall"
        ],
        "x-api-token-group": [
          "DNS Firewall Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns_records:edit"
          ]
        },
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      }
    },
    "/accounts/{account_id}/dns_firewall/{dns_firewall_id}/dns_analytics/report": {
      "get": {
        "description": "Retrieves a list of summarised aggregate metrics over a given time period.",
        "operationId": "dns-firewall-analytics-table",
        "parameters": [
          {
            "in": "path",
            "name": "dns_firewall_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_identifier"
            }
          },
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_identifier"
            }
          },
          {
            "in": "query",
            "name": "metrics",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_metrics"
            }
          },
          {
            "in": "query",
            "name": "dimensions",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_dimensions"
            }
          },
          {
            "in": "query",
            "name": "since",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_since"
            }
          },
          {
            "in": "query",
            "name": "until",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_until"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_limit"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_sort"
            }
          },
          {
            "in": "query",
            "name": "filters",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_filters"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-analytics_api-response-single"
                    },
                    {
                      "properties": {
                        "result": {
                          "$ref": "#/components/schemas/dns-analytics_report"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Table response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/dns-analytics_api-response-single"
                        },
                        {
                          "properties": {
                            "result": {
                              "$ref": "#/components/schemas/dns-analytics_report"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "$ref": "#/components/schemas/dns-analytics_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Table response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Table",
        "tags": [
          "DNS Firewall Analytics"
        ],
        "x-api-token-group": [
          "DNS Firewall Write",
          "DNS Firewall Read"
        ]
      }
    },
    "/accounts/{account_id}/dns_firewall/{dns_firewall_id}/dns_analytics/report/bytime": {
      "get": {
        "description": "Retrieves a list of aggregate metrics grouped by time interval.",
        "operationId": "dns-firewall-analytics-by-time",
        "parameters": [
          {
            "in": "path",
            "name": "dns_firewall_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_identifier"
            }
          },
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_identifier"
            }
          },
          {
            "in": "query",
            "name": "metrics",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_metrics"
            }
          },
          {
            "in": "query",
            "name": "dimensions",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_dimensions"
            }
          },
          {
            "in": "query",
            "name": "since",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_since"
            }
          },
          {
            "in": "query",
            "name": "until",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_until"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_limit"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_sort"
            }
          },
          {
            "in": "query",
            "name": "filters",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_filters"
            }
          },
          {
            "in": "query",
            "name": "time_delta",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_time_delta"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-analytics_api-response-single"
                    },
                    {
                      "properties": {
                        "result": {
                          "$ref": "#/components/schemas/dns-analytics_report_bytime"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "By Time response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/dns-analytics_api-response-single"
                        },
                        {
                          "properties": {
                            "result": {
                              "$ref": "#/components/schemas/dns-analytics_report_bytime"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "$ref": "#/components/schemas/dns-analytics_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "By Time response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "By Time",
        "tags": [
          "DNS Firewall Analytics"
        ],
        "x-api-token-group": [
          "DNS Firewall Write",
          "DNS Firewall Read"
        ]
      }
    },
    "/accounts/{account_id}/dns_firewall/{dns_firewall_id}/reverse_dns": {
      "get": {
        "description": "Show reverse DNS configuration (PTR records) for a DNS Firewall cluster",
        "operationId": "dns-firewall-show-dns-firewall-cluster-reverse-dns",
        "parameters": [
          {
            "in": "path",
            "name": "dns_firewall_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-firewall_identifier"
            }
          },
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-firewall_identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dns-firewall_dns_firewall_reverse_dns_response"
                }
              }
            },
            "description": "Show DNS Firewall Cluster Reverse DNS response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-firewall_dns_firewall_reverse_dns_response"
                    },
                    {
                      "$ref": "#/components/schemas/dns-firewall_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Show DNS Firewall Cluster Reverse DNS response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Show DNS Firewall Cluster Reverse DNS",
        "tags": [
          "DNS Firewall"
        ],
        "x-api-token-group": [
          "DNS Firewall Write",
          "DNS Firewall Read"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns_records:read"
          ]
        },
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      },
      "patch": {
        "description": "Update reverse DNS configuration (PTR records) for a DNS Firewall cluster",
        "operationId": "dns-firewall-update-dns-firewall-cluster-reverse-dns",
        "parameters": [
          {
            "in": "path",
            "name": "dns_firewall_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-firewall_identifier"
            }
          },
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-firewall_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dns-firewall_dns-firewall-reverse-dns-patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dns-firewall_dns_firewall_reverse_dns_response"
                }
              }
            },
            "description": "Update DNS Firewall Cluster Reverse DNS response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-firewall_dns_firewall_reverse_dns_response"
                    },
                    {
                      "$ref": "#/components/schemas/dns-firewall_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Update DNS Firewall Cluster Reverse DNS response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Update DNS Firewall Cluster Reverse DNS",
        "tags": [
          "DNS Firewall"
        ],
        "x-api-token-group": [
          "DNS Firewall Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns_records:edit"
          ]
        },
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      }
    },
    "/accounts/{account_id}/dns_settings": {
      "get": {
        "description": "Show DNS settings for an account",
        "operationId": "dns-settings-for-an-account-list-dns-settings",
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-settings_identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dns-settings_dns_response_single"
                }
              }
            },
            "description": "Show DNS Settings response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-settings_dns_response_single"
                    },
                    {
                      "$ref": "#/components/schemas/dns-settings_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Show DNS Settings response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Show DNS Settings",
        "tags": [
          "DNS Settings for an Account"
        ],
        "x-api-token-group": [
          "Account DNS Settings Write",
          "Account DNS Settings Read"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns_records:read"
          ]
        },
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      },
      "patch": {
        "description": "Update DNS settings for an account",
        "operationId": "dns-settings-for-an-account-update-dns-settings",
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-settings_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dns-settings_account_settings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dns-settings_dns_response_single"
                }
              }
            },
            "description": "Show DNS Settings response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-settings_dns_response_single"
                    },
                    {
                      "$ref": "#/components/schemas/dns-settings_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Show DNS Settings response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Update DNS Settings",
        "tags": [
          "DNS Settings for an Account"
        ],
        "x-api-token-group": [
          "Account DNS Settings Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns_records:read"
          ]
        },
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/accounts/{account_id}/dns_settings/views": {
      "get": {
        "description": "List DNS Internal Views for an Account",
        "operationId": "dns-views-for-an-account-list-internal-dns-views",
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-settings_identifier"
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Exact value of the DNS view name. This is a convenience alias for `name.exact`.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name.exact",
            "schema": {
              "description": "Exact value of the DNS view name.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name.contains",
            "schema": {
              "description": "Substring of the DNS view name.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name.startswith",
            "schema": {
              "description": "Prefix of the DNS view name.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name.endswith",
            "schema": {
              "description": "Suffix of the DNS view name.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "zone_id",
            "schema": {
              "description": "A zone ID that exists in the zones list for the view.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "zone_name",
            "schema": {
              "description": "A zone name that exists in the zones list for the view.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "match",
            "schema": {
              "$ref": "#/components/schemas/dns-settings_match"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "$ref": "#/components/schemas/dns-settings_page"
            }
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "$ref": "#/components/schemas/dns-settings_per_page"
            }
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "$ref": "#/components/schemas/dns-settings_order"
            }
          },
          {
            "in": "query",
            "name": "direction",
            "schema": {
              "$ref": "#/components/schemas/dns-settings_direction"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dns-settings_dns_view_response_collection"
                }
              }
            },
            "description": "List Internal DNS Views response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-settings_dns_view_response_collection"
                    },
                    {
                      "$ref": "#/components/schemas/dns-settings_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "List Internal DNS Views response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "List Internal DNS Views",
        "tags": [
          "DNS Internal Views for an Account"
        ],
        "x-api-token-group": [
          "DNS View Write",
          "DNS View Read"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns.view:list"
          ]
        },
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      },
      "post": {
        "description": "Create Internal DNS View for an account",
        "operationId": "dns-views-for-an-account-create-internal-dns-views",
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-settings_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dns-settings_dns-view-post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dns-settings_dns_view_response_single"
                }
              }
            },
            "description": "Create Internal DNS View response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-settings_dns_view_response_single"
                    },
                    {
                      "$ref": "#/components/schemas/dns-settings_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Create Internal DNS View response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Create Internal DNS View",
        "tags": [
          "DNS Internal Views for an Account"
        ],
        "x-api-token-group": [
          "DNS View Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns.view:create"
          ]
        },
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      }
    },
    "/accounts/{account_id}/dns_settings/views/{view_id}": {
      "delete": {
        "description": "Delete an existing Internal DNS View",
        "operationId": "dns-views-for-an-account-delete-internal-dns-view",
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-settings_identifier"
            }
          },
          {
            "in": "path",
            "name": "view_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-settings_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "id": {
                          "$ref": "#/components/schemas/dns-settings_identifier"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Delete Internal DNS View response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "result": {
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/dns-settings_identifier"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/dns-settings_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Update Internal DNS View response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Delete Internal DNS View",
        "tags": [
          "DNS Internal Views for an Account"
        ],
        "x-api-token-group": [
          "DNS View Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns.view:delete"
          ]
        },
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      },
      "get": {
        "description": "Get DNS Internal View",
        "operationId": "dns-views-for-an-account-get-internal-dns-view",
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-settings_identifier"
            }
          },
          {
            "in": "path",
            "name": "view_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-settings_identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dns-settings_dns_view_response_single"
                }
              }
            },
            "description": "Get DNS Internal View response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-settings_dns_view_response_single"
                    },
                    {
                      "$ref": "#/components/schemas/dns-settings_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "List Internal DNS Views response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "DNS Internal View Details",
        "tags": [
          "DNS Internal Views for an Account"
        ],
        "x-api-token-group": [
          "DNS View Write",
          "DNS View Read"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns.view:read"
          ]
        },
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      },
      "patch": {
        "description": "Update an existing Internal DNS View",
        "operationId": "dns-views-for-an-account-update-internal-dns-view",
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-settings_identifier"
            }
          },
          {
            "in": "path",
            "name": "view_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-settings_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dns-settings_dns-view-patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dns-settings_dns_view_response_single"
                }
              }
            },
            "description": "Update Internal DNS View response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-settings_dns_view_response_single"
                    },
                    {
                      "$ref": "#/components/schemas/dns-settings_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Update Internal DNS View response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Update Internal DNS View",
        "tags": [
          "DNS Internal Views for an Account"
        ],
        "x-api-token-group": [
          "DNS View Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns.view:update"
          ]
        },
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      }
    },
    "/accounts/{account_id}/intel/dns": {
      "get": {
        "description": "Gets a list of all the domains that have resolved to a specific IP address.",
        "operationId": "passive-dns-by-ip-get-passive-dns-by-ip",
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/intel_identifier"
            }
          },
          {
            "in": "query",
            "name": "start_end_params",
            "schema": {
              "$ref": "#/components/schemas/intel_start_end_params"
            }
          },
          {
            "in": "query",
            "name": "ipv4",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "description": "Requested page within paginated list of results.",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "description": "Maximum number of results requested.",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/intel_components-schemas-single_response"
                }
              }
            },
            "description": "Get Passive DNS by IP response."
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/intel_components-schemas-single_response"
                    },
                    {
                      "$ref": "#/components/schemas/intel_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Get Passive DNS by IP response failure."
          }
        },
        "security": [
          {
            "api_token": []
          },
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Get Passive DNS by IP",
        "tags": [
          "Passive DNS by IP"
        ],
        "x-api-token-group": [
          "Intel Write",
          "Intel Read"
        ]
      }
    },
    "/accounts/{account_id}/secondary_dns/acls": {
      "get": {
        "description": "List ACLs.",
        "operationId": "secondary-dns-(-acl)-list-ac-ls",
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_account_identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_components-schemas-response_collection"
                }
              }
            },
            "description": "List ACLs response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_components-schemas-response_collection"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "List ACLs response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "List ACLs",
        "tags": [
          "Secondary DNS (ACL)"
        ],
        "x-api-token-group": [
          "Account Settings Write",
          "Account Settings Read"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      },
      "post": {
        "description": "Create ACL.",
        "operationId": "secondary-dns-(-acl)-create-acl",
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_account_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "ip_range": {
                    "$ref": "#/components/schemas/secondary-dns_ip_range"
                  },
                  "name": {
                    "$ref": "#/components/schemas/secondary-dns_acl_components-schemas-name"
                  }
                },
                "required": [
                  "name",
                  "ip_range"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_components-schemas-single_response"
                }
              }
            },
            "description": "Create ACL response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_components-schemas-single_response"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Create ACL response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Create ACL",
        "tags": [
          "Secondary DNS (ACL)"
        ],
        "x-api-token-group": [
          "Account Settings Write"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      }
    },
    "/accounts/{account_id}/secondary_dns/acls/{acl_id}": {
      "delete": {
        "description": "Delete ACL.",
        "operationId": "secondary-dns-(-acl)-delete-acl",
        "parameters": [
          {
            "in": "path",
            "name": "acl_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_components-schemas-identifier"
            }
          },
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_account_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_components-schemas-id_response"
                }
              }
            },
            "description": "Delete ACL response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_components-schemas-id_response"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Delete ACL response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Delete ACL",
        "tags": [
          "Secondary DNS (ACL)"
        ],
        "x-api-token-group": [
          "Account Settings Write"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      },
      "get": {
        "description": "Get ACL.",
        "operationId": "secondary-dns-(-acl)-acl-details",
        "parameters": [
          {
            "in": "path",
            "name": "acl_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_components-schemas-identifier"
            }
          },
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_account_identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_components-schemas-single_response"
                }
              }
            },
            "description": "ACL Details response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_components-schemas-single_response"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "ACL Details response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "ACL Details",
        "tags": [
          "Secondary DNS (ACL)"
        ],
        "x-api-token-group": [
          "Account Settings Write",
          "Account Settings Read"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      },
      "put": {
        "description": "Modify ACL.",
        "operationId": "secondary-dns-(-acl)-update-acl",
        "parameters": [
          {
            "in": "path",
            "name": "acl_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_components-schemas-identifier"
            }
          },
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_account_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/secondary-dns_acl"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_components-schemas-single_response"
                }
              }
            },
            "description": "Update ACL response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_components-schemas-single_response"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Update ACL response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Update ACL",
        "tags": [
          "Secondary DNS (ACL)"
        ],
        "x-api-token-group": [
          "Account Settings Write"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      }
    },
    "/accounts/{account_id}/secondary_dns/peers": {
      "get": {
        "description": "List Peers.",
        "operationId": "secondary-dns-(-peer)-list-peers",
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_account_identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_schemas-response_collection"
                }
              }
            },
            "description": "List Peers response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_schemas-response_collection"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "List Peers response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "List Peers",
        "tags": [
          "Secondary DNS (Peer)"
        ],
        "x-api-token-group": [
          "Account Settings Write",
          "Account Settings Read"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      },
      "post": {
        "description": "Create Peer.",
        "operationId": "secondary-dns-(-peer)-create-peer",
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_account_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "$ref": "#/components/schemas/secondary-dns_components-schemas-name"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_schemas-single_response"
                }
              }
            },
            "description": "Create Peer response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_schemas-single_response"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Create Peer response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Create Peer",
        "tags": [
          "Secondary DNS (Peer)"
        ],
        "x-api-token-group": [
          "Account Settings Write"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      }
    },
    "/accounts/{account_id}/secondary_dns/peers/{peer_id}": {
      "delete": {
        "description": "Delete Peer.",
        "operationId": "secondary-dns-(-peer)-delete-peer",
        "parameters": [
          {
            "in": "path",
            "name": "peer_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_components-schemas-identifier"
            }
          },
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_account_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_components-schemas-id_response"
                }
              }
            },
            "description": "Delete Peer response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_components-schemas-id_response"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Delete Peer response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Delete Peer",
        "tags": [
          "Secondary DNS (Peer)"
        ],
        "x-api-token-group": [
          "Account Settings Write"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      },
      "get": {
        "description": "Get Peer.",
        "operationId": "secondary-dns-(-peer)-peer-details",
        "parameters": [
          {
            "in": "path",
            "name": "peer_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_components-schemas-identifier"
            }
          },
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_account_identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_schemas-single_response"
                }
              }
            },
            "description": "Peer Details response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_schemas-single_response"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Peer Details response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Peer Details",
        "tags": [
          "Secondary DNS (Peer)"
        ],
        "x-api-token-group": [
          "Account Settings Write",
          "Account Settings Read"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      },
      "put": {
        "description": "Modify Peer.",
        "operationId": "secondary-dns-(-peer)-update-peer",
        "parameters": [
          {
            "in": "path",
            "name": "peer_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_components-schemas-identifier"
            }
          },
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_account_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/secondary-dns_peer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_schemas-single_response"
                }
              }
            },
            "description": "Update Peer response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_schemas-single_response"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Update Peer response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Update Peer",
        "tags": [
          "Secondary DNS (Peer)"
        ],
        "x-api-token-group": [
          "Account Settings Write"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      }
    },
    "/accounts/{account_id}/secondary_dns/tsigs": {
      "get": {
        "description": "List TSIGs.",
        "operationId": "secondary-dns-(-tsig)-list-tsi-gs",
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_account_identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_response_collection"
                }
              }
            },
            "description": "List TSIGs response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_response_collection"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "List TSIGs response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "List TSIGs",
        "tags": [
          "Secondary DNS (TSIG)"
        ],
        "x-api-token-group": [
          "Account Settings Write",
          "Account Settings Read"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      },
      "post": {
        "description": "Create TSIG.",
        "operationId": "secondary-dns-(-tsig)-create-tsig",
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_account_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/secondary-dns_tsig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_single_response"
                }
              }
            },
            "description": "Create TSIG response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_single_response"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Create TSIG response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Create TSIG",
        "tags": [
          "Secondary DNS (TSIG)"
        ],
        "x-api-token-group": [
          "Account Settings Write"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      }
    },
    "/accounts/{account_id}/secondary_dns/tsigs/{tsig_id}": {
      "delete": {
        "description": "Delete TSIG.",
        "operationId": "secondary-dns-(-tsig)-delete-tsig",
        "parameters": [
          {
            "in": "path",
            "name": "tsig_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_schemas-identifier"
            }
          },
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_account_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_schemas-id_response"
                }
              }
            },
            "description": "Delete TSIG response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_schemas-id_response"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Delete TSIG response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Delete TSIG",
        "tags": [
          "Secondary DNS (TSIG)"
        ],
        "x-api-token-group": [
          "Account Settings Write"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      },
      "get": {
        "description": "Get TSIG.",
        "operationId": "secondary-dns-(-tsig)-tsig-details",
        "parameters": [
          {
            "in": "path",
            "name": "tsig_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_schemas-identifier"
            }
          },
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_account_identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_single_response"
                }
              }
            },
            "description": "TSIG Details response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_single_response"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "TSIG Details response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "TSIG Details",
        "tags": [
          "Secondary DNS (TSIG)"
        ],
        "x-api-token-group": [
          "Account Settings Write",
          "Account Settings Read"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      },
      "put": {
        "description": "Modify TSIG.",
        "operationId": "secondary-dns-(-tsig)-update-tsig",
        "parameters": [
          {
            "in": "path",
            "name": "tsig_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_schemas-identifier"
            }
          },
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_account_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/secondary-dns_tsig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_single_response"
                }
              }
            },
            "description": "Update TSIG response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_single_response"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Update TSIG response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Update TSIG",
        "tags": [
          "Secondary DNS (TSIG)"
        ],
        "x-api-token-group": [
          "Account Settings Write"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      }
    },
    "/accounts/{account_id}/warp_connector": {
      "get": {
        "description": "Lists and filters Warp Connector Tunnels in an account.",
        "operationId": "cloudflare-tunnel-list-warp-connector-tunnels",
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/tunnel_account_id"
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "description": "A user-friendly name for the tunnel.",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "is_deleted",
            "schema": {
              "description": "If `true`, only include deleted tunnels.",
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "existed_at",
            "schema": {
              "$ref": "#/components/schemas/tunnel_existed_at"
            }
          },
          {
            "in": "query",
            "name": "uuid",
            "schema": {
              "$ref": "#/components/schemas/tunnel_tunnel_id"
            }
          },
          {
            "in": "query",
            "name": "was_active_at",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "was_inactive_at",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "include_prefix",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exclude_prefix",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "$ref": "#/components/schemas/tunnel_status"
            }
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "$ref": "#/components/schemas/tunnel_per_page"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "$ref": "#/components/schemas/tunnel_page_number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tunnel_tunnel-response-collection"
                }
              }
            },
            "description": "List Warp Connector Tunnels response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/tunnel_tunnel-response-collection"
                    },
                    {
                      "$ref": "#/components/schemas/tunnel_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "List Warp Connector Tunnels response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          },
          {
            "api_token": []
          },
          {
            "user_service_key": []
          }
        ],
        "summary": "List Warp Connector Tunnels",
        "tags": [
          "Cloudflare Tunnel"
        ],
        "x-api-token-group": [
          "Cloudflare One Connectors Write",
          "Cloudflare One Connectors Read",
          "Cloudflare One Connector: WARP Write",
          "Cloudflare One Connector: WARP Read"
        ]
      },
      "post": {
        "description": "Creates a new Warp Connector Tunnel in an account.",
        "operationId": "cloudflare-tunnel-create-a-warp-connector-tunnel",
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/tunnel_account_id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "$ref": "#/components/schemas/tunnel_tunnel_name"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tunnel_tunnel-response-single"
                }
              }
            },
            "description": "Create a Warp Connector Tunnel response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/tunnel_tunnel-response-single"
                    },
                    {
                      "$ref": "#/components/schemas/tunnel_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Create a Warp Connector Tunnel response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          },
          {
            "api_token": []
          },
          {
            "user_service_key": []
          }
        ],
        "summary": "Create a Warp Connector Tunnel",
        "tags": [
          "Cloudflare Tunnel"
        ],
        "x-api-token-group": [
          "Cloudflare One Connectors Write",
          "Cloudflare One Connector: WARP Write"
        ]
      }
    },
    "/accounts/{account_id}/warp_connector/{tunnel_id}": {
      "delete": {
        "description": "Deletes a Warp Connector Tunnel from an account.",
        "operationId": "cloudflare-tunnel-delete-a-warp-connector-tunnel",
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/tunnel_account_id"
            }
          },
          {
            "in": "path",
            "name": "tunnel_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/tunnel_tunnel_id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tunnel_tunnel-response-single"
                }
              }
            },
            "description": "Delete a Warp Connector Tunnel response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/tunnel_tunnel-response-single"
                    },
                    {
                      "$ref": "#/components/schemas/tunnel_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Delete a Warp Connector Tunnel response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          },
          {
            "api_token": []
          },
          {
            "user_service_key": []
          }
        ],
        "summary": "Delete a Warp Connector Tunnel",
        "tags": [
          "Cloudflare Tunnel"
        ],
        "x-api-token-group": [
          "Cloudflare One Connectors Write",
          "Cloudflare One Connector: WARP Write"
        ]
      },
      "get": {
        "description": "Fetches a single Warp Connector Tunnel.",
        "operationId": "cloudflare-tunnel-get-a-warp-connector-tunnel",
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/tunnel_account_id"
            }
          },
          {
            "in": "path",
            "name": "tunnel_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/tunnel_tunnel_id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tunnel_tunnel-response-single"
                }
              }
            },
            "description": "Get a Warp Connector Tunnel response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/tunnel_tunnel-response-single"
                    },
                    {
                      "$ref": "#/components/schemas/tunnel_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Get a Warp Connector Tunnel response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          },
          {
            "api_token": []
          },
          {
            "user_service_key": []
          }
        ],
        "summary": "Get a Warp Connector Tunnel",
        "tags": [
          "Cloudflare Tunnel"
        ],
        "x-api-token-group": [
          "Cloudflare One Connectors Write",
          "Cloudflare One Connectors Read",
          "Cloudflare One Connector: WARP Write",
          "Cloudflare One Connector: WARP Read"
        ]
      },
      "patch": {
        "description": "Updates an existing Warp Connector Tunnel.",
        "operationId": "cloudflare-tunnel-update-a-warp-connector-tunnel",
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/tunnel_account_id"
            }
          },
          {
            "in": "path",
            "name": "tunnel_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/tunnel_tunnel_id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "$ref": "#/components/schemas/tunnel_tunnel_name"
                  },
                  "tunnel_secret": {
                    "$ref": "#/components/schemas/tunnel_tunnel_secret"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tunnel_tunnel-response-single"
                }
              }
            },
            "description": "Update a Warp Connector Tunnel response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/tunnel_tunnel-response-single"
                    },
                    {
                      "$ref": "#/components/schemas/tunnel_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Update a Warp Connector Tunnel response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          },
          {
            "api_token": []
          },
          {
            "user_service_key": []
          }
        ],
        "summary": "Update a Warp Connector Tunnel",
        "tags": [
          "Cloudflare Tunnel"
        ],
        "x-api-token-group": [
          "Cloudflare One Connectors Write",
          "Cloudflare One Connector: WARP Write"
        ]
      }
    },
    "/accounts/{account_id}/warp_connector/{tunnel_id}/token": {
      "get": {
        "description": "Gets the token used to associate warp device with a specific Warp Connector tunnel.",
        "operationId": "cloudflare-tunnel-get-a-warp-connector-tunnel-token",
        "parameters": [
          {
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/tunnel_account_id"
            }
          },
          {
            "in": "path",
            "name": "tunnel_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/tunnel_tunnel_id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tunnel_tunnel_response_token"
                }
              }
            },
            "description": "Get a Warp Connector Tunnel token response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/tunnel_tunnel_response_token"
                    },
                    {
                      "$ref": "#/components/schemas/tunnel_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Get a Warp Connector Tunnel token response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          },
          {
            "api_token": []
          },
          {
            "user_service_key": []
          }
        ],
        "summary": "Get a Warp Connector Tunnel token",
        "tags": [
          "Cloudflare Tunnel"
        ],
        "x-api-token-group": [
          "Cloudflare One Connectors Write",
          "Cloudflare One Connector: cloudflared Write",
          "Cloudflare Tunnel Write"
        ]
      }
    },
    "/radar/as112/summary/dnssec": {
      "get": {
        "description": "Retrieves the distribution of DNS queries to AS112 by DNSSEC (DNS Security Extensions) support.",
        "operationId": "radar-get-dns-as112-timeseries-by-dnssec",
        "parameters": [
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS query type.",
            "in": "query",
            "name": "queryType",
            "schema": {
              "description": "Filters results by DNS query type.",
              "enum": [
                "A",
                "AAAA",
                "A6",
                "AFSDB",
                "ANY",
                "APL",
                "ATMA",
                "AXFR",
                "CAA",
                "CDNSKEY",
                "CDS",
                "CERT",
                "CNAME",
                "CSYNC",
                "DHCID",
                "DLV",
                "DNAME",
                "DNSKEY",
                "DOA",
                "DS",
                "EID",
                "EUI48",
                "EUI64",
                "GPOS",
                "GID",
                "HINFO",
                "HIP",
                "HTTPS",
                "IPSECKEY",
                "ISDN",
                "IXFR",
                "KEY",
                "KX",
                "L32",
                "L64",
                "LOC",
                "LP",
                "MAILA",
                "MAILB",
                "MB",
                "MD",
                "MF",
                "MG",
                "MINFO",
                "MR",
                "MX",
                "NAPTR",
                "NB",
                "NBSTAT",
                "NID",
                "NIMLOC",
                "NINFO",
                "NS",
                "NSAP",
                "NSEC",
                "NSEC3",
                "NSEC3PARAM",
                "NULL",
                "NXT",
                "OPENPGPKEY",
                "OPT",
                "PTR",
                "PX",
                "RKEY",
                "RP",
                "RRSIG",
                "RT",
                "SIG",
                "SINK",
                "SMIMEA",
                "SOA",
                "SPF",
                "SRV",
                "SSHFP",
                "SVCB",
                "TA",
                "TALINK",
                "TKEY",
                "TLSA",
                "TSIG",
                "TXT",
                "UINFO",
                "UID",
                "UNSPEC",
                "URI",
                "WKS",
                "X25",
                "ZONEMD"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS transport protocol.",
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Filters results by DNS transport protocol.",
              "enum": [
                "UDP",
                "TCP",
                "HTTPS",
                "TLS"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS response code.",
            "in": "query",
            "name": "responseCode",
            "schema": {
              "description": "Filters results by DNS response code.",
              "enum": [
                "NOERROR",
                "FORMERR",
                "SERVFAIL",
                "NXDOMAIN",
                "NOTIMP",
                "REFUSED",
                "YXDOMAIN",
                "YXRRSET",
                "NXRRSET",
                "NOTAUTH",
                "NOTZONE",
                "BADSIG",
                "BADKEY",
                "BADTIME",
                "BADMODE",
                "BADNAME",
                "BADALG",
                "BADTRUNC",
                "BADCOOKIE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units"
                          ],
                          "type": "object"
                        },
                        "summary_0": {
                          "properties": {
                            "NOT_SUPPORTED": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            },
                            "SUPPORTED": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            }
                          },
                          "required": [
                            "SUPPORTED",
                            "NOT_SUPPORTED"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "summary_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get AS112 DNS queries by DNSSEC summary",
        "tags": [
          "Radar AS112"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/as112/summary/edns": {
      "get": {
        "description": "Retrieves the distribution of DNS queries to AS112 by EDNS (Extension Mechanisms for DNS) support.",
        "operationId": "radar-get-dns-as112-timeseries-by-edns",
        "parameters": [
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS query type.",
            "in": "query",
            "name": "queryType",
            "schema": {
              "description": "Filters results by DNS query type.",
              "enum": [
                "A",
                "AAAA",
                "A6",
                "AFSDB",
                "ANY",
                "APL",
                "ATMA",
                "AXFR",
                "CAA",
                "CDNSKEY",
                "CDS",
                "CERT",
                "CNAME",
                "CSYNC",
                "DHCID",
                "DLV",
                "DNAME",
                "DNSKEY",
                "DOA",
                "DS",
                "EID",
                "EUI48",
                "EUI64",
                "GPOS",
                "GID",
                "HINFO",
                "HIP",
                "HTTPS",
                "IPSECKEY",
                "ISDN",
                "IXFR",
                "KEY",
                "KX",
                "L32",
                "L64",
                "LOC",
                "LP",
                "MAILA",
                "MAILB",
                "MB",
                "MD",
                "MF",
                "MG",
                "MINFO",
                "MR",
                "MX",
                "NAPTR",
                "NB",
                "NBSTAT",
                "NID",
                "NIMLOC",
                "NINFO",
                "NS",
                "NSAP",
                "NSEC",
                "NSEC3",
                "NSEC3PARAM",
                "NULL",
                "NXT",
                "OPENPGPKEY",
                "OPT",
                "PTR",
                "PX",
                "RKEY",
                "RP",
                "RRSIG",
                "RT",
                "SIG",
                "SINK",
                "SMIMEA",
                "SOA",
                "SPF",
                "SRV",
                "SSHFP",
                "SVCB",
                "TA",
                "TALINK",
                "TKEY",
                "TLSA",
                "TSIG",
                "TXT",
                "UINFO",
                "UID",
                "UNSPEC",
                "URI",
                "WKS",
                "X25",
                "ZONEMD"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS transport protocol.",
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Filters results by DNS transport protocol.",
              "enum": [
                "UDP",
                "TCP",
                "HTTPS",
                "TLS"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS response code.",
            "in": "query",
            "name": "responseCode",
            "schema": {
              "description": "Filters results by DNS response code.",
              "enum": [
                "NOERROR",
                "FORMERR",
                "SERVFAIL",
                "NXDOMAIN",
                "NOTIMP",
                "REFUSED",
                "YXDOMAIN",
                "YXRRSET",
                "NXRRSET",
                "NOTAUTH",
                "NOTZONE",
                "BADSIG",
                "BADKEY",
                "BADTIME",
                "BADMODE",
                "BADNAME",
                "BADALG",
                "BADTRUNC",
                "BADCOOKIE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units"
                          ],
                          "type": "object"
                        },
                        "summary_0": {
                          "properties": {
                            "NOT_SUPPORTED": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            },
                            "SUPPORTED": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            }
                          },
                          "required": [
                            "SUPPORTED",
                            "NOT_SUPPORTED"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "summary_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get AS112 DNS queries by EDNS summary",
        "tags": [
          "Radar AS112"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/as112/timeseries_groups/dnssec": {
      "get": {
        "description": "Retrieves the distribution of AS112 DNS queries by DNSSEC (DNS Security Extensions) support over...",
        "operationId": "radar-get-dns-as112-timeseries-group-by-dnssec",
        "parameters": [
          {
            "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
            "in": "query",
            "name": "aggInterval",
            "schema": {
              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
              "enum": [
                "15m",
                "1h",
                "1d",
                "1w"
              ],
              "type": "string"
            }
          },
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS query type.",
            "in": "query",
            "name": "queryType",
            "schema": {
              "description": "Filters results by DNS query type.",
              "enum": [
                "A",
                "AAAA",
                "A6",
                "AFSDB",
                "ANY",
                "APL",
                "ATMA",
                "AXFR",
                "CAA",
                "CDNSKEY",
                "CDS",
                "CERT",
                "CNAME",
                "CSYNC",
                "DHCID",
                "DLV",
                "DNAME",
                "DNSKEY",
                "DOA",
                "DS",
                "EID",
                "EUI48",
                "EUI64",
                "GPOS",
                "GID",
                "HINFO",
                "HIP",
                "HTTPS",
                "IPSECKEY",
                "ISDN",
                "IXFR",
                "KEY",
                "KX",
                "L32",
                "L64",
                "LOC",
                "LP",
                "MAILA",
                "MAILB",
                "MB",
                "MD",
                "MF",
                "MG",
                "MINFO",
                "MR",
                "MX",
                "NAPTR",
                "NB",
                "NBSTAT",
                "NID",
                "NIMLOC",
                "NINFO",
                "NS",
                "NSAP",
                "NSEC",
                "NSEC3",
                "NSEC3PARAM",
                "NULL",
                "NXT",
                "OPENPGPKEY",
                "OPT",
                "PTR",
                "PX",
                "RKEY",
                "RP",
                "RRSIG",
                "RT",
                "SIG",
                "SINK",
                "SMIMEA",
                "SOA",
                "SPF",
                "SRV",
                "SSHFP",
                "SVCB",
                "TA",
                "TALINK",
                "TKEY",
                "TLSA",
                "TSIG",
                "TXT",
                "UINFO",
                "UID",
                "UNSPEC",
                "URI",
                "WKS",
                "X25",
                "ZONEMD"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS transport protocol.",
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Filters results by DNS transport protocol.",
              "enum": [
                "UDP",
                "TCP",
                "HTTPS",
                "TLS"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS response code.",
            "in": "query",
            "name": "responseCode",
            "schema": {
              "description": "Filters results by DNS response code.",
              "enum": [
                "NOERROR",
                "FORMERR",
                "SERVFAIL",
                "NXDOMAIN",
                "NOTIMP",
                "REFUSED",
                "YXDOMAIN",
                "YXRRSET",
                "NXRRSET",
                "NOTAUTH",
                "NOTZONE",
                "BADSIG",
                "BADKEY",
                "BADTIME",
                "BADMODE",
                "BADNAME",
                "BADALG",
                "BADTRUNC",
                "BADCOOKIE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "aggInterval": {
                              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
                              "enum": [
                                "FIFTEEN_MINUTES",
                                "ONE_HOUR",
                                "ONE_DAY",
                                "ONE_WEEK",
                                "ONE_MONTH"
                              ],
                              "type": "string"
                            },
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units",
                            "aggInterval"
                          ],
                          "type": "object"
                        },
                        "serie_0": {
                          "properties": {
                            "NOT_SUPPORTED": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "SUPPORTED": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "SUPPORTED",
                            "NOT_SUPPORTED"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "serie_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get AS112 DNS queries by DNSSEC support time series",
        "tags": [
          "Radar AS112"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/as112/timeseries_groups/edns": {
      "get": {
        "description": "Retrieves the distribution of AS112 DNS queries by EDNS (Extension Mechanisms for DNS) support over...",
        "operationId": "radar-get-dns-as112-timeseries-group-by-edns",
        "parameters": [
          {
            "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
            "in": "query",
            "name": "aggInterval",
            "schema": {
              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
              "enum": [
                "15m",
                "1h",
                "1d",
                "1w"
              ],
              "type": "string"
            }
          },
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS query type.",
            "in": "query",
            "name": "queryType",
            "schema": {
              "description": "Filters results by DNS query type.",
              "enum": [
                "A",
                "AAAA",
                "A6",
                "AFSDB",
                "ANY",
                "APL",
                "ATMA",
                "AXFR",
                "CAA",
                "CDNSKEY",
                "CDS",
                "CERT",
                "CNAME",
                "CSYNC",
                "DHCID",
                "DLV",
                "DNAME",
                "DNSKEY",
                "DOA",
                "DS",
                "EID",
                "EUI48",
                "EUI64",
                "GPOS",
                "GID",
                "HINFO",
                "HIP",
                "HTTPS",
                "IPSECKEY",
                "ISDN",
                "IXFR",
                "KEY",
                "KX",
                "L32",
                "L64",
                "LOC",
                "LP",
                "MAILA",
                "MAILB",
                "MB",
                "MD",
                "MF",
                "MG",
                "MINFO",
                "MR",
                "MX",
                "NAPTR",
                "NB",
                "NBSTAT",
                "NID",
                "NIMLOC",
                "NINFO",
                "NS",
                "NSAP",
                "NSEC",
                "NSEC3",
                "NSEC3PARAM",
                "NULL",
                "NXT",
                "OPENPGPKEY",
                "OPT",
                "PTR",
                "PX",
                "RKEY",
                "RP",
                "RRSIG",
                "RT",
                "SIG",
                "SINK",
                "SMIMEA",
                "SOA",
                "SPF",
                "SRV",
                "SSHFP",
                "SVCB",
                "TA",
                "TALINK",
                "TKEY",
                "TLSA",
                "TSIG",
                "TXT",
                "UINFO",
                "UID",
                "UNSPEC",
                "URI",
                "WKS",
                "X25",
                "ZONEMD"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS transport protocol.",
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Filters results by DNS transport protocol.",
              "enum": [
                "UDP",
                "TCP",
                "HTTPS",
                "TLS"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS response code.",
            "in": "query",
            "name": "responseCode",
            "schema": {
              "description": "Filters results by DNS response code.",
              "enum": [
                "NOERROR",
                "FORMERR",
                "SERVFAIL",
                "NXDOMAIN",
                "NOTIMP",
                "REFUSED",
                "YXDOMAIN",
                "YXRRSET",
                "NXRRSET",
                "NOTAUTH",
                "NOTZONE",
                "BADSIG",
                "BADKEY",
                "BADTIME",
                "BADMODE",
                "BADNAME",
                "BADALG",
                "BADTRUNC",
                "BADCOOKIE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "aggInterval": {
                              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
                              "enum": [
                                "FIFTEEN_MINUTES",
                                "ONE_HOUR",
                                "ONE_DAY",
                                "ONE_WEEK",
                                "ONE_MONTH"
                              ],
                              "type": "string"
                            },
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units",
                            "aggInterval"
                          ],
                          "type": "object"
                        },
                        "serie_0": {
                          "properties": {
                            "NOT_SUPPORTED": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "SUPPORTED": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "SUPPORTED",
                            "NOT_SUPPORTED"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "serie_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get AS112 DNS queries by EDNS support summary",
        "tags": [
          "Radar AS112"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/as112/top/locations/dnssec/{dnssec}": {
      "get": {
        "description": "Retrieves the top locations of DNS queries to AS112 with DNSSEC (DNS Security Extensions) support.",
        "operationId": "radar-get-dns-as112-top-locations-by-dnssec",
        "parameters": [
          {
            "description": "DNSSEC (DNS Security Extensions) status.",
            "in": "path",
            "name": "dnssec",
            "required": true,
            "schema": {
              "description": "DNSSEC (DNS Security Extensions) status.",
              "enum": [
                "SUPPORTED",
                "NOT_SUPPORTED"
              ],
              "type": "string"
            }
          },
          {
            "description": "Limits the number of objects returned in the response.",
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "Limits the number of objects returned in the response.",
              "type": "integer"
            }
          },
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "confidenceInfo": {
                              "nullable": true,
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units"
                          ],
                          "type": "object"
                        },
                        "top_0": {
                          "items": {
                            "properties": {
                              "clientCountryAlpha2": {
                                "type": "string"
                              },
                              "clientCountryName": {
                                "type": "string"
                              },
                              "value": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "clientCountryAlpha2",
                              "clientCountryName",
                              "value"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "top_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get top locations by AS112 DNS queries with DNSSEC support",
        "tags": [
          "Radar AS112"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/as112/top/locations/edns/{edns}": {
      "get": {
        "description": "Retrieves the top locations of DNS queries to AS112 with EDNS (Extension Mechanisms for DNS)...",
        "operationId": "radar-get-dns-as112-top-locations-by-edns",
        "parameters": [
          {
            "description": "EDNS (Extension Mechanisms for DNS) status.",
            "in": "path",
            "name": "edns",
            "required": true,
            "schema": {
              "description": "EDNS (Extension Mechanisms for DNS) status.",
              "enum": [
                "SUPPORTED",
                "NOT_SUPPORTED"
              ],
              "type": "string"
            }
          },
          {
            "description": "Limits the number of objects returned in the response.",
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "Limits the number of objects returned in the response.",
              "type": "integer"
            }
          },
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "confidenceInfo": {
                              "nullable": true,
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units"
                          ],
                          "type": "object"
                        },
                        "top_0": {
                          "items": {
                            "properties": {
                              "clientCountryAlpha2": {
                                "type": "string"
                              },
                              "clientCountryName": {
                                "type": "string"
                              },
                              "value": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "clientCountryAlpha2",
                              "clientCountryName",
                              "value"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "top_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get top locations by AS112 DNS queries with EDNS support",
        "tags": [
          "Radar AS112"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/dns/summary/cache_hit": {
      "get": {
        "description": "Retrieves the distribution of DNS queries by cache status.",
        "operationId": "radar-get-dns-summary-by-cache-hit-status",
        "parameters": [
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by Autonomous System.",
            "in": "query",
            "name": "asn",
            "schema": {
              "description": "Filters results by Autonomous System.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by country code top-level domain (ccTLD).",
            "in": "query",
            "name": "tld",
            "schema": {
              "description": "Filters results by country code top-level domain (ccTLD).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS query type.",
            "in": "query",
            "name": "queryType",
            "schema": {
              "description": "Filters results by DNS query type.",
              "enum": [
                "A",
                "AAAA",
                "A6",
                "AFSDB",
                "ANY",
                "APL",
                "ATMA",
                "AXFR",
                "CAA",
                "CDNSKEY",
                "CDS",
                "CERT",
                "CNAME",
                "CSYNC",
                "DHCID",
                "DLV",
                "DNAME",
                "DNSKEY",
                "DOA",
                "DS",
                "EID",
                "EUI48",
                "EUI64",
                "GPOS",
                "GID",
                "HINFO",
                "HIP",
                "HTTPS",
                "IPSECKEY",
                "ISDN",
                "IXFR",
                "KEY",
                "KX",
                "L32",
                "L64",
                "LOC",
                "LP",
                "MAILA",
                "MAILB",
                "MB",
                "MD",
                "MF",
                "MG",
                "MINFO",
                "MR",
                "MX",
                "NAPTR",
                "NB",
                "NBSTAT",
                "NID",
                "NIMLOC",
                "NINFO",
                "NS",
                "NSAP",
                "NSEC",
                "NSEC3",
                "NSEC3PARAM",
                "NULL",
                "NXT",
                "OPENPGPKEY",
                "OPT",
                "PTR",
                "PX",
                "RKEY",
                "RP",
                "RRSIG",
                "RT",
                "SIG",
                "SINK",
                "SMIMEA",
                "SOA",
                "SPF",
                "SRV",
                "SSHFP",
                "SVCB",
                "TA",
                "TALINK",
                "TKEY",
                "TLSA",
                "TSIG",
                "TXT",
                "UINFO",
                "UID",
                "UNSPEC",
                "URI",
                "WKS",
                "X25",
                "ZONEMD"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS transport protocol.",
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Filters results by DNS transport protocol.",
              "enum": [
                "UDP",
                "TCP",
                "HTTPS",
                "TLS"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS response code.",
            "in": "query",
            "name": "responseCode",
            "schema": {
              "description": "Filters results by DNS response code.",
              "enum": [
                "NOERROR",
                "FORMERR",
                "SERVFAIL",
                "NXDOMAIN",
                "NOTIMP",
                "REFUSED",
                "YXDOMAIN",
                "YXRRSET",
                "NXRRSET",
                "NOTAUTH",
                "NOTZONE",
                "BADSIG",
                "BADKEY",
                "BADTIME",
                "BADMODE",
                "BADNAME",
                "BADALG",
                "BADTRUNC",
                "BADCOOKIE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Specifies whether the response includes empty DNS responses (NODATA).",
            "in": "query",
            "name": "nodata",
            "schema": {
              "description": "Specifies whether the response includes empty DNS responses (NODATA).",
              "type": "boolean"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units"
                          ],
                          "type": "object"
                        },
                        "summary_0": {
                          "properties": {
                            "NEGATIVE": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            },
                            "POSITIVE": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            }
                          },
                          "required": [
                            "POSITIVE",
                            "NEGATIVE"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "summary_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get DNS queries by cache status summary",
        "tags": [
          "Radar DNS"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/dns/summary/dnssec": {
      "get": {
        "description": "Retrieves the distribution of DNS responses by DNSSEC (DNS Security Extensions) support.",
        "operationId": "radar-get-dns-summary-by-dnssec",
        "parameters": [
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by Autonomous System.",
            "in": "query",
            "name": "asn",
            "schema": {
              "description": "Filters results by Autonomous System.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by country code top-level domain (ccTLD).",
            "in": "query",
            "name": "tld",
            "schema": {
              "description": "Filters results by country code top-level domain (ccTLD).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS query type.",
            "in": "query",
            "name": "queryType",
            "schema": {
              "description": "Filters results by DNS query type.",
              "enum": [
                "A",
                "AAAA",
                "A6",
                "AFSDB",
                "ANY",
                "APL",
                "ATMA",
                "AXFR",
                "CAA",
                "CDNSKEY",
                "CDS",
                "CERT",
                "CNAME",
                "CSYNC",
                "DHCID",
                "DLV",
                "DNAME",
                "DNSKEY",
                "DOA",
                "DS",
                "EID",
                "EUI48",
                "EUI64",
                "GPOS",
                "GID",
                "HINFO",
                "HIP",
                "HTTPS",
                "IPSECKEY",
                "ISDN",
                "IXFR",
                "KEY",
                "KX",
                "L32",
                "L64",
                "LOC",
                "LP",
                "MAILA",
                "MAILB",
                "MB",
                "MD",
                "MF",
                "MG",
                "MINFO",
                "MR",
                "MX",
                "NAPTR",
                "NB",
                "NBSTAT",
                "NID",
                "NIMLOC",
                "NINFO",
                "NS",
                "NSAP",
                "NSEC",
                "NSEC3",
                "NSEC3PARAM",
                "NULL",
                "NXT",
                "OPENPGPKEY",
                "OPT",
                "PTR",
                "PX",
                "RKEY",
                "RP",
                "RRSIG",
                "RT",
                "SIG",
                "SINK",
                "SMIMEA",
                "SOA",
                "SPF",
                "SRV",
                "SSHFP",
                "SVCB",
                "TA",
                "TALINK",
                "TKEY",
                "TLSA",
                "TSIG",
                "TXT",
                "UINFO",
                "UID",
                "UNSPEC",
                "URI",
                "WKS",
                "X25",
                "ZONEMD"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS transport protocol.",
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Filters results by DNS transport protocol.",
              "enum": [
                "UDP",
                "TCP",
                "HTTPS",
                "TLS"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS response code.",
            "in": "query",
            "name": "responseCode",
            "schema": {
              "description": "Filters results by DNS response code.",
              "enum": [
                "NOERROR",
                "FORMERR",
                "SERVFAIL",
                "NXDOMAIN",
                "NOTIMP",
                "REFUSED",
                "YXDOMAIN",
                "YXRRSET",
                "NXRRSET",
                "NOTAUTH",
                "NOTZONE",
                "BADSIG",
                "BADKEY",
                "BADTIME",
                "BADMODE",
                "BADNAME",
                "BADALG",
                "BADTRUNC",
                "BADCOOKIE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Specifies whether the response includes empty DNS responses (NODATA).",
            "in": "query",
            "name": "nodata",
            "schema": {
              "description": "Specifies whether the response includes empty DNS responses (NODATA).",
              "type": "boolean"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units"
                          ],
                          "type": "object"
                        },
                        "summary_0": {
                          "properties": {
                            "INSECURE": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            },
                            "INVALID": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            },
                            "OTHER": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            },
                            "SECURE": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            }
                          },
                          "required": [
                            "INSECURE",
                            "SECURE",
                            "INVALID",
                            "OTHER"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "summary_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get DNS queries by DNSSEC support summary",
        "tags": [
          "Radar DNS"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/dns/summary/dnssec_aware": {
      "get": {
        "description": "Retrieves the distribution of DNS queries by DNSSEC (DNS Security Extensions) client awareness.",
        "operationId": "radar-get-dns-summary-by-dnssec-awareness",
        "parameters": [
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by Autonomous System.",
            "in": "query",
            "name": "asn",
            "schema": {
              "description": "Filters results by Autonomous System.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by country code top-level domain (ccTLD).",
            "in": "query",
            "name": "tld",
            "schema": {
              "description": "Filters results by country code top-level domain (ccTLD).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS query type.",
            "in": "query",
            "name": "queryType",
            "schema": {
              "description": "Filters results by DNS query type.",
              "enum": [
                "A",
                "AAAA",
                "A6",
                "AFSDB",
                "ANY",
                "APL",
                "ATMA",
                "AXFR",
                "CAA",
                "CDNSKEY",
                "CDS",
                "CERT",
                "CNAME",
                "CSYNC",
                "DHCID",
                "DLV",
                "DNAME",
                "DNSKEY",
                "DOA",
                "DS",
                "EID",
                "EUI48",
                "EUI64",
                "GPOS",
                "GID",
                "HINFO",
                "HIP",
                "HTTPS",
                "IPSECKEY",
                "ISDN",
                "IXFR",
                "KEY",
                "KX",
                "L32",
                "L64",
                "LOC",
                "LP",
                "MAILA",
                "MAILB",
                "MB",
                "MD",
                "MF",
                "MG",
                "MINFO",
                "MR",
                "MX",
                "NAPTR",
                "NB",
                "NBSTAT",
                "NID",
                "NIMLOC",
                "NINFO",
                "NS",
                "NSAP",
                "NSEC",
                "NSEC3",
                "NSEC3PARAM",
                "NULL",
                "NXT",
                "OPENPGPKEY",
                "OPT",
                "PTR",
                "PX",
                "RKEY",
                "RP",
                "RRSIG",
                "RT",
                "SIG",
                "SINK",
                "SMIMEA",
                "SOA",
                "SPF",
                "SRV",
                "SSHFP",
                "SVCB",
                "TA",
                "TALINK",
                "TKEY",
                "TLSA",
                "TSIG",
                "TXT",
                "UINFO",
                "UID",
                "UNSPEC",
                "URI",
                "WKS",
                "X25",
                "ZONEMD"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS transport protocol.",
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Filters results by DNS transport protocol.",
              "enum": [
                "UDP",
                "TCP",
                "HTTPS",
                "TLS"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS response code.",
            "in": "query",
            "name": "responseCode",
            "schema": {
              "description": "Filters results by DNS response code.",
              "enum": [
                "NOERROR",
                "FORMERR",
                "SERVFAIL",
                "NXDOMAIN",
                "NOTIMP",
                "REFUSED",
                "YXDOMAIN",
                "YXRRSET",
                "NXRRSET",
                "NOTAUTH",
                "NOTZONE",
                "BADSIG",
                "BADKEY",
                "BADTIME",
                "BADMODE",
                "BADNAME",
                "BADALG",
                "BADTRUNC",
                "BADCOOKIE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Specifies whether the response includes empty DNS responses (NODATA).",
            "in": "query",
            "name": "nodata",
            "schema": {
              "description": "Specifies whether the response includes empty DNS responses (NODATA).",
              "type": "boolean"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units"
                          ],
                          "type": "object"
                        },
                        "summary_0": {
                          "properties": {
                            "NOT_SUPPORTED": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            },
                            "SUPPORTED": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            }
                          },
                          "required": [
                            "NOT_SUPPORTED",
                            "SUPPORTED"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "summary_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get DNS queries by DNSSEC awareness summary",
        "tags": [
          "Radar DNS"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/dns/summary/dnssec_e2e": {
      "get": {
        "description": "Retrieves the distribution of DNSSEC-validated answers by end-to-end security status.",
        "operationId": "radar-get-dns-summary-by-dnssec-e2e-version",
        "parameters": [
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by Autonomous System.",
            "in": "query",
            "name": "asn",
            "schema": {
              "description": "Filters results by Autonomous System.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by country code top-level domain (ccTLD).",
            "in": "query",
            "name": "tld",
            "schema": {
              "description": "Filters results by country code top-level domain (ccTLD).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS query type.",
            "in": "query",
            "name": "queryType",
            "schema": {
              "description": "Filters results by DNS query type.",
              "enum": [
                "A",
                "AAAA",
                "A6",
                "AFSDB",
                "ANY",
                "APL",
                "ATMA",
                "AXFR",
                "CAA",
                "CDNSKEY",
                "CDS",
                "CERT",
                "CNAME",
                "CSYNC",
                "DHCID",
                "DLV",
                "DNAME",
                "DNSKEY",
                "DOA",
                "DS",
                "EID",
                "EUI48",
                "EUI64",
                "GPOS",
                "GID",
                "HINFO",
                "HIP",
                "HTTPS",
                "IPSECKEY",
                "ISDN",
                "IXFR",
                "KEY",
                "KX",
                "L32",
                "L64",
                "LOC",
                "LP",
                "MAILA",
                "MAILB",
                "MB",
                "MD",
                "MF",
                "MG",
                "MINFO",
                "MR",
                "MX",
                "NAPTR",
                "NB",
                "NBSTAT",
                "NID",
                "NIMLOC",
                "NINFO",
                "NS",
                "NSAP",
                "NSEC",
                "NSEC3",
                "NSEC3PARAM",
                "NULL",
                "NXT",
                "OPENPGPKEY",
                "OPT",
                "PTR",
                "PX",
                "RKEY",
                "RP",
                "RRSIG",
                "RT",
                "SIG",
                "SINK",
                "SMIMEA",
                "SOA",
                "SPF",
                "SRV",
                "SSHFP",
                "SVCB",
                "TA",
                "TALINK",
                "TKEY",
                "TLSA",
                "TSIG",
                "TXT",
                "UINFO",
                "UID",
                "UNSPEC",
                "URI",
                "WKS",
                "X25",
                "ZONEMD"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS transport protocol.",
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Filters results by DNS transport protocol.",
              "enum": [
                "UDP",
                "TCP",
                "HTTPS",
                "TLS"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS response code.",
            "in": "query",
            "name": "responseCode",
            "schema": {
              "description": "Filters results by DNS response code.",
              "enum": [
                "NOERROR",
                "FORMERR",
                "SERVFAIL",
                "NXDOMAIN",
                "NOTIMP",
                "REFUSED",
                "YXDOMAIN",
                "YXRRSET",
                "NXRRSET",
                "NOTAUTH",
                "NOTZONE",
                "BADSIG",
                "BADKEY",
                "BADTIME",
                "BADMODE",
                "BADNAME",
                "BADALG",
                "BADTRUNC",
                "BADCOOKIE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Specifies whether the response includes empty DNS responses (NODATA).",
            "in": "query",
            "name": "nodata",
            "schema": {
              "description": "Specifies whether the response includes empty DNS responses (NODATA).",
              "type": "boolean"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units"
                          ],
                          "type": "object"
                        },
                        "summary_0": {
                          "properties": {
                            "NEGATIVE": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            },
                            "POSITIVE": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            }
                          },
                          "required": [
                            "NEGATIVE",
                            "POSITIVE"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "summary_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get DNS queries by DNSSEC end-to-end summary",
        "tags": [
          "Radar DNS"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/dns/summary/ip_version": {
      "get": {
        "description": "Retrieves the distribution of DNS queries by IP version.",
        "operationId": "radar-get-dns-summary-by-ip-version",
        "parameters": [
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by Autonomous System.",
            "in": "query",
            "name": "asn",
            "schema": {
              "description": "Filters results by Autonomous System.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by country code top-level domain (ccTLD).",
            "in": "query",
            "name": "tld",
            "schema": {
              "description": "Filters results by country code top-level domain (ccTLD).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS query type.",
            "in": "query",
            "name": "queryType",
            "schema": {
              "description": "Filters results by DNS query type.",
              "enum": [
                "A",
                "AAAA",
                "A6",
                "AFSDB",
                "ANY",
                "APL",
                "ATMA",
                "AXFR",
                "CAA",
                "CDNSKEY",
                "CDS",
                "CERT",
                "CNAME",
                "CSYNC",
                "DHCID",
                "DLV",
                "DNAME",
                "DNSKEY",
                "DOA",
                "DS",
                "EID",
                "EUI48",
                "EUI64",
                "GPOS",
                "GID",
                "HINFO",
                "HIP",
                "HTTPS",
                "IPSECKEY",
                "ISDN",
                "IXFR",
                "KEY",
                "KX",
                "L32",
                "L64",
                "LOC",
                "LP",
                "MAILA",
                "MAILB",
                "MB",
                "MD",
                "MF",
                "MG",
                "MINFO",
                "MR",
                "MX",
                "NAPTR",
                "NB",
                "NBSTAT",
                "NID",
                "NIMLOC",
                "NINFO",
                "NS",
                "NSAP",
                "NSEC",
                "NSEC3",
                "NSEC3PARAM",
                "NULL",
                "NXT",
                "OPENPGPKEY",
                "OPT",
                "PTR",
                "PX",
                "RKEY",
                "RP",
                "RRSIG",
                "RT",
                "SIG",
                "SINK",
                "SMIMEA",
                "SOA",
                "SPF",
                "SRV",
                "SSHFP",
                "SVCB",
                "TA",
                "TALINK",
                "TKEY",
                "TLSA",
                "TSIG",
                "TXT",
                "UINFO",
                "UID",
                "UNSPEC",
                "URI",
                "WKS",
                "X25",
                "ZONEMD"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS transport protocol.",
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Filters results by DNS transport protocol.",
              "enum": [
                "UDP",
                "TCP",
                "HTTPS",
                "TLS"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS response code.",
            "in": "query",
            "name": "responseCode",
            "schema": {
              "description": "Filters results by DNS response code.",
              "enum": [
                "NOERROR",
                "FORMERR",
                "SERVFAIL",
                "NXDOMAIN",
                "NOTIMP",
                "REFUSED",
                "YXDOMAIN",
                "YXRRSET",
                "NXRRSET",
                "NOTAUTH",
                "NOTZONE",
                "BADSIG",
                "BADKEY",
                "BADTIME",
                "BADMODE",
                "BADNAME",
                "BADALG",
                "BADTRUNC",
                "BADCOOKIE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Specifies whether the response includes empty DNS responses (NODATA).",
            "in": "query",
            "name": "nodata",
            "schema": {
              "description": "Specifies whether the response includes empty DNS responses (NODATA).",
              "type": "boolean"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units"
                          ],
                          "type": "object"
                        },
                        "summary_0": {
                          "properties": {
                            "IPv4": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            },
                            "IPv6": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            }
                          },
                          "required": [
                            "IPv4",
                            "IPv6"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "summary_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get DNS queries by IP version summary",
        "tags": [
          "Radar DNS"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/dns/summary/matching_answer": {
      "get": {
        "description": "Retrieves the distribution of DNS queries by matching answers.",
        "operationId": "radar-get-dns-summary-by-matching-answer-status",
        "parameters": [
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by Autonomous System.",
            "in": "query",
            "name": "asn",
            "schema": {
              "description": "Filters results by Autonomous System.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by country code top-level domain (ccTLD).",
            "in": "query",
            "name": "tld",
            "schema": {
              "description": "Filters results by country code top-level domain (ccTLD).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS query type.",
            "in": "query",
            "name": "queryType",
            "schema": {
              "description": "Filters results by DNS query type.",
              "enum": [
                "A",
                "AAAA",
                "A6",
                "AFSDB",
                "ANY",
                "APL",
                "ATMA",
                "AXFR",
                "CAA",
                "CDNSKEY",
                "CDS",
                "CERT",
                "CNAME",
                "CSYNC",
                "DHCID",
                "DLV",
                "DNAME",
                "DNSKEY",
                "DOA",
                "DS",
                "EID",
                "EUI48",
                "EUI64",
                "GPOS",
                "GID",
                "HINFO",
                "HIP",
                "HTTPS",
                "IPSECKEY",
                "ISDN",
                "IXFR",
                "KEY",
                "KX",
                "L32",
                "L64",
                "LOC",
                "LP",
                "MAILA",
                "MAILB",
                "MB",
                "MD",
                "MF",
                "MG",
                "MINFO",
                "MR",
                "MX",
                "NAPTR",
                "NB",
                "NBSTAT",
                "NID",
                "NIMLOC",
                "NINFO",
                "NS",
                "NSAP",
                "NSEC",
                "NSEC3",
                "NSEC3PARAM",
                "NULL",
                "NXT",
                "OPENPGPKEY",
                "OPT",
                "PTR",
                "PX",
                "RKEY",
                "RP",
                "RRSIG",
                "RT",
                "SIG",
                "SINK",
                "SMIMEA",
                "SOA",
                "SPF",
                "SRV",
                "SSHFP",
                "SVCB",
                "TA",
                "TALINK",
                "TKEY",
                "TLSA",
                "TSIG",
                "TXT",
                "UINFO",
                "UID",
                "UNSPEC",
                "URI",
                "WKS",
                "X25",
                "ZONEMD"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS transport protocol.",
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Filters results by DNS transport protocol.",
              "enum": [
                "UDP",
                "TCP",
                "HTTPS",
                "TLS"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS response code.",
            "in": "query",
            "name": "responseCode",
            "schema": {
              "description": "Filters results by DNS response code.",
              "enum": [
                "NOERROR",
                "FORMERR",
                "SERVFAIL",
                "NXDOMAIN",
                "NOTIMP",
                "REFUSED",
                "YXDOMAIN",
                "YXRRSET",
                "NXRRSET",
                "NOTAUTH",
                "NOTZONE",
                "BADSIG",
                "BADKEY",
                "BADTIME",
                "BADMODE",
                "BADNAME",
                "BADALG",
                "BADTRUNC",
                "BADCOOKIE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Specifies whether the response includes empty DNS responses (NODATA).",
            "in": "query",
            "name": "nodata",
            "schema": {
              "description": "Specifies whether the response includes empty DNS responses (NODATA).",
              "type": "boolean"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units"
                          ],
                          "type": "object"
                        },
                        "summary_0": {
                          "properties": {
                            "NEGATIVE": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            },
                            "POSITIVE": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            }
                          },
                          "required": [
                            "POSITIVE",
                            "NEGATIVE"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "summary_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get DNS queries by matching answer summary",
        "tags": [
          "Radar DNS"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/dns/summary/protocol": {
      "get": {
        "description": "Retrieves the distribution of DNS queries by DNS transport protocol.",
        "operationId": "radar-get-dns-summary-by-protocol",
        "parameters": [
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by Autonomous System.",
            "in": "query",
            "name": "asn",
            "schema": {
              "description": "Filters results by Autonomous System.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by country code top-level domain (ccTLD).",
            "in": "query",
            "name": "tld",
            "schema": {
              "description": "Filters results by country code top-level domain (ccTLD).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS query type.",
            "in": "query",
            "name": "queryType",
            "schema": {
              "description": "Filters results by DNS query type.",
              "enum": [
                "A",
                "AAAA",
                "A6",
                "AFSDB",
                "ANY",
                "APL",
                "ATMA",
                "AXFR",
                "CAA",
                "CDNSKEY",
                "CDS",
                "CERT",
                "CNAME",
                "CSYNC",
                "DHCID",
                "DLV",
                "DNAME",
                "DNSKEY",
                "DOA",
                "DS",
                "EID",
                "EUI48",
                "EUI64",
                "GPOS",
                "GID",
                "HINFO",
                "HIP",
                "HTTPS",
                "IPSECKEY",
                "ISDN",
                "IXFR",
                "KEY",
                "KX",
                "L32",
                "L64",
                "LOC",
                "LP",
                "MAILA",
                "MAILB",
                "MB",
                "MD",
                "MF",
                "MG",
                "MINFO",
                "MR",
                "MX",
                "NAPTR",
                "NB",
                "NBSTAT",
                "NID",
                "NIMLOC",
                "NINFO",
                "NS",
                "NSAP",
                "NSEC",
                "NSEC3",
                "NSEC3PARAM",
                "NULL",
                "NXT",
                "OPENPGPKEY",
                "OPT",
                "PTR",
                "PX",
                "RKEY",
                "RP",
                "RRSIG",
                "RT",
                "SIG",
                "SINK",
                "SMIMEA",
                "SOA",
                "SPF",
                "SRV",
                "SSHFP",
                "SVCB",
                "TA",
                "TALINK",
                "TKEY",
                "TLSA",
                "TSIG",
                "TXT",
                "UINFO",
                "UID",
                "UNSPEC",
                "URI",
                "WKS",
                "X25",
                "ZONEMD"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS response code.",
            "in": "query",
            "name": "responseCode",
            "schema": {
              "description": "Filters results by DNS response code.",
              "enum": [
                "NOERROR",
                "FORMERR",
                "SERVFAIL",
                "NXDOMAIN",
                "NOTIMP",
                "REFUSED",
                "YXDOMAIN",
                "YXRRSET",
                "NXRRSET",
                "NOTAUTH",
                "NOTZONE",
                "BADSIG",
                "BADKEY",
                "BADTIME",
                "BADMODE",
                "BADNAME",
                "BADALG",
                "BADTRUNC",
                "BADCOOKIE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Specifies whether the response includes empty DNS responses (NODATA).",
            "in": "query",
            "name": "nodata",
            "schema": {
              "description": "Specifies whether the response includes empty DNS responses (NODATA).",
              "type": "boolean"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units"
                          ],
                          "type": "object"
                        },
                        "summary_0": {
                          "properties": {
                            "HTTPS": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            },
                            "TCP": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            },
                            "TLS": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            },
                            "UDP": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            }
                          },
                          "required": [
                            "UDP",
                            "TLS",
                            "HTTPS",
                            "TCP"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "summary_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get DNS queries by protocol summary",
        "tags": [
          "Radar DNS"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/dns/summary/query_type": {
      "get": {
        "description": "Retrieves the distribution of DNS queries by type.",
        "operationId": "radar-get-dns-summary-by-query-type",
        "parameters": [
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by Autonomous System.",
            "in": "query",
            "name": "asn",
            "schema": {
              "description": "Filters results by Autonomous System.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by country code top-level domain (ccTLD).",
            "in": "query",
            "name": "tld",
            "schema": {
              "description": "Filters results by country code top-level domain (ccTLD).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS transport protocol.",
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Filters results by DNS transport protocol.",
              "enum": [
                "UDP",
                "TCP",
                "HTTPS",
                "TLS"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS response code.",
            "in": "query",
            "name": "responseCode",
            "schema": {
              "description": "Filters results by DNS response code.",
              "enum": [
                "NOERROR",
                "FORMERR",
                "SERVFAIL",
                "NXDOMAIN",
                "NOTIMP",
                "REFUSED",
                "YXDOMAIN",
                "YXRRSET",
                "NXRRSET",
                "NOTAUTH",
                "NOTZONE",
                "BADSIG",
                "BADKEY",
                "BADTIME",
                "BADMODE",
                "BADNAME",
                "BADALG",
                "BADTRUNC",
                "BADCOOKIE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Specifies whether the response includes empty DNS responses (NODATA).",
            "in": "query",
            "name": "nodata",
            "schema": {
              "description": "Specifies whether the response includes empty DNS responses (NODATA).",
              "type": "boolean"
            }
          },
          {
            "description": "Limits the number of objects per group to the top items within the specified time range.",
            "in": "query",
            "name": "limitPerGroup",
            "schema": {
              "description": "Limits the number of objects per group to the top items within the specified time range.",
              "type": "integer"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units"
                          ],
                          "type": "object"
                        },
                        "summary_0": {
                          "additionalProperties": {
                            "description": "A numeric string.",
                            "pattern": "^\\d+$",
                            "type": "string"
                          },
                          "type": "object"
                        }
                      },
                      "required": [
                        "summary_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get DNS queries by type summary",
        "tags": [
          "Radar DNS"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/dns/summary/response_code": {
      "get": {
        "description": "Retrieves the distribution of DNS queries by response code.",
        "operationId": "radar-get-dns-summary-by-response-code",
        "parameters": [
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by Autonomous System.",
            "in": "query",
            "name": "asn",
            "schema": {
              "description": "Filters results by Autonomous System.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by country code top-level domain (ccTLD).",
            "in": "query",
            "name": "tld",
            "schema": {
              "description": "Filters results by country code top-level domain (ccTLD).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS query type.",
            "in": "query",
            "name": "queryType",
            "schema": {
              "description": "Filters results by DNS query type.",
              "enum": [
                "A",
                "AAAA",
                "A6",
                "AFSDB",
                "ANY",
                "APL",
                "ATMA",
                "AXFR",
                "CAA",
                "CDNSKEY",
                "CDS",
                "CERT",
                "CNAME",
                "CSYNC",
                "DHCID",
                "DLV",
                "DNAME",
                "DNSKEY",
                "DOA",
                "DS",
                "EID",
                "EUI48",
                "EUI64",
                "GPOS",
                "GID",
                "HINFO",
                "HIP",
                "HTTPS",
                "IPSECKEY",
                "ISDN",
                "IXFR",
                "KEY",
                "KX",
                "L32",
                "L64",
                "LOC",
                "LP",
                "MAILA",
                "MAILB",
                "MB",
                "MD",
                "MF",
                "MG",
                "MINFO",
                "MR",
                "MX",
                "NAPTR",
                "NB",
                "NBSTAT",
                "NID",
                "NIMLOC",
                "NINFO",
                "NS",
                "NSAP",
                "NSEC",
                "NSEC3",
                "NSEC3PARAM",
                "NULL",
                "NXT",
                "OPENPGPKEY",
                "OPT",
                "PTR",
                "PX",
                "RKEY",
                "RP",
                "RRSIG",
                "RT",
                "SIG",
                "SINK",
                "SMIMEA",
                "SOA",
                "SPF",
                "SRV",
                "SSHFP",
                "SVCB",
                "TA",
                "TALINK",
                "TKEY",
                "TLSA",
                "TSIG",
                "TXT",
                "UINFO",
                "UID",
                "UNSPEC",
                "URI",
                "WKS",
                "X25",
                "ZONEMD"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS transport protocol.",
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Filters results by DNS transport protocol.",
              "enum": [
                "UDP",
                "TCP",
                "HTTPS",
                "TLS"
              ],
              "type": "string"
            }
          },
          {
            "description": "Specifies whether the response includes empty DNS responses (NODATA).",
            "in": "query",
            "name": "nodata",
            "schema": {
              "description": "Specifies whether the response includes empty DNS responses (NODATA).",
              "type": "boolean"
            }
          },
          {
            "description": "Limits the number of objects per group to the top items within the specified time range.",
            "in": "query",
            "name": "limitPerGroup",
            "schema": {
              "description": "Limits the number of objects per group to the top items within the specified time range.",
              "type": "integer"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units"
                          ],
                          "type": "object"
                        },
                        "summary_0": {
                          "additionalProperties": {
                            "description": "A numeric string.",
                            "pattern": "^\\d+$",
                            "type": "string"
                          },
                          "type": "object"
                        }
                      },
                      "required": [
                        "summary_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get DNS queries by response code summary",
        "tags": [
          "Radar DNS"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/dns/summary/response_ttl": {
      "get": {
        "description": "Retrieves the distribution of DNS queries by minimum response TTL.",
        "operationId": "radar-get-dns-summary-by-response-ttl",
        "parameters": [
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by Autonomous System.",
            "in": "query",
            "name": "asn",
            "schema": {
              "description": "Filters results by Autonomous System.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by country code top-level domain (ccTLD).",
            "in": "query",
            "name": "tld",
            "schema": {
              "description": "Filters results by country code top-level domain (ccTLD).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS query type.",
            "in": "query",
            "name": "queryType",
            "schema": {
              "description": "Filters results by DNS query type.",
              "enum": [
                "A",
                "AAAA",
                "A6",
                "AFSDB",
                "ANY",
                "APL",
                "ATMA",
                "AXFR",
                "CAA",
                "CDNSKEY",
                "CDS",
                "CERT",
                "CNAME",
                "CSYNC",
                "DHCID",
                "DLV",
                "DNAME",
                "DNSKEY",
                "DOA",
                "DS",
                "EID",
                "EUI48",
                "EUI64",
                "GPOS",
                "GID",
                "HINFO",
                "HIP",
                "HTTPS",
                "IPSECKEY",
                "ISDN",
                "IXFR",
                "KEY",
                "KX",
                "L32",
                "L64",
                "LOC",
                "LP",
                "MAILA",
                "MAILB",
                "MB",
                "MD",
                "MF",
                "MG",
                "MINFO",
                "MR",
                "MX",
                "NAPTR",
                "NB",
                "NBSTAT",
                "NID",
                "NIMLOC",
                "NINFO",
                "NS",
                "NSAP",
                "NSEC",
                "NSEC3",
                "NSEC3PARAM",
                "NULL",
                "NXT",
                "OPENPGPKEY",
                "OPT",
                "PTR",
                "PX",
                "RKEY",
                "RP",
                "RRSIG",
                "RT",
                "SIG",
                "SINK",
                "SMIMEA",
                "SOA",
                "SPF",
                "SRV",
                "SSHFP",
                "SVCB",
                "TA",
                "TALINK",
                "TKEY",
                "TLSA",
                "TSIG",
                "TXT",
                "UINFO",
                "UID",
                "UNSPEC",
                "URI",
                "WKS",
                "X25",
                "ZONEMD"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS transport protocol.",
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Filters results by DNS transport protocol.",
              "enum": [
                "UDP",
                "TCP",
                "HTTPS",
                "TLS"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS response code.",
            "in": "query",
            "name": "responseCode",
            "schema": {
              "description": "Filters results by DNS response code.",
              "enum": [
                "NOERROR",
                "FORMERR",
                "SERVFAIL",
                "NXDOMAIN",
                "NOTIMP",
                "REFUSED",
                "YXDOMAIN",
                "YXRRSET",
                "NXRRSET",
                "NOTAUTH",
                "NOTZONE",
                "BADSIG",
                "BADKEY",
                "BADTIME",
                "BADMODE",
                "BADNAME",
                "BADALG",
                "BADTRUNC",
                "BADCOOKIE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Specifies whether the response includes empty DNS responses (NODATA).",
            "in": "query",
            "name": "nodata",
            "schema": {
              "description": "Specifies whether the response includes empty DNS responses (NODATA).",
              "type": "boolean"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units"
                          ],
                          "type": "object"
                        },
                        "summary_0": {
                          "properties": {
                            "gt_15m_lte_1h": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            },
                            "gt_1d_lte_1w": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            },
                            "gt_1h_lte_1d": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            },
                            "gt_1m_lte_5m": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            },
                            "gt_1w": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            },
                            "gt_5m_lte_15m": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            },
                            "lte_1m": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            }
                          },
                          "required": [
                            "lte_1m",
                            "gt_1m_lte_5m",
                            "gt_5m_lte_15m",
                            "gt_15m_lte_1h",
                            "gt_1h_lte_1d",
                            "gt_1d_lte_1w",
                            "gt_1w"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "summary_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get DNS queries by response TTL summary",
        "tags": [
          "Radar DNS"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/dns/timeseries": {
      "get": {
        "description": "Retrieves normalized query volume to the 1.1.1.1 DNS resolver over time.",
        "operationId": "radar-get-dns-timeseries",
        "parameters": [
          {
            "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
            "in": "query",
            "name": "aggInterval",
            "schema": {
              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
              "enum": [
                "15m",
                "1h",
                "1d",
                "1w"
              ],
              "type": "string"
            }
          },
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by Autonomous System.",
            "in": "query",
            "name": "asn",
            "schema": {
              "description": "Filters results by Autonomous System.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by country code top-level domain (ccTLD).",
            "in": "query",
            "name": "tld",
            "schema": {
              "description": "Filters results by country code top-level domain (ccTLD).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS query type.",
            "in": "query",
            "name": "queryType",
            "schema": {
              "description": "Filters results by DNS query type.",
              "enum": [
                "A",
                "AAAA",
                "A6",
                "AFSDB",
                "ANY",
                "APL",
                "ATMA",
                "AXFR",
                "CAA",
                "CDNSKEY",
                "CDS",
                "CERT",
                "CNAME",
                "CSYNC",
                "DHCID",
                "DLV",
                "DNAME",
                "DNSKEY",
                "DOA",
                "DS",
                "EID",
                "EUI48",
                "EUI64",
                "GPOS",
                "GID",
                "HINFO",
                "HIP",
                "HTTPS",
                "IPSECKEY",
                "ISDN",
                "IXFR",
                "KEY",
                "KX",
                "L32",
                "L64",
                "LOC",
                "LP",
                "MAILA",
                "MAILB",
                "MB",
                "MD",
                "MF",
                "MG",
                "MINFO",
                "MR",
                "MX",
                "NAPTR",
                "NB",
                "NBSTAT",
                "NID",
                "NIMLOC",
                "NINFO",
                "NS",
                "NSAP",
                "NSEC",
                "NSEC3",
                "NSEC3PARAM",
                "NULL",
                "NXT",
                "OPENPGPKEY",
                "OPT",
                "PTR",
                "PX",
                "RKEY",
                "RP",
                "RRSIG",
                "RT",
                "SIG",
                "SINK",
                "SMIMEA",
                "SOA",
                "SPF",
                "SRV",
                "SSHFP",
                "SVCB",
                "TA",
                "TALINK",
                "TKEY",
                "TLSA",
                "TSIG",
                "TXT",
                "UINFO",
                "UID",
                "UNSPEC",
                "URI",
                "WKS",
                "X25",
                "ZONEMD"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS transport protocol.",
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Filters results by DNS transport protocol.",
              "enum": [
                "UDP",
                "TCP",
                "HTTPS",
                "TLS"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS response code.",
            "in": "query",
            "name": "responseCode",
            "schema": {
              "description": "Filters results by DNS response code.",
              "enum": [
                "NOERROR",
                "FORMERR",
                "SERVFAIL",
                "NXDOMAIN",
                "NOTIMP",
                "REFUSED",
                "YXDOMAIN",
                "YXRRSET",
                "NXRRSET",
                "NOTAUTH",
                "NOTZONE",
                "BADSIG",
                "BADKEY",
                "BADTIME",
                "BADMODE",
                "BADNAME",
                "BADALG",
                "BADTRUNC",
                "BADCOOKIE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Specifies whether the response includes empty DNS responses (NODATA).",
            "in": "query",
            "name": "nodata",
            "schema": {
              "description": "Specifies whether the response includes empty DNS responses (NODATA).",
              "type": "boolean"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "additionalProperties": {
                        "properties": {
                          "timestamps": {
                            "items": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "values": {
                            "items": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "timestamps",
                          "values"
                        ],
                        "type": "object"
                      },
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "aggInterval": {
                              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
                              "enum": [
                                "FIFTEEN_MINUTES",
                                "ONE_HOUR",
                                "ONE_DAY",
                                "ONE_WEEK",
                                "ONE_MONTH"
                              ],
                              "type": "string"
                            },
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units",
                            "aggInterval"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get DNS queries time series",
        "tags": [
          "Radar DNS"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/dns/timeseries_groups/cache_hit": {
      "get": {
        "description": "Retrieves the distribution of DNS queries by cache status over time.",
        "operationId": "radar-get-dns-timeseries-group-by-cache-hit-status",
        "parameters": [
          {
            "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
            "in": "query",
            "name": "aggInterval",
            "schema": {
              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
              "enum": [
                "15m",
                "1h",
                "1d",
                "1w"
              ],
              "type": "string"
            }
          },
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by Autonomous System.",
            "in": "query",
            "name": "asn",
            "schema": {
              "description": "Filters results by Autonomous System.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by country code top-level domain (ccTLD).",
            "in": "query",
            "name": "tld",
            "schema": {
              "description": "Filters results by country code top-level domain (ccTLD).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS query type.",
            "in": "query",
            "name": "queryType",
            "schema": {
              "description": "Filters results by DNS query type.",
              "enum": [
                "A",
                "AAAA",
                "A6",
                "AFSDB",
                "ANY",
                "APL",
                "ATMA",
                "AXFR",
                "CAA",
                "CDNSKEY",
                "CDS",
                "CERT",
                "CNAME",
                "CSYNC",
                "DHCID",
                "DLV",
                "DNAME",
                "DNSKEY",
                "DOA",
                "DS",
                "EID",
                "EUI48",
                "EUI64",
                "GPOS",
                "GID",
                "HINFO",
                "HIP",
                "HTTPS",
                "IPSECKEY",
                "ISDN",
                "IXFR",
                "KEY",
                "KX",
                "L32",
                "L64",
                "LOC",
                "LP",
                "MAILA",
                "MAILB",
                "MB",
                "MD",
                "MF",
                "MG",
                "MINFO",
                "MR",
                "MX",
                "NAPTR",
                "NB",
                "NBSTAT",
                "NID",
                "NIMLOC",
                "NINFO",
                "NS",
                "NSAP",
                "NSEC",
                "NSEC3",
                "NSEC3PARAM",
                "NULL",
                "NXT",
                "OPENPGPKEY",
                "OPT",
                "PTR",
                "PX",
                "RKEY",
                "RP",
                "RRSIG",
                "RT",
                "SIG",
                "SINK",
                "SMIMEA",
                "SOA",
                "SPF",
                "SRV",
                "SSHFP",
                "SVCB",
                "TA",
                "TALINK",
                "TKEY",
                "TLSA",
                "TSIG",
                "TXT",
                "UINFO",
                "UID",
                "UNSPEC",
                "URI",
                "WKS",
                "X25",
                "ZONEMD"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS transport protocol.",
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Filters results by DNS transport protocol.",
              "enum": [
                "UDP",
                "TCP",
                "HTTPS",
                "TLS"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS response code.",
            "in": "query",
            "name": "responseCode",
            "schema": {
              "description": "Filters results by DNS response code.",
              "enum": [
                "NOERROR",
                "FORMERR",
                "SERVFAIL",
                "NXDOMAIN",
                "NOTIMP",
                "REFUSED",
                "YXDOMAIN",
                "YXRRSET",
                "NXRRSET",
                "NOTAUTH",
                "NOTZONE",
                "BADSIG",
                "BADKEY",
                "BADTIME",
                "BADMODE",
                "BADNAME",
                "BADALG",
                "BADTRUNC",
                "BADCOOKIE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Specifies whether the response includes empty DNS responses (NODATA).",
            "in": "query",
            "name": "nodata",
            "schema": {
              "description": "Specifies whether the response includes empty DNS responses (NODATA).",
              "type": "boolean"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "aggInterval": {
                              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
                              "enum": [
                                "FIFTEEN_MINUTES",
                                "ONE_HOUR",
                                "ONE_DAY",
                                "ONE_WEEK",
                                "ONE_MONTH"
                              ],
                              "type": "string"
                            },
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units",
                            "aggInterval"
                          ],
                          "type": "object"
                        },
                        "serie_0": {
                          "properties": {
                            "NEGATIVE": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "POSITIVE": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "POSITIVE",
                            "NEGATIVE"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "serie_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get DNS queries by cache status time series",
        "tags": [
          "Radar DNS"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/dns/timeseries_groups/dnssec": {
      "get": {
        "description": "Retrieves the distribution of DNS responses by DNSSEC (DNS Security Extensions) support over time.",
        "operationId": "radar-get-dns-timeseries-group-by-dnssec",
        "parameters": [
          {
            "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
            "in": "query",
            "name": "aggInterval",
            "schema": {
              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
              "enum": [
                "15m",
                "1h",
                "1d",
                "1w"
              ],
              "type": "string"
            }
          },
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by Autonomous System.",
            "in": "query",
            "name": "asn",
            "schema": {
              "description": "Filters results by Autonomous System.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by country code top-level domain (ccTLD).",
            "in": "query",
            "name": "tld",
            "schema": {
              "description": "Filters results by country code top-level domain (ccTLD).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS query type.",
            "in": "query",
            "name": "queryType",
            "schema": {
              "description": "Filters results by DNS query type.",
              "enum": [
                "A",
                "AAAA",
                "A6",
                "AFSDB",
                "ANY",
                "APL",
                "ATMA",
                "AXFR",
                "CAA",
                "CDNSKEY",
                "CDS",
                "CERT",
                "CNAME",
                "CSYNC",
                "DHCID",
                "DLV",
                "DNAME",
                "DNSKEY",
                "DOA",
                "DS",
                "EID",
                "EUI48",
                "EUI64",
                "GPOS",
                "GID",
                "HINFO",
                "HIP",
                "HTTPS",
                "IPSECKEY",
                "ISDN",
                "IXFR",
                "KEY",
                "KX",
                "L32",
                "L64",
                "LOC",
                "LP",
                "MAILA",
                "MAILB",
                "MB",
                "MD",
                "MF",
                "MG",
                "MINFO",
                "MR",
                "MX",
                "NAPTR",
                "NB",
                "NBSTAT",
                "NID",
                "NIMLOC",
                "NINFO",
                "NS",
                "NSAP",
                "NSEC",
                "NSEC3",
                "NSEC3PARAM",
                "NULL",
                "NXT",
                "OPENPGPKEY",
                "OPT",
                "PTR",
                "PX",
                "RKEY",
                "RP",
                "RRSIG",
                "RT",
                "SIG",
                "SINK",
                "SMIMEA",
                "SOA",
                "SPF",
                "SRV",
                "SSHFP",
                "SVCB",
                "TA",
                "TALINK",
                "TKEY",
                "TLSA",
                "TSIG",
                "TXT",
                "UINFO",
                "UID",
                "UNSPEC",
                "URI",
                "WKS",
                "X25",
                "ZONEMD"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS transport protocol.",
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Filters results by DNS transport protocol.",
              "enum": [
                "UDP",
                "TCP",
                "HTTPS",
                "TLS"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS response code.",
            "in": "query",
            "name": "responseCode",
            "schema": {
              "description": "Filters results by DNS response code.",
              "enum": [
                "NOERROR",
                "FORMERR",
                "SERVFAIL",
                "NXDOMAIN",
                "NOTIMP",
                "REFUSED",
                "YXDOMAIN",
                "YXRRSET",
                "NXRRSET",
                "NOTAUTH",
                "NOTZONE",
                "BADSIG",
                "BADKEY",
                "BADTIME",
                "BADMODE",
                "BADNAME",
                "BADALG",
                "BADTRUNC",
                "BADCOOKIE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Specifies whether the response includes empty DNS responses (NODATA).",
            "in": "query",
            "name": "nodata",
            "schema": {
              "description": "Specifies whether the response includes empty DNS responses (NODATA).",
              "type": "boolean"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "aggInterval": {
                              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
                              "enum": [
                                "FIFTEEN_MINUTES",
                                "ONE_HOUR",
                                "ONE_DAY",
                                "ONE_WEEK",
                                "ONE_MONTH"
                              ],
                              "type": "string"
                            },
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units",
                            "aggInterval"
                          ],
                          "type": "object"
                        },
                        "serie_0": {
                          "properties": {
                            "INSECURE": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "INVALID": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "OTHER": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "SECURE": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "INSECURE",
                            "SECURE",
                            "INVALID",
                            "OTHER"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "serie_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get DNS queries by DNSSEC support time series",
        "tags": [
          "Radar DNS"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/dns/timeseries_groups/dnssec_aware": {
      "get": {
        "description": "Retrieves the distribution of DNS queries by DNSSEC (DNS Security Extensions) client awareness over...",
        "operationId": "radar-get-dns-timeseries-group-by-dnssec-awareness",
        "parameters": [
          {
            "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
            "in": "query",
            "name": "aggInterval",
            "schema": {
              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
              "enum": [
                "15m",
                "1h",
                "1d",
                "1w"
              ],
              "type": "string"
            }
          },
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by Autonomous System.",
            "in": "query",
            "name": "asn",
            "schema": {
              "description": "Filters results by Autonomous System.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by country code top-level domain (ccTLD).",
            "in": "query",
            "name": "tld",
            "schema": {
              "description": "Filters results by country code top-level domain (ccTLD).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS query type.",
            "in": "query",
            "name": "queryType",
            "schema": {
              "description": "Filters results by DNS query type.",
              "enum": [
                "A",
                "AAAA",
                "A6",
                "AFSDB",
                "ANY",
                "APL",
                "ATMA",
                "AXFR",
                "CAA",
                "CDNSKEY",
                "CDS",
                "CERT",
                "CNAME",
                "CSYNC",
                "DHCID",
                "DLV",
                "DNAME",
                "DNSKEY",
                "DOA",
                "DS",
                "EID",
                "EUI48",
                "EUI64",
                "GPOS",
                "GID",
                "HINFO",
                "HIP",
                "HTTPS",
                "IPSECKEY",
                "ISDN",
                "IXFR",
                "KEY",
                "KX",
                "L32",
                "L64",
                "LOC",
                "LP",
                "MAILA",
                "MAILB",
                "MB",
                "MD",
                "MF",
                "MG",
                "MINFO",
                "MR",
                "MX",
                "NAPTR",
                "NB",
                "NBSTAT",
                "NID",
                "NIMLOC",
                "NINFO",
                "NS",
                "NSAP",
                "NSEC",
                "NSEC3",
                "NSEC3PARAM",
                "NULL",
                "NXT",
                "OPENPGPKEY",
                "OPT",
                "PTR",
                "PX",
                "RKEY",
                "RP",
                "RRSIG",
                "RT",
                "SIG",
                "SINK",
                "SMIMEA",
                "SOA",
                "SPF",
                "SRV",
                "SSHFP",
                "SVCB",
                "TA",
                "TALINK",
                "TKEY",
                "TLSA",
                "TSIG",
                "TXT",
                "UINFO",
                "UID",
                "UNSPEC",
                "URI",
                "WKS",
                "X25",
                "ZONEMD"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS transport protocol.",
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Filters results by DNS transport protocol.",
              "enum": [
                "UDP",
                "TCP",
                "HTTPS",
                "TLS"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS response code.",
            "in": "query",
            "name": "responseCode",
            "schema": {
              "description": "Filters results by DNS response code.",
              "enum": [
                "NOERROR",
                "FORMERR",
                "SERVFAIL",
                "NXDOMAIN",
                "NOTIMP",
                "REFUSED",
                "YXDOMAIN",
                "YXRRSET",
                "NXRRSET",
                "NOTAUTH",
                "NOTZONE",
                "BADSIG",
                "BADKEY",
                "BADTIME",
                "BADMODE",
                "BADNAME",
                "BADALG",
                "BADTRUNC",
                "BADCOOKIE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Specifies whether the response includes empty DNS responses (NODATA).",
            "in": "query",
            "name": "nodata",
            "schema": {
              "description": "Specifies whether the response includes empty DNS responses (NODATA).",
              "type": "boolean"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "aggInterval": {
                              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
                              "enum": [
                                "FIFTEEN_MINUTES",
                                "ONE_HOUR",
                                "ONE_DAY",
                                "ONE_WEEK",
                                "ONE_MONTH"
                              ],
                              "type": "string"
                            },
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units",
                            "aggInterval"
                          ],
                          "type": "object"
                        },
                        "serie_0": {
                          "properties": {
                            "NOT_SUPPORTED": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "SUPPORTED": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "NOT_SUPPORTED",
                            "SUPPORTED"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "serie_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get DNS queries by DNSSEC awareness time series",
        "tags": [
          "Radar DNS"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/dns/timeseries_groups/dnssec_e2e": {
      "get": {
        "description": "Retrieves the distribution of DNSSEC-validated answers by end-to-end security status over time.",
        "operationId": "radar-get-dns-timeseries-group-by-dnssec-e2e-version",
        "parameters": [
          {
            "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
            "in": "query",
            "name": "aggInterval",
            "schema": {
              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
              "enum": [
                "15m",
                "1h",
                "1d",
                "1w"
              ],
              "type": "string"
            }
          },
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by Autonomous System.",
            "in": "query",
            "name": "asn",
            "schema": {
              "description": "Filters results by Autonomous System.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by country code top-level domain (ccTLD).",
            "in": "query",
            "name": "tld",
            "schema": {
              "description": "Filters results by country code top-level domain (ccTLD).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS query type.",
            "in": "query",
            "name": "queryType",
            "schema": {
              "description": "Filters results by DNS query type.",
              "enum": [
                "A",
                "AAAA",
                "A6",
                "AFSDB",
                "ANY",
                "APL",
                "ATMA",
                "AXFR",
                "CAA",
                "CDNSKEY",
                "CDS",
                "CERT",
                "CNAME",
                "CSYNC",
                "DHCID",
                "DLV",
                "DNAME",
                "DNSKEY",
                "DOA",
                "DS",
                "EID",
                "EUI48",
                "EUI64",
                "GPOS",
                "GID",
                "HINFO",
                "HIP",
                "HTTPS",
                "IPSECKEY",
                "ISDN",
                "IXFR",
                "KEY",
                "KX",
                "L32",
                "L64",
                "LOC",
                "LP",
                "MAILA",
                "MAILB",
                "MB",
                "MD",
                "MF",
                "MG",
                "MINFO",
                "MR",
                "MX",
                "NAPTR",
                "NB",
                "NBSTAT",
                "NID",
                "NIMLOC",
                "NINFO",
                "NS",
                "NSAP",
                "NSEC",
                "NSEC3",
                "NSEC3PARAM",
                "NULL",
                "NXT",
                "OPENPGPKEY",
                "OPT",
                "PTR",
                "PX",
                "RKEY",
                "RP",
                "RRSIG",
                "RT",
                "SIG",
                "SINK",
                "SMIMEA",
                "SOA",
                "SPF",
                "SRV",
                "SSHFP",
                "SVCB",
                "TA",
                "TALINK",
                "TKEY",
                "TLSA",
                "TSIG",
                "TXT",
                "UINFO",
                "UID",
                "UNSPEC",
                "URI",
                "WKS",
                "X25",
                "ZONEMD"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS transport protocol.",
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Filters results by DNS transport protocol.",
              "enum": [
                "UDP",
                "TCP",
                "HTTPS",
                "TLS"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS response code.",
            "in": "query",
            "name": "responseCode",
            "schema": {
              "description": "Filters results by DNS response code.",
              "enum": [
                "NOERROR",
                "FORMERR",
                "SERVFAIL",
                "NXDOMAIN",
                "NOTIMP",
                "REFUSED",
                "YXDOMAIN",
                "YXRRSET",
                "NXRRSET",
                "NOTAUTH",
                "NOTZONE",
                "BADSIG",
                "BADKEY",
                "BADTIME",
                "BADMODE",
                "BADNAME",
                "BADALG",
                "BADTRUNC",
                "BADCOOKIE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Specifies whether the response includes empty DNS responses (NODATA).",
            "in": "query",
            "name": "nodata",
            "schema": {
              "description": "Specifies whether the response includes empty DNS responses (NODATA).",
              "type": "boolean"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "aggInterval": {
                              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
                              "enum": [
                                "FIFTEEN_MINUTES",
                                "ONE_HOUR",
                                "ONE_DAY",
                                "ONE_WEEK",
                                "ONE_MONTH"
                              ],
                              "type": "string"
                            },
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units",
                            "aggInterval"
                          ],
                          "type": "object"
                        },
                        "serie_0": {
                          "properties": {
                            "NEGATIVE": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "POSITIVE": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "NEGATIVE",
                            "POSITIVE"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "serie_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get DNS queries by DNSSEC end-to-end time series",
        "tags": [
          "Radar DNS"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/dns/timeseries_groups/ip_version": {
      "get": {
        "description": "Retrieves the distribution of DNS queries by IP version over time.",
        "operationId": "radar-get-dns-timeseries-group-by-ip-version",
        "parameters": [
          {
            "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
            "in": "query",
            "name": "aggInterval",
            "schema": {
              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
              "enum": [
                "15m",
                "1h",
                "1d",
                "1w"
              ],
              "type": "string"
            }
          },
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by Autonomous System.",
            "in": "query",
            "name": "asn",
            "schema": {
              "description": "Filters results by Autonomous System.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by country code top-level domain (ccTLD).",
            "in": "query",
            "name": "tld",
            "schema": {
              "description": "Filters results by country code top-level domain (ccTLD).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS query type.",
            "in": "query",
            "name": "queryType",
            "schema": {
              "description": "Filters results by DNS query type.",
              "enum": [
                "A",
                "AAAA",
                "A6",
                "AFSDB",
                "ANY",
                "APL",
                "ATMA",
                "AXFR",
                "CAA",
                "CDNSKEY",
                "CDS",
                "CERT",
                "CNAME",
                "CSYNC",
                "DHCID",
                "DLV",
                "DNAME",
                "DNSKEY",
                "DOA",
                "DS",
                "EID",
                "EUI48",
                "EUI64",
                "GPOS",
                "GID",
                "HINFO",
                "HIP",
                "HTTPS",
                "IPSECKEY",
                "ISDN",
                "IXFR",
                "KEY",
                "KX",
                "L32",
                "L64",
                "LOC",
                "LP",
                "MAILA",
                "MAILB",
                "MB",
                "MD",
                "MF",
                "MG",
                "MINFO",
                "MR",
                "MX",
                "NAPTR",
                "NB",
                "NBSTAT",
                "NID",
                "NIMLOC",
                "NINFO",
                "NS",
                "NSAP",
                "NSEC",
                "NSEC3",
                "NSEC3PARAM",
                "NULL",
                "NXT",
                "OPENPGPKEY",
                "OPT",
                "PTR",
                "PX",
                "RKEY",
                "RP",
                "RRSIG",
                "RT",
                "SIG",
                "SINK",
                "SMIMEA",
                "SOA",
                "SPF",
                "SRV",
                "SSHFP",
                "SVCB",
                "TA",
                "TALINK",
                "TKEY",
                "TLSA",
                "TSIG",
                "TXT",
                "UINFO",
                "UID",
                "UNSPEC",
                "URI",
                "WKS",
                "X25",
                "ZONEMD"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS transport protocol.",
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Filters results by DNS transport protocol.",
              "enum": [
                "UDP",
                "TCP",
                "HTTPS",
                "TLS"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS response code.",
            "in": "query",
            "name": "responseCode",
            "schema": {
              "description": "Filters results by DNS response code.",
              "enum": [
                "NOERROR",
                "FORMERR",
                "SERVFAIL",
                "NXDOMAIN",
                "NOTIMP",
                "REFUSED",
                "YXDOMAIN",
                "YXRRSET",
                "NXRRSET",
                "NOTAUTH",
                "NOTZONE",
                "BADSIG",
                "BADKEY",
                "BADTIME",
                "BADMODE",
                "BADNAME",
                "BADALG",
                "BADTRUNC",
                "BADCOOKIE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Specifies whether the response includes empty DNS responses (NODATA).",
            "in": "query",
            "name": "nodata",
            "schema": {
              "description": "Specifies whether the response includes empty DNS responses (NODATA).",
              "type": "boolean"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "aggInterval": {
                              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
                              "enum": [
                                "FIFTEEN_MINUTES",
                                "ONE_HOUR",
                                "ONE_DAY",
                                "ONE_WEEK",
                                "ONE_MONTH"
                              ],
                              "type": "string"
                            },
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units",
                            "aggInterval"
                          ],
                          "type": "object"
                        },
                        "serie_0": {
                          "properties": {
                            "IPv4": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "IPv6": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "IPv4",
                            "IPv6"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "serie_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get DNS queries by IP version time series",
        "tags": [
          "Radar DNS"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/dns/timeseries_groups/matching_answer": {
      "get": {
        "description": "Retrieves the distribution of DNS queries by matching answers over time.",
        "operationId": "radar-get-dns-timeseries-group-by-matching-answer-status",
        "parameters": [
          {
            "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
            "in": "query",
            "name": "aggInterval",
            "schema": {
              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
              "enum": [
                "15m",
                "1h",
                "1d",
                "1w"
              ],
              "type": "string"
            }
          },
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by Autonomous System.",
            "in": "query",
            "name": "asn",
            "schema": {
              "description": "Filters results by Autonomous System.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by country code top-level domain (ccTLD).",
            "in": "query",
            "name": "tld",
            "schema": {
              "description": "Filters results by country code top-level domain (ccTLD).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS query type.",
            "in": "query",
            "name": "queryType",
            "schema": {
              "description": "Filters results by DNS query type.",
              "enum": [
                "A",
                "AAAA",
                "A6",
                "AFSDB",
                "ANY",
                "APL",
                "ATMA",
                "AXFR",
                "CAA",
                "CDNSKEY",
                "CDS",
                "CERT",
                "CNAME",
                "CSYNC",
                "DHCID",
                "DLV",
                "DNAME",
                "DNSKEY",
                "DOA",
                "DS",
                "EID",
                "EUI48",
                "EUI64",
                "GPOS",
                "GID",
                "HINFO",
                "HIP",
                "HTTPS",
                "IPSECKEY",
                "ISDN",
                "IXFR",
                "KEY",
                "KX",
                "L32",
                "L64",
                "LOC",
                "LP",
                "MAILA",
                "MAILB",
                "MB",
                "MD",
                "MF",
                "MG",
                "MINFO",
                "MR",
                "MX",
                "NAPTR",
                "NB",
                "NBSTAT",
                "NID",
                "NIMLOC",
                "NINFO",
                "NS",
                "NSAP",
                "NSEC",
                "NSEC3",
                "NSEC3PARAM",
                "NULL",
                "NXT",
                "OPENPGPKEY",
                "OPT",
                "PTR",
                "PX",
                "RKEY",
                "RP",
                "RRSIG",
                "RT",
                "SIG",
                "SINK",
                "SMIMEA",
                "SOA",
                "SPF",
                "SRV",
                "SSHFP",
                "SVCB",
                "TA",
                "TALINK",
                "TKEY",
                "TLSA",
                "TSIG",
                "TXT",
                "UINFO",
                "UID",
                "UNSPEC",
                "URI",
                "WKS",
                "X25",
                "ZONEMD"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS transport protocol.",
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Filters results by DNS transport protocol.",
              "enum": [
                "UDP",
                "TCP",
                "HTTPS",
                "TLS"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS response code.",
            "in": "query",
            "name": "responseCode",
            "schema": {
              "description": "Filters results by DNS response code.",
              "enum": [
                "NOERROR",
                "FORMERR",
                "SERVFAIL",
                "NXDOMAIN",
                "NOTIMP",
                "REFUSED",
                "YXDOMAIN",
                "YXRRSET",
                "NXRRSET",
                "NOTAUTH",
                "NOTZONE",
                "BADSIG",
                "BADKEY",
                "BADTIME",
                "BADMODE",
                "BADNAME",
                "BADALG",
                "BADTRUNC",
                "BADCOOKIE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Specifies whether the response includes empty DNS responses (NODATA).",
            "in": "query",
            "name": "nodata",
            "schema": {
              "description": "Specifies whether the response includes empty DNS responses (NODATA).",
              "type": "boolean"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "aggInterval": {
                              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
                              "enum": [
                                "FIFTEEN_MINUTES",
                                "ONE_HOUR",
                                "ONE_DAY",
                                "ONE_WEEK",
                                "ONE_MONTH"
                              ],
                              "type": "string"
                            },
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units",
                            "aggInterval"
                          ],
                          "type": "object"
                        },
                        "serie_0": {
                          "properties": {
                            "NEGATIVE": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "POSITIVE": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "POSITIVE",
                            "NEGATIVE"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "serie_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get DNS queries by matching answer time series",
        "tags": [
          "Radar DNS"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/dns/timeseries_groups/protocol": {
      "get": {
        "description": "Retrieves the distribution of DNS queries by DNS transport protocol over time.",
        "operationId": "radar-get-dns-timeseries-group-by-protocol",
        "parameters": [
          {
            "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
            "in": "query",
            "name": "aggInterval",
            "schema": {
              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
              "enum": [
                "15m",
                "1h",
                "1d",
                "1w"
              ],
              "type": "string"
            }
          },
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by Autonomous System.",
            "in": "query",
            "name": "asn",
            "schema": {
              "description": "Filters results by Autonomous System.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by country code top-level domain (ccTLD).",
            "in": "query",
            "name": "tld",
            "schema": {
              "description": "Filters results by country code top-level domain (ccTLD).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS query type.",
            "in": "query",
            "name": "queryType",
            "schema": {
              "description": "Filters results by DNS query type.",
              "enum": [
                "A",
                "AAAA",
                "A6",
                "AFSDB",
                "ANY",
                "APL",
                "ATMA",
                "AXFR",
                "CAA",
                "CDNSKEY",
                "CDS",
                "CERT",
                "CNAME",
                "CSYNC",
                "DHCID",
                "DLV",
                "DNAME",
                "DNSKEY",
                "DOA",
                "DS",
                "EID",
                "EUI48",
                "EUI64",
                "GPOS",
                "GID",
                "HINFO",
                "HIP",
                "HTTPS",
                "IPSECKEY",
                "ISDN",
                "IXFR",
                "KEY",
                "KX",
                "L32",
                "L64",
                "LOC",
                "LP",
                "MAILA",
                "MAILB",
                "MB",
                "MD",
                "MF",
                "MG",
                "MINFO",
                "MR",
                "MX",
                "NAPTR",
                "NB",
                "NBSTAT",
                "NID",
                "NIMLOC",
                "NINFO",
                "NS",
                "NSAP",
                "NSEC",
                "NSEC3",
                "NSEC3PARAM",
                "NULL",
                "NXT",
                "OPENPGPKEY",
                "OPT",
                "PTR",
                "PX",
                "RKEY",
                "RP",
                "RRSIG",
                "RT",
                "SIG",
                "SINK",
                "SMIMEA",
                "SOA",
                "SPF",
                "SRV",
                "SSHFP",
                "SVCB",
                "TA",
                "TALINK",
                "TKEY",
                "TLSA",
                "TSIG",
                "TXT",
                "UINFO",
                "UID",
                "UNSPEC",
                "URI",
                "WKS",
                "X25",
                "ZONEMD"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS response code.",
            "in": "query",
            "name": "responseCode",
            "schema": {
              "description": "Filters results by DNS response code.",
              "enum": [
                "NOERROR",
                "FORMERR",
                "SERVFAIL",
                "NXDOMAIN",
                "NOTIMP",
                "REFUSED",
                "YXDOMAIN",
                "YXRRSET",
                "NXRRSET",
                "NOTAUTH",
                "NOTZONE",
                "BADSIG",
                "BADKEY",
                "BADTIME",
                "BADMODE",
                "BADNAME",
                "BADALG",
                "BADTRUNC",
                "BADCOOKIE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Specifies whether the response includes empty DNS responses (NODATA).",
            "in": "query",
            "name": "nodata",
            "schema": {
              "description": "Specifies whether the response includes empty DNS responses (NODATA).",
              "type": "boolean"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "aggInterval": {
                              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
                              "enum": [
                                "FIFTEEN_MINUTES",
                                "ONE_HOUR",
                                "ONE_DAY",
                                "ONE_WEEK",
                                "ONE_MONTH"
                              ],
                              "type": "string"
                            },
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units",
                            "aggInterval"
                          ],
                          "type": "object"
                        },
                        "serie_0": {
                          "properties": {
                            "HTTPS": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "TCP": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "TLS": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "UDP": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "UDP",
                            "TLS",
                            "HTTPS",
                            "TCP"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "serie_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get DNS queries by protocol time series",
        "tags": [
          "Radar DNS"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/dns/timeseries_groups/query_type": {
      "get": {
        "description": "Retrieves the distribution of DNS queries by type over time.",
        "operationId": "radar-get-dns-timeseries-group-by-query-type",
        "parameters": [
          {
            "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
            "in": "query",
            "name": "aggInterval",
            "schema": {
              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
              "enum": [
                "15m",
                "1h",
                "1d",
                "1w"
              ],
              "type": "string"
            }
          },
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by Autonomous System.",
            "in": "query",
            "name": "asn",
            "schema": {
              "description": "Filters results by Autonomous System.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by country code top-level domain (ccTLD).",
            "in": "query",
            "name": "tld",
            "schema": {
              "description": "Filters results by country code top-level domain (ccTLD).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS transport protocol.",
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Filters results by DNS transport protocol.",
              "enum": [
                "UDP",
                "TCP",
                "HTTPS",
                "TLS"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS response code.",
            "in": "query",
            "name": "responseCode",
            "schema": {
              "description": "Filters results by DNS response code.",
              "enum": [
                "NOERROR",
                "FORMERR",
                "SERVFAIL",
                "NXDOMAIN",
                "NOTIMP",
                "REFUSED",
                "YXDOMAIN",
                "YXRRSET",
                "NXRRSET",
                "NOTAUTH",
                "NOTZONE",
                "BADSIG",
                "BADKEY",
                "BADTIME",
                "BADMODE",
                "BADNAME",
                "BADALG",
                "BADTRUNC",
                "BADCOOKIE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Specifies whether the response includes empty DNS responses (NODATA).",
            "in": "query",
            "name": "nodata",
            "schema": {
              "description": "Specifies whether the response includes empty DNS responses (NODATA).",
              "type": "boolean"
            }
          },
          {
            "description": "Limits the number of objects per group to the top items within the specified time range.",
            "in": "query",
            "name": "limitPerGroup",
            "schema": {
              "description": "Limits the number of objects per group to the top items within the specified time range.",
              "type": "integer"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "aggInterval": {
                              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
                              "enum": [
                                "FIFTEEN_MINUTES",
                                "ONE_HOUR",
                                "ONE_DAY",
                                "ONE_WEEK",
                                "ONE_MONTH"
                              ],
                              "type": "string"
                            },
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units",
                            "aggInterval"
                          ],
                          "type": "object"
                        },
                        "serie_0": {
                          "additionalProperties": {
                            "items": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "properties": {
                            "timestamps": {
                              "items": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "timestamps"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "serie_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get DNS queries by type time series",
        "tags": [
          "Radar DNS"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/dns/timeseries_groups/response_code": {
      "get": {
        "description": "Retrieves the distribution of DNS queries by response code over time.",
        "operationId": "radar-get-dns-timeseries-group-by-response-code",
        "parameters": [
          {
            "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
            "in": "query",
            "name": "aggInterval",
            "schema": {
              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
              "enum": [
                "15m",
                "1h",
                "1d",
                "1w"
              ],
              "type": "string"
            }
          },
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by Autonomous System.",
            "in": "query",
            "name": "asn",
            "schema": {
              "description": "Filters results by Autonomous System.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by country code top-level domain (ccTLD).",
            "in": "query",
            "name": "tld",
            "schema": {
              "description": "Filters results by country code top-level domain (ccTLD).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS query type.",
            "in": "query",
            "name": "queryType",
            "schema": {
              "description": "Filters results by DNS query type.",
              "enum": [
                "A",
                "AAAA",
                "A6",
                "AFSDB",
                "ANY",
                "APL",
                "ATMA",
                "AXFR",
                "CAA",
                "CDNSKEY",
                "CDS",
                "CERT",
                "CNAME",
                "CSYNC",
                "DHCID",
                "DLV",
                "DNAME",
                "DNSKEY",
                "DOA",
                "DS",
                "EID",
                "EUI48",
                "EUI64",
                "GPOS",
                "GID",
                "HINFO",
                "HIP",
                "HTTPS",
                "IPSECKEY",
                "ISDN",
                "IXFR",
                "KEY",
                "KX",
                "L32",
                "L64",
                "LOC",
                "LP",
                "MAILA",
                "MAILB",
                "MB",
                "MD",
                "MF",
                "MG",
                "MINFO",
                "MR",
                "MX",
                "NAPTR",
                "NB",
                "NBSTAT",
                "NID",
                "NIMLOC",
                "NINFO",
                "NS",
                "NSAP",
                "NSEC",
                "NSEC3",
                "NSEC3PARAM",
                "NULL",
                "NXT",
                "OPENPGPKEY",
                "OPT",
                "PTR",
                "PX",
                "RKEY",
                "RP",
                "RRSIG",
                "RT",
                "SIG",
                "SINK",
                "SMIMEA",
                "SOA",
                "SPF",
                "SRV",
                "SSHFP",
                "SVCB",
                "TA",
                "TALINK",
                "TKEY",
                "TLSA",
                "TSIG",
                "TXT",
                "UINFO",
                "UID",
                "UNSPEC",
                "URI",
                "WKS",
                "X25",
                "ZONEMD"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS transport protocol.",
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Filters results by DNS transport protocol.",
              "enum": [
                "UDP",
                "TCP",
                "HTTPS",
                "TLS"
              ],
              "type": "string"
            }
          },
          {
            "description": "Specifies whether the response includes empty DNS responses (NODATA).",
            "in": "query",
            "name": "nodata",
            "schema": {
              "description": "Specifies whether the response includes empty DNS responses (NODATA).",
              "type": "boolean"
            }
          },
          {
            "description": "Limits the number of objects per group to the top items within the specified time range.",
            "in": "query",
            "name": "limitPerGroup",
            "schema": {
              "description": "Limits the number of objects per group to the top items within the specified time range.",
              "type": "integer"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "aggInterval": {
                              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
                              "enum": [
                                "FIFTEEN_MINUTES",
                                "ONE_HOUR",
                                "ONE_DAY",
                                "ONE_WEEK",
                                "ONE_MONTH"
                              ],
                              "type": "string"
                            },
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units",
                            "aggInterval"
                          ],
                          "type": "object"
                        },
                        "serie_0": {
                          "additionalProperties": {
                            "items": {
                              "description": "A numeric string.",
                              "pattern": "^\\d+$",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "properties": {
                            "timestamps": {
                              "items": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "timestamps"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "serie_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get DNS queries by response code time series",
        "tags": [
          "Radar DNS"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/dns/timeseries_groups/response_ttl": {
      "get": {
        "description": "Retrieves the distribution of DNS queries by minimum answer TTL over time.",
        "operationId": "radar-get-dns-timeseries-group-by-response-ttl",
        "parameters": [
          {
            "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
            "in": "query",
            "name": "aggInterval",
            "schema": {
              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
              "enum": [
                "15m",
                "1h",
                "1d",
                "1w"
              ],
              "type": "string"
            }
          },
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by Autonomous System.",
            "in": "query",
            "name": "asn",
            "schema": {
              "description": "Filters results by Autonomous System.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by country code top-level domain (ccTLD).",
            "in": "query",
            "name": "tld",
            "schema": {
              "description": "Filters results by country code top-level domain (ccTLD).",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by DNS query type.",
            "in": "query",
            "name": "queryType",
            "schema": {
              "description": "Filters results by DNS query type.",
              "enum": [
                "A",
                "AAAA",
                "A6",
                "AFSDB",
                "ANY",
                "APL",
                "ATMA",
                "AXFR",
                "CAA",
                "CDNSKEY",
                "CDS",
                "CERT",
                "CNAME",
                "CSYNC",
                "DHCID",
                "DLV",
                "DNAME",
                "DNSKEY",
                "DOA",
                "DS",
                "EID",
                "EUI48",
                "EUI64",
                "GPOS",
                "GID",
                "HINFO",
                "HIP",
                "HTTPS",
                "IPSECKEY",
                "ISDN",
                "IXFR",
                "KEY",
                "KX",
                "L32",
                "L64",
                "LOC",
                "LP",
                "MAILA",
                "MAILB",
                "MB",
                "MD",
                "MF",
                "MG",
                "MINFO",
                "MR",
                "MX",
                "NAPTR",
                "NB",
                "NBSTAT",
                "NID",
                "NIMLOC",
                "NINFO",
                "NS",
                "NSAP",
                "NSEC",
                "NSEC3",
                "NSEC3PARAM",
                "NULL",
                "NXT",
                "OPENPGPKEY",
                "OPT",
                "PTR",
                "PX",
                "RKEY",
                "RP",
                "RRSIG",
                "RT",
                "SIG",
                "SINK",
                "SMIMEA",
                "SOA",
                "SPF",
                "SRV",
                "SSHFP",
                "SVCB",
                "TA",
                "TALINK",
                "TKEY",
                "TLSA",
                "TSIG",
                "TXT",
                "UINFO",
                "UID",
                "UNSPEC",
                "URI",
                "WKS",
                "X25",
                "ZONEMD"
              ],
              "nullable": true,
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS transport protocol.",
            "in": "query",
            "name": "protocol",
            "schema": {
              "description": "Filters results by DNS transport protocol.",
              "enum": [
                "UDP",
                "TCP",
                "HTTPS",
                "TLS"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by DNS response code.",
            "in": "query",
            "name": "responseCode",
            "schema": {
              "description": "Filters results by DNS response code.",
              "enum": [
                "NOERROR",
                "FORMERR",
                "SERVFAIL",
                "NXDOMAIN",
                "NOTIMP",
                "REFUSED",
                "YXDOMAIN",
                "YXRRSET",
                "NXRRSET",
                "NOTAUTH",
                "NOTZONE",
                "BADSIG",
                "BADKEY",
                "BADTIME",
                "BADMODE",
                "BADNAME",
                "BADALG",
                "BADTRUNC",
                "BADCOOKIE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Specifies whether the response includes empty DNS responses (NODATA).",
            "in": "query",
            "name": "nodata",
            "schema": {
              "description": "Specifies whether the response includes empty DNS responses (NODATA).",
              "type": "boolean"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "aggInterval": {
                              "description": "Aggregation interval of the results (e.g., in 15 minutes or 1 hour intervals).",
                              "enum": [
                                "FIFTEEN_MINUTES",
                                "ONE_HOUR",
                                "ONE_DAY",
                                "ONE_WEEK",
                                "ONE_MONTH"
                              ],
                              "type": "string"
                            },
                            "confidenceInfo": {
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units",
                            "aggInterval"
                          ],
                          "type": "object"
                        },
                        "serie_0": {
                          "properties": {
                            "gt_15m_lte_1h": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "gt_1d_lte_1w": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "gt_1h_lte_1d": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "gt_1m_lte_5m": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "gt_1w": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "gt_5m_lte_15m": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "lte_1m": {
                              "items": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "lte_1m",
                            "gt_1m_lte_5m",
                            "gt_5m_lte_15m",
                            "gt_15m_lte_1h",
                            "gt_1h_lte_1d",
                            "gt_1d_lte_1w",
                            "gt_1w"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "serie_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "result": {
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success",
                    "errors"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get DNS queries by response TTL time series",
        "tags": [
          "Radar DNS"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/dns/top/ases": {
      "get": {
        "description": "Retrieves the top autonomous systems by DNS queries made to 1.1.1.1 DNS resolver.",
        "operationId": "radar-get-dns-top-ases",
        "parameters": [
          {
            "description": "Limits the number of objects returned in the response.",
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "Limits the number of objects returned in the response.",
              "type": "integer"
            }
          },
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by Autonomous System.",
            "in": "query",
            "name": "asn",
            "schema": {
              "description": "Filters results by Autonomous System.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by domain name.",
            "in": "query",
            "name": "domain",
            "schema": {
              "description": "Filters results by domain name.",
              "items": {
                "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]{0,63}[a-zA-Z0-9-])?\\.)+[a-zA-Z0-9-]{2,63}$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "confidenceInfo": {
                              "nullable": true,
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units"
                          ],
                          "type": "object"
                        },
                        "top_0": {
                          "items": {
                            "properties": {
                              "clientASN": {
                                "type": "integer"
                              },
                              "clientASName": {
                                "type": "string"
                              },
                              "value": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "clientASN",
                              "clientASName",
                              "value"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "top_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get top ASes by DNS queries",
        "tags": [
          "Radar DNS"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/radar/dns/top/locations": {
      "get": {
        "description": "Retrieves the top locations by DNS queries made to 1.1.1.1 DNS resolver.",
        "operationId": "radar-get-dns-top-locations",
        "parameters": [
          {
            "description": "Limits the number of objects returned in the response.",
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "Limits the number of objects returned in the response.",
              "type": "integer"
            }
          },
          {
            "description": "Array of names used to label the series in the response.",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Array of names used to label the series in the response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by date range.",
            "in": "query",
            "name": "dateRange",
            "schema": {
              "description": "Filters results by date range.",
              "items": {
                "pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Start of the date range.",
            "in": "query",
            "name": "dateStart",
            "schema": {
              "description": "Start of the date range.",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "End of the date range (inclusive).",
            "in": "query",
            "name": "dateEnd",
            "schema": {
              "description": "End of the date range (inclusive).",
              "items": {
                "format": "date-time",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by Autonomous System.",
            "in": "query",
            "name": "asn",
            "schema": {
              "description": "Filters results by Autonomous System.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by location.",
            "in": "query",
            "name": "location",
            "schema": {
              "description": "Filters results by location.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by continent.",
            "in": "query",
            "name": "continent",
            "schema": {
              "description": "Filters results by continent.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by domain name.",
            "in": "query",
            "name": "domain",
            "schema": {
              "description": "Filters results by domain name.",
              "items": {
                "pattern": "^([a-zA-Z0-9]([a-zA-Z0-9-]{0,63}[a-zA-Z0-9-])?\\.)+[a-zA-Z0-9-]{2,63}$",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Format in which results will be returned.",
            "in": "query",
            "name": "format",
            "schema": {
              "description": "Format in which results will be returned.",
              "enum": [
                "JSON",
                "CSV"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "meta": {
                          "description": "Metadata for the results.",
                          "properties": {
                            "confidenceInfo": {
                              "nullable": true,
                              "properties": {
                                "annotations": {
                                  "items": {
                                    "description": "Annotation associated with the result (e.g. outage or other type of event).",
                                    "properties": {
                                      "dataSource": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "eventType": {
                                        "type": "string"
                                      },
                                      "isInstantaneous": {
                                        "description": "Whether event is a single point in time or a time range.",
                                        "type": "boolean"
                                      },
                                      "linkedUrl": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "dataSource",
                                      "eventType",
                                      "description",
                                      "startDate",
                                      "endDate",
                                      "linkedUrl",
                                      "isInstantaneous"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "level": {
                                  "description": "Provides an indication of how much confidence Cloudflare has in the data.",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "level",
                                "annotations"
                              ],
                              "type": "object"
                            },
                            "dateRange": {
                              "items": {
                                "properties": {
                                  "endTime": {
                                    "description": "Adjusted end of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "startTime": {
                                    "description": "Adjusted start of date range.",
                                    "format": "date-time",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "lastUpdated": {
                              "description": "Timestamp of the last dataset update.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "normalization": {
                              "description": "Normalization method applied to the results.",
                              "enum": [
                                "PERCENTAGE",
                                "MIN0_MAX",
                                "MIN_MAX",
                                "RAW_VALUES",
                                "PERCENTAGE_CHANGE",
                                "ROLLING_AVERAGE",
                                "OVERLAPPED_PERCENTAGE",
                                "RATIO"
                              ],
                              "type": "string"
                            },
                            "units": {
                              "description": "Measurement units for the results.",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "dateRange",
                            "confidenceInfo",
                            "normalization",
                            "lastUpdated",
                            "units"
                          ],
                          "type": "object"
                        },
                        "top_0": {
                          "items": {
                            "properties": {
                              "clientCountryAlpha2": {
                                "type": "string"
                              },
                              "clientCountryName": {
                                "type": "string"
                              },
                              "value": {
                                "description": "A numeric string.",
                                "pattern": "^\\d+$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "clientCountryAlpha2",
                              "clientCountryName",
                              "value"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "top_0",
                        "meta"
                      ],
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "result",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Successful response."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Not found."
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": [],
            "api_token": []
          }
        ],
        "summary": "Get top locations by DNS queries",
        "tags": [
          "Radar DNS"
        ],
        "x-api-token-group": [
          "User Details Write",
          "User Details Read"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/zones/{zone_id}/dns_analytics/report": {
      "get": {
        "description": "Retrieves a list of summarised aggregate metrics over a given time period.",
        "operationId": "dns-analytics-table",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_identifier"
            }
          },
          {
            "in": "query",
            "name": "metrics",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_metrics"
            }
          },
          {
            "in": "query",
            "name": "dimensions",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_dimensions"
            }
          },
          {
            "in": "query",
            "name": "since",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_since"
            }
          },
          {
            "in": "query",
            "name": "until",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_until"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_limit"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_sort"
            }
          },
          {
            "in": "query",
            "name": "filters",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_filters"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-analytics_api-response-single"
                    },
                    {
                      "properties": {
                        "result": {
                          "$ref": "#/components/schemas/dns-analytics_report"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Table response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/dns-analytics_api-response-single"
                        },
                        {
                          "properties": {
                            "result": {
                              "$ref": "#/components/schemas/dns-analytics_report"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "$ref": "#/components/schemas/dns-analytics_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Table response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Table",
        "tags": [
          "DNS Analytics"
        ],
        "x-api-token-group": [
          "Analytics Read"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#analytics:read"
          ]
        }
      }
    },
    "/zones/{zone_id}/dns_analytics/report/bytime": {
      "get": {
        "description": "Retrieves a list of aggregate metrics grouped by time interval.",
        "operationId": "dns-analytics-by-time",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_identifier"
            }
          },
          {
            "in": "query",
            "name": "metrics",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_metrics"
            }
          },
          {
            "in": "query",
            "name": "dimensions",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_dimensions"
            }
          },
          {
            "in": "query",
            "name": "since",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_since"
            }
          },
          {
            "in": "query",
            "name": "until",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_until"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_limit"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_sort"
            }
          },
          {
            "in": "query",
            "name": "filters",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_filters"
            }
          },
          {
            "in": "query",
            "name": "time_delta",
            "schema": {
              "$ref": "#/components/schemas/dns-analytics_time_delta"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-analytics_api-response-single"
                    },
                    {
                      "properties": {
                        "result": {
                          "$ref": "#/components/schemas/dns-analytics_report_bytime"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "By Time response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/dns-analytics_api-response-single"
                        },
                        {
                          "properties": {
                            "result": {
                              "$ref": "#/components/schemas/dns-analytics_report_bytime"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "$ref": "#/components/schemas/dns-analytics_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "By Time response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "By Time",
        "tags": [
          "DNS Analytics"
        ],
        "x-api-token-group": [
          "Analytics Read"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#analytics:read"
          ]
        }
      }
    },
    "/zones/{zone_id}/dns_records": {
      "get": {
        "description": "List, search, sort, and filter a zones' DNS records.",
        "operationId": "dns-records-for-a-zone-list-dns-records",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-records_identifier"
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Exact value of the DNS record name. This is a convenience alias for `name.exact`.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name.exact",
            "schema": {
              "description": "Exact value of the DNS record name. Name filters are case-insensitive.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name.contains",
            "schema": {
              "description": "Substring of the DNS record name. Name filters are case-insensitive.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name.startswith",
            "schema": {
              "description": "Prefix of the DNS record name. Name filters are case-insensitive.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name.endswith",
            "schema": {
              "description": "Suffix of the DNS record name. Name filters are case-insensitive.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "$ref": "#/components/schemas/dns-records_type"
            }
          },
          {
            "in": "query",
            "name": "content",
            "schema": {
              "description": "Exact value of the DNS record content. This is a convenience alias for `content.exact`.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "content.exact",
            "schema": {
              "description": "Exact value of the DNS record content. Content filters are case-insensitive.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "content.contains",
            "schema": {
              "description": "Substring of the DNS record content. Content filters are case-insensitive.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "content.startswith",
            "schema": {
              "description": "Prefix of the DNS record content. Content filters are case-insensitive.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "content.endswith",
            "schema": {
              "description": "Suffix of the DNS record content. Content filters are case-insensitive.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "proxied",
            "schema": {
              "$ref": "#/components/schemas/dns-records_proxied"
            }
          },
          {
            "in": "query",
            "name": "match",
            "schema": {
              "$ref": "#/components/schemas/dns-records_match"
            }
          },
          {
            "in": "query",
            "name": "comment",
            "schema": {
              "description": "Exact value of the DNS record comment. This is a convenience alias for `comment.exact`.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "comment.present",
            "schema": {
              "description": "If this parameter is present, only records *with* a comment are returned.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "comment.absent",
            "schema": {
              "description": "If this parameter is present, only records *without* a comment are returned.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "comment.exact",
            "schema": {
              "description": "Exact value of the DNS record comment. Comment filters are case-insensitive.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "comment.contains",
            "schema": {
              "description": "Substring of the DNS record comment. Comment filters are case-insensitive.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "comment.startswith",
            "schema": {
              "description": "Prefix of the DNS record comment. Comment filters are case-insensitive.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "comment.endswith",
            "schema": {
              "description": "Suffix of the DNS record comment. Comment filters are case-insensitive.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tag",
            "schema": {
              "description": "Condition on the DNS record tag.",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tag.present",
            "schema": {
              "description": "Name of a tag which must be present on the DNS record. Tag filters are case-insensitive.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tag.absent",
            "schema": {
              "description": "Name of a tag which must *not* be present on the DNS record. Tag filters are case-insensitive.\n",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tag.exact",
            "schema": {
              "description": "A tag and value, of the form `<tag-name>:<tag-value>`.",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tag.contains",
            "schema": {
              "description": "A tag and value, of the form `<tag-name>:<tag-value>`.",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tag.startswith",
            "schema": {
              "description": "A tag and value, of the form `<tag-name>:<tag-value>`.",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tag.endswith",
            "schema": {
              "description": "A tag and value, of the form `<tag-name>:<tag-value>`.",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "$ref": "#/components/schemas/dns-records_search"
            }
          },
          {
            "in": "query",
            "name": "tag_match",
            "schema": {
              "$ref": "#/components/schemas/dns-records_tag_match"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "$ref": "#/components/schemas/dns-records_page"
            }
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "$ref": "#/components/schemas/dns-records_per_page"
            }
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "$ref": "#/components/schemas/dns-records_order"
            }
          },
          {
            "in": "query",
            "name": "direction",
            "schema": {
              "$ref": "#/components/schemas/dns-records_direction"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dns-records_dns_response_collection"
                }
              }
            },
            "description": "List DNS Records response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-records_dns_response_collection"
                    },
                    {
                      "$ref": "#/components/schemas/dns-records_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "List DNS Records response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "List DNS Records",
        "tags": [
          "DNS Records for a Zone"
        ],
        "x-api-token-group": [
          "DNS Read",
          "DNS Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns_records:read"
          ]
        },
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      },
      "post": {
        "description": "Create a new DNS record for a zone.",
        "operationId": "dns-records-for-a-zone-create-dns-record",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-records_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dns-records_dns-record-post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dns-records_dns_response_single"
                }
              }
            },
            "description": "Create DNS Record response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-records_dns_response_single"
                    },
                    {
                      "$ref": "#/components/schemas/dns-records_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Create DNS Record response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Create DNS Record",
        "tags": [
          "DNS Records for a Zone"
        ],
        "x-api-token-group": [
          "DNS Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns_records:edit"
          ]
        },
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/zones/{zone_id}/dns_records/batch": {
      "post": {
        "description": "Send a Batch of DNS Record API calls to be executed together.",
        "operationId": "dns-records-for-a-zone-batch-dns-records",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-records_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dns-records_dns-request-batch-object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dns-records_dns_response_batch"
                }
              }
            },
            "description": "Batch DNS Records response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-records_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Batch DNS Records response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Batch DNS Records",
        "tags": [
          "DNS Records for a Zone"
        ],
        "x-api-token-group": [
          "DNS Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns_records:batch"
          ]
        },
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/zones/{zone_id}/dns_records/export": {
      "get": {
        "description": "You can export your [BIND config](https://en.wikipedia.org/wiki/Zone_file \"Zone file\") through this...",
        "operationId": "dns-records-for-a-zone-export-dns-records",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-records_identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "description": "Exported BIND zone file.",
                  "type": "string"
                }
              }
            },
            "description": "Export DNS Records response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dns-records_api-response-common-failure"
                }
              }
            },
            "description": "Export DNS Records response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Export DNS Records",
        "tags": [
          "DNS Records for a Zone"
        ],
        "x-api-token-group": [
          "DNS Read",
          "DNS Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns_records:read"
          ]
        },
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/zones/{zone_id}/dns_records/import": {
      "post": {
        "description": "You can upload your [BIND config](https://en.wikipedia.org/wiki/Zone_file \"Zone file\") through this...",
        "operationId": "dns-records-for-a-zone-import-dns-records",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-records_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "description": "BIND config to import.",
                    "type": "string"
                  },
                  "proxied": {
                    "default": "false",
                    "description": "Whether or not proxiable records should receive the performance and security benefits of Cloudflare.",
                    "type": "string"
                  }
                },
                "required": [
                  "file"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dns-records_dns_response_import_scan"
                }
              }
            },
            "description": "Import DNS Records response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-records_dns_response_import_scan"
                    },
                    {
                      "$ref": "#/components/schemas/dns-records_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Import DNS Records response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Import DNS Records",
        "tags": [
          "DNS Records for a Zone"
        ],
        "x-api-token-group": [
          "DNS Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns_records:edit"
          ]
        },
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/zones/{zone_id}/dns_records/scan": {
      "post": {
        "description": "Scan for common DNS records on your domain and automatically add them to your zone.",
        "operationId": "dns-records-for-a-zone-scan-dns-records",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-records_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dns-records_dns_response_import_scan"
                }
              }
            },
            "description": "Scan DNS Records response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-records_dns_response_import_scan"
                    },
                    {
                      "$ref": "#/components/schemas/dns-records_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Scan DNS Records response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Scan DNS Records",
        "tags": [
          "DNS Records for a Zone"
        ],
        "x-api-token-group": [
          "DNS Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns_records:edit"
          ]
        },
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/zones/{zone_id}/dns_records/{dns_record_id}": {
      "delete": {
        "operationId": "dns-records-for-a-zone-delete-dns-record",
        "parameters": [
          {
            "in": "path",
            "name": "dns_record_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-records_identifier"
            }
          },
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-records_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "result": {
                      "properties": {
                        "id": {
                          "$ref": "#/components/schemas/dns-records_identifier"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Delete DNS Record response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "result": {
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/dns-records_identifier"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "$ref": "#/components/schemas/dns-records_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Delete DNS Record response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Delete DNS Record",
        "tags": [
          "DNS Records for a Zone"
        ],
        "x-api-token-group": [
          "DNS Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns_records:edit"
          ]
        },
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      },
      "get": {
        "operationId": "dns-records-for-a-zone-dns-record-details",
        "parameters": [
          {
            "in": "path",
            "name": "dns_record_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-records_identifier"
            }
          },
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-records_identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dns-records_dns_response_single"
                }
              }
            },
            "description": "DNS Record Details response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-records_dns_response_single"
                    },
                    {
                      "$ref": "#/components/schemas/dns-records_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "DNS Record Details response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "DNS Record Details",
        "tags": [
          "DNS Records for a Zone"
        ],
        "x-api-token-group": [
          "DNS Read",
          "DNS Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns_records:read"
          ]
        },
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      },
      "patch": {
        "description": "Update an existing DNS record.",
        "operationId": "dns-records-for-a-zone-patch-dns-record",
        "parameters": [
          {
            "in": "path",
            "name": "dns_record_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-records_identifier"
            }
          },
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-records_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dns-records_dns-record-patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dns-records_dns_response_single"
                }
              }
            },
            "description": "Patch DNS Record response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-records_dns_response_single"
                    },
                    {
                      "$ref": "#/components/schemas/dns-records_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Patch DNS Record response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Update DNS Record",
        "tags": [
          "DNS Records for a Zone"
        ],
        "x-api-token-group": [
          "DNS Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns_records:edit"
          ]
        },
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      },
      "put": {
        "description": "Overwrite an existing DNS record.",
        "operationId": "dns-records-for-a-zone-update-dns-record",
        "parameters": [
          {
            "in": "path",
            "name": "dns_record_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-records_identifier"
            }
          },
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-records_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dns-records_dns-record-post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dns-records_dns_response_single"
                }
              }
            },
            "description": "Update DNS Record response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-records_dns_response_single"
                    },
                    {
                      "$ref": "#/components/schemas/dns-records_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Update DNS Record response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Overwrite DNS Record",
        "tags": [
          "DNS Records for a Zone"
        ],
        "x-api-token-group": [
          "DNS Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns_records:edit"
          ]
        },
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/zones/{zone_id}/dns_settings": {
      "get": {
        "description": "Show DNS settings for a zone",
        "operationId": "dns-settings-for-a-zone-list-dns-settings",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-settings_identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dns-settings_schemas-dns_response_single"
                }
              }
            },
            "description": "Show DNS Settings response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-settings_schemas-dns_response_single"
                    },
                    {
                      "$ref": "#/components/schemas/dns-settings_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Show DNS Settings response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Show DNS Settings",
        "tags": [
          "DNS Settings for a Zone"
        ],
        "x-api-token-group": [
          "Zone DNS Settings Write",
          "Zone DNS Settings Read",
          "DNS Read",
          "DNS Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns_records:read"
          ]
        },
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      },
      "patch": {
        "description": "Update DNS settings for a zone",
        "operationId": "dns-settings-for-a-zone-update-dns-settings",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dns-settings_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dns-settings_dns-settings-zone"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dns-settings_schemas-dns_response_single"
                }
              }
            },
            "description": "Show DNS Settings response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dns-settings_schemas-dns_response_single"
                    },
                    {
                      "$ref": "#/components/schemas/dns-settings_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Show DNS Settings response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Update DNS Settings",
        "tags": [
          "DNS Settings for a Zone"
        ],
        "x-api-token-group": [
          "Zone DNS Settings Write",
          "DNS Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#dns_records:read"
          ]
        },
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/zones/{zone_id}/dnssec": {
      "delete": {
        "description": "Delete DNSSEC.",
        "operationId": "dnssec-delete-dnssec-records",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dnssec_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dnssec_delete_dnssec_response_single"
                }
              }
            },
            "description": "Delete DNSSEC records response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dnssec_delete_dnssec_response_single"
                    },
                    {
                      "$ref": "#/components/schemas/dnssec_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Delete DNSSEC records response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Delete DNSSEC records",
        "tags": [
          "DNSSEC"
        ],
        "x-api-token-group": [
          "DNS Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#zone_settings:edit"
          ]
        },
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      },
      "get": {
        "description": "Details about DNSSEC status and configuration.",
        "operationId": "dnssec-dnssec-details",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dnssec_identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dnssec_dnssec_response_single"
                }
              }
            },
            "description": "DNSSEC Details response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dnssec_dnssec_response_single"
                    },
                    {
                      "$ref": "#/components/schemas/dnssec_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "DNSSEC Details response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "DNSSEC Details",
        "tags": [
          "DNSSEC"
        ],
        "x-api-token-group": [
          "DNS Read",
          "DNS Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#zone_settings:read"
          ]
        },
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      },
      "patch": {
        "description": "Enable or disable DNSSEC.",
        "operationId": "dnssec-edit-dnssec-status",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/dnssec_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "dnssec_multi_signer": {
                    "$ref": "#/components/schemas/dnssec_dnssec_multi_signer"
                  },
                  "dnssec_presigned": {
                    "$ref": "#/components/schemas/dnssec_dnssec_presigned"
                  },
                  "dnssec_use_nsec3": {
                    "$ref": "#/components/schemas/dnssec_dnssec_use_nsec3"
                  },
                  "status": {
                    "description": "Status of DNSSEC, based on user-desired state and presence of necessary records.",
                    "enum": [
                      "active",
                      "disabled"
                    ]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dnssec_dnssec_response_single"
                }
              }
            },
            "description": "Edit DNSSEC Status response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/dnssec_dnssec_response_single"
                    },
                    {
                      "$ref": "#/components/schemas/dnssec_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Edit DNSSEC Status response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Edit DNSSEC Status",
        "tags": [
          "DNSSEC"
        ],
        "x-api-token-group": [
          "DNS Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "#zone_settings:edit"
          ]
        },
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/zones/{zone_id}/email/routing/dns": {
      "delete": {
        "description": "Disable your Email Routing zone.",
        "operationId": "email-routing-settings-disable-email-routing-dns",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/email_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/email_email_setting_dns_request_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/email_api-response-single"
                    },
                    {
                      "$ref": "#/components/schemas/email_dns_settings_response_collection"
                    }
                  ]
                }
              }
            },
            "description": "Disable Email Routing response"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Disable Email Routing",
        "tags": [
          "Email Routing settings"
        ],
        "x-api-token-group": [
          "Zone Settings Write"
        ],
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      },
      "get": {
        "description": "Show the DNS records needed to configure your Email Routing zone.",
        "operationId": "email-routing-settings-email-routing-dns-settings",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/email_identifier"
            }
          },
          {
            "in": "query",
            "name": "subdomain",
            "schema": {
              "$ref": "#/components/schemas/email_email_setting_name"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/email_email_routing_dns_query_response"
                    },
                    {
                      "$ref": "#/components/schemas/email_dns_settings_response_collection"
                    }
                  ]
                }
              }
            },
            "description": "Email Routing - DNS settings response"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Email Routing - DNS settings",
        "tags": [
          "Email Routing settings"
        ],
        "x-api-token-group": [
          "Zone Settings Write",
          "Zone Settings Read"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "com.cloudflare.api.account.zone.email.routing.config.read"
          ]
        },
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      },
      "patch": {
        "description": "Unlock MX Records previously locked by Email Routing.",
        "operationId": "email-routing-settings-unlock-email-routing-dns",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/email_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/email_email_setting_dns_request_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/email_email_settings_response_single"
                }
              }
            },
            "description": "Unlock Email Routing MX records"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Unlock Email Routing",
        "tags": [
          "Email Routing settings"
        ],
        "x-api-token-group": [
          "Zone Settings Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "com.cloudflare.api.account.zone.email.routing.config.update"
          ]
        },
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      },
      "post": {
        "description": "Enable you Email Routing zone. Add and lock the necessary MX and SPF records.",
        "operationId": "email-routing-settings-enable-email-routing-dns",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/email_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/email_email_setting_dns_request_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/email_email_settings_response_single"
                }
              }
            },
            "description": "Enable Email Routing response"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Enable Email Routing",
        "tags": [
          "Email Routing settings"
        ],
        "x-api-token-group": [
          "Zone Settings Write"
        ],
        "x-cfPermissionsRequired": {
          "enum": [
            "com.cloudflare.api.account.zone.email.routing.config.update"
          ]
        },
        "x-cfPlanAvailability": {
          "business": true,
          "enterprise": true,
          "free": true,
          "pro": true
        }
      }
    },
    "/zones/{zone_id}/secondary_dns/force_axfr": {
      "post": {
        "description": "Sends AXFR zone transfer request to primary nameserver(s).",
        "operationId": "secondary-dns-(-secondary-zone)-force-axfr",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_force_response"
                }
              }
            },
            "description": "Force AXFR response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_force_response"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Force AXFR response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Force AXFR",
        "tags": [
          "Secondary DNS (Secondary Zone)"
        ],
        "x-api-token-group": [
          "Zone Settings Write",
          "Zone Write",
          "DNS Write"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      }
    },
    "/zones/{zone_id}/secondary_dns/incoming": {
      "delete": {
        "description": "Delete secondary zone configuration for incoming zone transfers.",
        "operationId": "secondary-dns-(-secondary-zone)-delete-secondary-zone-configuration",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_id_response"
                }
              }
            },
            "description": "Delete Secondary Zone Configuration response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_id_response"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Delete Secondary Zone Configuration response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Delete Secondary Zone Configuration",
        "tags": [
          "Secondary DNS (Secondary Zone)"
        ],
        "x-api-token-group": [
          "Zone Settings Write",
          "Zone Write",
          "DNS Write"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      },
      "get": {
        "description": "Get secondary zone configuration for incoming zone transfers.",
        "operationId": "secondary-dns-(-secondary-zone)-secondary-zone-configuration-details",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_single_response_incoming"
                }
              }
            },
            "description": "Secondary Zone Configuration Details response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_single_response_incoming"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Secondary Zone Configuration Details response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Secondary Zone Configuration Details",
        "tags": [
          "Secondary DNS (Secondary Zone)"
        ],
        "x-api-token-group": [
          "Zone Settings Write",
          "Zone Settings Read",
          "DNS Read",
          "Zone Write",
          "DNS Write"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      },
      "post": {
        "description": "Create secondary zone configuration for incoming zone transfers.",
        "operationId": "secondary-dns-(-secondary-zone)-create-secondary-zone-configuration",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/secondary-dns_dns-secondary-secondary-zone"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_single_response_incoming"
                }
              }
            },
            "description": "Create Secondary Zone Configuration response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_single_response_incoming"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Create Secondary Zone Configuration response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Create Secondary Zone Configuration",
        "tags": [
          "Secondary DNS (Secondary Zone)"
        ],
        "x-api-token-group": [
          "Zone Settings Write",
          "Zone Write",
          "DNS Write"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      },
      "put": {
        "description": "Update secondary zone configuration for incoming zone transfers.",
        "operationId": "secondary-dns-(-secondary-zone)-update-secondary-zone-configuration",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/secondary-dns_dns-secondary-secondary-zone"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_single_response_incoming"
                }
              }
            },
            "description": "Update Secondary Zone Configuration response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_single_response_incoming"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Update Secondary Zone Configuration response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Update Secondary Zone Configuration",
        "tags": [
          "Secondary DNS (Secondary Zone)"
        ],
        "x-api-token-group": [
          "Zone Settings Write",
          "Zone Write",
          "DNS Write"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      }
    },
    "/zones/{zone_id}/secondary_dns/outgoing": {
      "delete": {
        "description": "Delete primary zone configuration for outgoing zone transfers.",
        "operationId": "secondary-dns-(-primary-zone)-delete-primary-zone-configuration",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_id_response"
                }
              }
            },
            "description": "Delete Primary Zone Configuration response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_id_response"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Delete Primary Zone Configuration response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Delete Primary Zone Configuration",
        "tags": [
          "Secondary DNS (Primary Zone)"
        ],
        "x-api-token-group": [
          "Zone Settings Write",
          "Zone Write",
          "DNS Write"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      },
      "get": {
        "description": "Get primary zone configuration for outgoing zone transfers.",
        "operationId": "secondary-dns-(-primary-zone)-primary-zone-configuration-details",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_single_response_outgoing"
                }
              }
            },
            "description": "Primary Zone Configuration Details response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_single_response_outgoing"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Primary Zone Configuration Details response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Primary Zone Configuration Details",
        "tags": [
          "Secondary DNS (Primary Zone)"
        ],
        "x-api-token-group": [
          "Zone Settings Write",
          "Zone Settings Read",
          "DNS Read",
          "Zone Write",
          "DNS Write"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      },
      "post": {
        "description": "Create primary zone configuration for outgoing zone transfers.",
        "operationId": "secondary-dns-(-primary-zone)-create-primary-zone-configuration",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/secondary-dns_single_request_outgoing"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_single_response_outgoing"
                }
              }
            },
            "description": "Create Primary Zone Configuration response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_single_response_outgoing"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Create Primary Zone Configuration response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Create Primary Zone Configuration",
        "tags": [
          "Secondary DNS (Primary Zone)"
        ],
        "x-api-token-group": [
          "Zone Settings Write",
          "Zone Write",
          "DNS Write"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      },
      "put": {
        "description": "Update primary zone configuration for outgoing zone transfers.",
        "operationId": "secondary-dns-(-primary-zone)-update-primary-zone-configuration",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/secondary-dns_single_request_outgoing"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_single_response_outgoing"
                }
              }
            },
            "description": "Update Primary Zone Configuration response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_single_response_outgoing"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Update Primary Zone Configuration response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Update Primary Zone Configuration",
        "tags": [
          "Secondary DNS (Primary Zone)"
        ],
        "x-api-token-group": [
          "Zone Settings Write",
          "Zone Write",
          "DNS Write"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      }
    },
    "/zones/{zone_id}/secondary_dns/outgoing/disable": {
      "post": {
        "description": "Disable outgoing zone transfers for primary zone and clears IXFR backlog of primary zone.",
        "operationId": "secondary-dns-(-primary-zone)-disable-outgoing-zone-transfers",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_disable_transfer_response"
                }
              }
            },
            "description": "Disable Outgoing Zone Transfers response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_disable_transfer_response"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Disable Outgoing Zone Transfers response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Disable Outgoing Zone Transfers",
        "tags": [
          "Secondary DNS (Primary Zone)"
        ],
        "x-api-token-group": [
          "Zone Settings Write",
          "Zone Write",
          "DNS Write"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      }
    },
    "/zones/{zone_id}/secondary_dns/outgoing/enable": {
      "post": {
        "description": "Enable outgoing zone transfers for primary zone.",
        "operationId": "secondary-dns-(-primary-zone)-enable-outgoing-zone-transfers",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_enable_transfer_response"
                }
              }
            },
            "description": "Enable Outgoing Zone Transfers response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_enable_transfer_response"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Enable Outgoing Zone Transfers response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Enable Outgoing Zone Transfers",
        "tags": [
          "Secondary DNS (Primary Zone)"
        ],
        "x-api-token-group": [
          "Zone Settings Write",
          "Zone Write",
          "DNS Write"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      }
    },
    "/zones/{zone_id}/secondary_dns/outgoing/force_notify": {
      "post": {
        "description": "Notifies the secondary nameserver(s) and clears IXFR backlog of primary zone.",
        "operationId": "secondary-dns-(-primary-zone)-force-dns-notify",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {}
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_schemas-force_response"
                }
              }
            },
            "description": "Force DNS NOTIFY response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_schemas-force_response"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Force DNS NOTIFY response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Force DNS NOTIFY",
        "tags": [
          "Secondary DNS (Primary Zone)"
        ],
        "x-api-token-group": [
          "Zone Settings Write",
          "Zone Write",
          "DNS Write"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      }
    },
    "/zones/{zone_id}/secondary_dns/outgoing/status": {
      "get": {
        "description": "Get primary zone transfer status.",
        "operationId": "secondary-dns-(-primary-zone)-get-outgoing-zone-transfer-status",
        "parameters": [
          {
            "in": "path",
            "name": "zone_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/secondary-dns_identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secondary-dns_enable_transfer_response"
                }
              }
            },
            "description": "Get Outgoing Zone Transfer Status response"
          },
          "4XX": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/secondary-dns_enable_transfer_response"
                    },
                    {
                      "$ref": "#/components/schemas/secondary-dns_api-response-common-failure"
                    }
                  ]
                }
              }
            },
            "description": "Get Outgoing Zone Transfer Status response failure"
          }
        },
        "security": [
          {
            "api_email": [],
            "api_key": []
          }
        ],
        "summary": "Get Outgoing Zone Transfer Status",
        "tags": [
          "Secondary DNS (Primary Zone)"
        ],
        "x-api-token-group": [
          "Zone Settings Write",
          "Zone Settings Read",
          "DNS Read",
          "Zone Write",
          "DNS Write"
        ],
        "x-cfPlanAvailability": {
          "business": false,
          "enterprise": true,
          "free": false,
          "pro": false
        }
      }
    }
  },
  "components": {
    "schemas": {
      "dns-records_dns_response_single": {
        "allOf": [
          {
            "$ref": "#/components/schemas/dns-records_api-response-single"
          },
          {
            "properties": {
              "result": {
                "$ref": "#/components/schemas/dns-records_dns-record-response"
              }
            },
            "type": "object"
          }
        ]
      },
      "dns-records_per_page": {
        "default": 100,
        "description": "Number of DNS records per page.",
        "maximum": 5000000,
        "minimum": 1,
        "type": "number"
      },
      "dns-settings_per_page": {
        "default": 100,
        "description": "Number of DNS views per page.",
        "maximum": 5000000,
        "minimum": 1,
        "type": "number"
      },
      "dns-records_api-response-common-failure": {
        "properties": {
          "errors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dns-records_messages"
              }
            ],
            "minLength": 1
          },
          "messages": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dns-records_messages"
              }
            ]
          },
          "result": {
            "enum": [
              null
            ],
            "nullable": true,
            "type": "object"
          },
          "success": {
            "description": "Whether the API call was successful.",
            "enum": [
              false
            ],
            "type": "boolean"
          }
        },
        "required": [
          "success",
          "errors",
          "messages",
          "result"
        ],
        "type": "object"
      },
      "dns-analytics_identifier": {
        "description": "Identifier.",
        "maxLength": 32,
        "type": "string",
        "x-auditable": true
      },
      "dnssec_dnssec_multi_signer": {
        "description": "If true, multi-signer DNSSEC is enabled on the zone, allowing multiple\nproviders to serve a...",
        "type": "boolean",
        "x-auditable": true
      },
      "dns-firewall_dns-firewall-cluster-patch": {
        "allOf": [
          {
            "$ref": "#/components/schemas/dns-firewall_dns-firewall-cluster"
          }
        ],
        "type": "object"
      },
      "dns-firewall_api-response-common-failure": {
        "properties": {
          "errors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dns-firewall_messages"
              }
            ],
            "minLength": 1
          },
          "messages": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dns-firewall_messages"
              }
            ]
          },
          "result": {
            "enum": [
              null
            ],
            "nullable": true,
            "type": "object"
          },
          "success": {
            "description": "Whether the API call was successful.",
            "enum": [
              false
            ],
            "type": "boolean"
          }
        },
        "required": [
          "success",
          "errors",
          "messages",
          "result"
        ],
        "type": "object"
      },
      "dns-analytics_dimensions": {
        "description": "A comma-separated list of dimensions to group results by.",
        "type": "string"
      },
      "secondary-dns_ip_range": {
        "description": "Allowed IPv4/IPv6 address range of primary or secondary nameservers.",
        "type": "string",
        "x-auditable": true
      },
      "intel_components-schemas-single_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/intel_schemas-api-response-collection"
          },
          {
            "properties": {
              "result": {
                "$ref": "#/components/schemas/intel_passive-dns-by-ip"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "dns-records_order": {
        "default": "type",
        "description": "Field to order DNS records by.",
        "enum": [
          "type",
          "name",
          "content",
          "ttl",
          "proxied"
        ],
        "type": "string"
      },
      "tunnel_api-response-common-failure": {
        "properties": {
          "errors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tunnel_messages"
              }
            ],
            "minLength": 1
          },
          "messages": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tunnel_messages"
              }
            ]
          },
          "result": {
            "enum": [
              null
            ],
            "nullable": true,
            "type": "object"
          },
          "success": {
            "description": "Whether the API call was successful",
            "enum": [
              false
            ],
            "type": "boolean"
          }
        },
        "required": [
          "success",
          "errors",
          "messages",
          "result"
        ],
        "type": "object"
      },
      "secondary-dns_single_response_incoming": {
        "allOf": [
          {
            "$ref": "#/components/schemas/secondary-dns_api-response-single"
          },
          {
            "properties": {
              "result": {
                "properties": {
                  "auto_refresh_seconds": {
                    "$ref": "#/components/schemas/secondary-dns_auto_refresh_seconds"
                  },
                  "checked_time": {
                    "$ref": "#/components/schemas/secondary-dns_time"
                  },
                  "created_time": {
                    "$ref": "#/components/schemas/secondary-dns_time"
                  },
                  "id": {
                    "$ref": "#/components/schemas/secondary-dns_identifier"
                  },
                  "modified_time": {
                    "$ref": "#/components/schemas/secondary-dns_time"
                  },
                  "name": {
                    "$ref": "#/components/schemas/secondary-dns_name"
                  },
                  "peers": {
                    "$ref": "#/components/schemas/secondary-dns_peers"
                  },
                  "soa_serial": {
                    "$ref": "#/components/schemas/secondary-dns_soa_serial"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "email_email_setting_dns_request_body": {
        "nullable": true,
        "properties": {
          "name": {
            "$ref": "#/components/schemas/email_email_setting_name"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "intel_identifier": {
        "description": "Identifier.",
        "maxLength": 32,
        "readOnly": true,
        "type": "string",
        "x-auditable": true
      },
      "tunnel_status": {
        "description": "The status of the tunnel.",
        "enum": [
          "inactive",
          "degraded",
          "healthy",
          "down"
        ],
        "type": "string"
      },
      "dns-records_dns-record-post": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/dns-records_dns-record-without-data"
          },
          {
            "$ref": "#/components/schemas/dns-records_dns-record-with-data"
          }
        ],
        "type": "object"
      },
      "secondary-dns_tsig": {
        "properties": {
          "algo": {
            "$ref": "#/components/schemas/secondary-dns_algo"
          },
          "id": {
            "$ref": "#/components/schemas/secondary-dns_schemas-identifier"
          },
          "name": {
            "$ref": "#/components/schemas/secondary-dns_schemas-name"
          },
          "secret": {
            "$ref": "#/components/schemas/secondary-dns_secret"
          }
        },
        "required": [
          "id",
          "name",
          "secret",
          "algo"
        ],
        "type": "object"
      },
      "email_dns_settings_response_collection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/email_api-response-collection"
          },
          {
            "properties": {
              "result": {
                "items": {
                  "$ref": "#/components/schemas/email_dns_record"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "dnssec_identifier": {
        "description": "Identifier.",
        "maxLength": 32,
        "type": "string",
        "x-auditable": true
      },
      "tunnel_tunnel-response-collection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/tunnel_api-response-collection"
          },
          {
            "properties": {
              "result": {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/tunnel_cfd_tunnel"
                    },
                    {
                      "$ref": "#/components/schemas/tunnel_warp_connector_tunnel"
                    }
                  ]
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "dns-firewall_dns_firewall_response_collection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/dns-firewall_api-response-collection"
          },
          {
            "properties": {
              "result": {
                "items": {
                  "$ref": "#/components/schemas/dns-firewall_dns-firewall-cluster-response"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "secondary-dns_single_response_outgoing": {
        "allOf": [
          {
            "$ref": "#/components/schemas/secondary-dns_api-response-single"
          },
          {
            "properties": {
              "result": {
                "properties": {
                  "checked_time": {
                    "$ref": "#/components/schemas/secondary-dns_time"
                  },
                  "created_time": {
                    "$ref": "#/components/schemas/secondary-dns_time"
                  },
                  "id": {
                    "$ref": "#/components/schemas/secondary-dns_identifier"
                  },
                  "last_transferred_time": {
                    "$ref": "#/components/schemas/secondary-dns_time"
                  },
                  "name": {
                    "$ref": "#/components/schemas/secondary-dns_name"
                  },
                  "peers": {
                    "$ref": "#/components/schemas/secondary-dns_peers"
                  },
                  "soa_serial": {
                    "$ref": "#/components/schemas/secondary-dns_soa_serial"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "secondary-dns_response_collection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/secondary-dns_api-response-collection"
          },
          {
            "properties": {
              "result": {
                "items": {
                  "$ref": "#/components/schemas/secondary-dns_tsig"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "dns-analytics_filters": {
        "description": "Segmentation filter in 'attribute operator value' format.",
        "type": "string"
      },
      "secondary-dns_schemas-id_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/secondary-dns_api-response-single"
          },
          {
            "properties": {
              "result": {
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/secondary-dns_schemas-identifier"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "secondary-dns_components-schemas-id_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/secondary-dns_api-response-single"
          },
          {
            "properties": {
              "result": {
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/secondary-dns_components-schemas-identifier"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "dns-analytics_api-response-single": {
        "allOf": [
          {
            "$ref": "#/components/schemas/dns-analytics_api-response-common"
          }
        ],
        "type": "object"
      },
      "dns-firewall_identifier": {
        "description": "Identifier.",
        "maxLength": 32,
        "type": "string",
        "x-auditable": true
      },
      "secondary-dns_single_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/secondary-dns_api-response-single"
          },
          {
            "properties": {
              "result": {
                "$ref": "#/components/schemas/secondary-dns_tsig"
              }
            },
            "type": "object"
          }
        ]
      },
      "secondary-dns_peer": {
        "properties": {
          "id": {
            "$ref": "#/components/schemas/secondary-dns_components-schemas-identifier"
          },
          "ip": {
            "$ref": "#/components/schemas/secondary-dns_ip"
          },
          "ixfr_enable": {
            "$ref": "#/components/schemas/secondary-dns_ixfr_enable"
          },
          "name": {
            "$ref": "#/components/schemas/secondary-dns_components-schemas-name"
          },
          "port": {
            "$ref": "#/components/schemas/secondary-dns_port"
          },
          "tsig_id": {
            "$ref": "#/components/schemas/secondary-dns_tsig_id"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "type": "object"
      },
      "secondary-dns_schemas-identifier": {
        "readOnly": true,
        "type": "string",
        "x-auditable": true
      },
      "dnssec_dnssec_use_nsec3": {
        "description": "If true, enables the use of NSEC3 together with DNSSEC on the zone.",
        "type": "boolean",
        "x-auditable": true
      },
      "secondary-dns_components-schemas-response_collection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/secondary-dns_api-response-collection"
          },
          {
            "properties": {
              "result": {
                "items": {
                  "$ref": "#/components/schemas/secondary-dns_acl"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "tunnel_tunnel-response-single": {
        "allOf": [
          {
            "$ref": "#/components/schemas/tunnel_api-response-common"
          },
          {
            "properties": {
              "result": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/tunnel_cfd_tunnel"
                  },
                  {
                    "$ref": "#/components/schemas/tunnel_warp_connector_tunnel"
                  }
                ]
              }
            },
            "type": "object"
          }
        ]
      },
      "dns-analytics_limit": {
        "default": 100000,
        "description": "Limit number of returned metrics.",
        "type": "integer"
      },
      "dns-records_identifier": {
        "description": "Identifier.",
        "maxLength": 32,
        "type": "string",
        "x-auditable": true
      },
      "dns-settings_dns_response_single": {
        "allOf": [
          {
            "$ref": "#/components/schemas/dns-settings_api-response-single"
          },
          {
            "properties": {
              "result": {
                "$ref": "#/components/schemas/dns-settings_account_settings"
              }
            },
            "type": "object"
          }
        ]
      },
      "secondary-dns_acl": {
        "properties": {
          "id": {
            "$ref": "#/components/schemas/secondary-dns_components-schemas-identifier"
          },
          "ip_range": {
            "$ref": "#/components/schemas/secondary-dns_ip_range"
          },
          "name": {
            "$ref": "#/components/schemas/secondary-dns_acl_components-schemas-name"
          }
        },
        "required": [
          "id",
          "name",
          "ip_range"
        ],
        "type": "object"
      },
      "dns-analytics_since": {
        "description": "Start date and time of requesting data period in ISO 8601 format.",
        "format": "date-time",
        "type": "string"
      },
      "dns-records_dns-record-patch": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/dns-records_dns-record-without-data"
          },
          {
            "$ref": "#/components/schemas/dns-records_dns-record-with-data"
          }
        ],
        "type": "object"
      },
      "tunnel_tunnel_name": {
        "description": "A user-friendly name for a tunnel.",
        "type": "string"
      },
      "secondary-dns_api-response-common-failure": {
        "properties": {
          "errors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/secondary-dns_messages"
              }
            ],
            "minLength": 1
          },
          "messages": {
            "allOf": [
              {
                "$ref": "#/components/schemas/secondary-dns_messages"
              }
            ]
          },
          "result": {
            "enum": [
              null
            ],
            "nullable": true,
            "type": "object"
          },
          "success": {
            "description": "Whether the API call was successful.",
            "enum": [
              false
            ],
            "type": "boolean"
          }
        },
        "required": [
          "success",
          "errors",
          "messages",
          "result"
        ],
        "type": "object"
      },
      "dns-records_match": {
        "default": "all",
        "description": "Whether to match all search requirements or at least one (any).",
        "enum": [
          "any",
          "all"
        ],
        "type": "string"
      },
      "dns-settings_dns-view-patch": {
        "allOf": [
          {
            "$ref": "#/components/schemas/dns-settings_dns-view"
          }
        ],
        "type": "object"
      },
      "dns-firewall_dns-firewall-cluster-post": {
        "allOf": [
          {
            "$ref": "#/components/schemas/dns-firewall_dns-firewall-cluster"
          }
        ],
        "type": "object"
      },
      "secondary-dns_identifier": {
        "readOnly": true,
        "type": "string",
        "x-auditable": true
      },
      "dns-records_direction": {
        "default": "asc",
        "description": "Direction to order DNS records in.",
        "enum": [
          "asc",
          "desc"
        ],
        "type": "string"
      },
      "tunnel_per_page": {
        "description": "Number of results to display.",
        "maximum": 1000,
        "minimum": 1,
        "type": "number"
      },
      "digital-experience-monitoring_account_identifier": {
        "maxLength": 32,
        "readOnly": true,
        "type": "string"
      },
      "secondary-dns_account_identifier": {
        "readOnly": true,
        "type": "string",
        "x-auditable": true
      },
      "dnssec_dnssec_response_single": {
        "allOf": [
          {
            "$ref": "#/components/schemas/dnssec_api-response-single"
          },
          {
            "properties": {
              "result": {
                "$ref": "#/components/schemas/dnssec_dnssec"
              }
            },
            "type": "object"
          }
        ]
      },
      "secondary-dns_acl_components-schemas-name": {
        "description": "The name of the acl.",
        "type": "string",
        "x-auditable": true
      },
      "secondary-dns_components-schemas-identifier": {
        "readOnly": true,
        "type": "string",
        "x-auditable": true
      },
      "email_email_settings_response_single": {
        "allOf": [
          {
            "$ref": "#/components/schemas/email_api-response-single"
          },
          {
            "properties": {
              "result": {
                "$ref": "#/components/schemas/email_settings"
              }
            },
            "type": "object"
          }
        ]
      },
      "dns-settings_match": {
        "default": "all",
        "description": "Whether to match all search requirements or at least one (any).",
        "enum": [
          "any",
          "all"
        ],
        "type": "string"
      },
      "dns-records_dns_response_batch": {
        "allOf": [
          {
            "$ref": "#/components/schemas/dns-records_api-response-single"
          },
          {
            "properties": {
              "result": {
                "$ref": "#/components/schemas/dns-records_dns-response-batch-object"
              }
            },
            "type": "object"
          }
        ]
      },
      "dns-firewall_dns-firewall-reverse-dns-patch": {
        "allOf": [
          {
            "$ref": "#/components/schemas/dns-firewall_dns-firewall-reverse-dns"
          }
        ],
        "type": "object"
      },
      "tunnel_tunnel_id": {
        "description": "UUID of the tunnel.",
        "format": "uuid",
        "maxLength": 36,
        "readOnly": true,
        "type": "string",
        "x-auditable": true
      },
      "dnssec_api-response-common-failure": {
        "properties": {
          "errors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dnssec_messages"
              }
            ],
            "minLength": 1
          },
          "messages": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dnssec_messages"
              }
            ]
          },
          "result": {
            "enum": [
              null
            ],
            "nullable": true,
            "type": "object"
          },
          "success": {
            "description": "Whether the API call was successful.",
            "enum": [
              false
            ],
            "type": "boolean"
          }
        },
        "required": [
          "success",
          "errors",
          "messages",
          "result"
        ],
        "type": "object"
      },
      "intel_start_end_params": {
        "properties": {
          "end": {
            "description": "Defaults to the current date.",
            "format": "date",
            "type": "string",
            "x-auditable": true
          },
          "start": {
            "description": "Defaults to 30 days before the end parameter value.",
            "format": "date",
            "type": "string",
            "x-auditable": true
          }
        },
        "type": "object"
      },
      "email_identifier": {
        "description": "Identifier.",
        "maxLength": 32,
        "type": "string",
        "x-auditable": true
      },
      "dns-records_proxied": {
        "default": false,
        "description": "Whether the record is receiving the performance and security benefits of Cloudflare.",
        "type": "boolean"
      },
      "dns-settings_dns-settings-zone": {
        "allOf": [
          {
            "$ref": "#/components/schemas/dns-settings_dns-settings"
          },
          {
            "properties": {
              "nameservers": {
                "description": "Settings determining the nameservers through which the zone should be available.",
                "properties": {
                  "ns_set": {
                    "description": "Configured nameserver set to be used for this zone",
                    "maximum": 5,
                    "minimum": 1,
                    "type": "integer",
                    "x-auditable": true
                  },
                  "type": {
                    "description": "Nameserver type",
                    "enum": [
                      "cloudflare.standard",
                      "custom.account",
                      "custom.tenant",
                      "custom.zone"
                    ],
                    "type": "string",
                    "x-auditable": true
                  }
                },
                "required": [
                  "type"
                ],
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "secondary-dns_schemas-single_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/secondary-dns_api-response-single"
          },
          {
            "properties": {
              "result": {
                "$ref": "#/components/schemas/secondary-dns_peer"
              }
            },
            "type": "object"
          }
        ]
      },
      "secondary-dns_disable_transfer_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/secondary-dns_api-response-single"
          },
          {
            "properties": {
              "result": {
                "$ref": "#/components/schemas/secondary-dns_disable_transfer_result"
              }
            },
            "type": "object"
          }
        ]
      },
      "tunnel_account_id": {
        "description": "Cloudflare account ID",
        "maxLength": 32,
        "readOnly": true,
        "type": "string",
        "x-auditable": true
      },
      "secondary-dns_schemas-response_collection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/secondary-dns_api-response-collection"
          },
          {
            "properties": {
              "result": {
                "items": {
                  "$ref": "#/components/schemas/secondary-dns_peer"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "dns-records_dns-request-batch-object": {
        "properties": {
          "deletes": {
            "items": {
              "$ref": "#/components/schemas/dns-records_dns-record-batch-delete"
            },
            "type": "array"
          },
          "patches": {
            "items": {
              "$ref": "#/components/schemas/dns-records_dns-record-batch-patch"
            },
            "type": "array"
          },
          "posts": {
            "items": {
              "$ref": "#/components/schemas/dns-records_dns-record-batch-post"
            },
            "type": "array"
          },
          "puts": {
            "items": {
              "$ref": "#/components/schemas/dns-records_dns-record-batch-put"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "dns-settings_page": {
        "default": 1,
        "description": "Page number of paginated results.",
        "minimum": 1,
        "type": "number"
      },
      "secondary-dns_components-schemas-name": {
        "description": "The name of the peer.",
        "type": "string",
        "x-auditable": true
      },
      "secondary-dns_force_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/secondary-dns_api-response-single"
          },
          {
            "properties": {
              "result": {
                "$ref": "#/components/schemas/secondary-dns_force_result"
              }
            },
            "type": "object"
          }
        ]
      },
      "dns-firewall_dns_firewall_reverse_dns_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/dns-firewall_api-response-single"
          },
          {
            "properties": {
              "result": {
                "$ref": "#/components/schemas/dns-firewall_dns-firewall-reverse-dns-response"
              }
            },
            "type": "object"
          }
        ]
      },
      "tunnel_tunnel_response_token": {
        "allOf": [
          {
            "$ref": "#/components/schemas/tunnel_api-response-common"
          },
          {
            "properties": {
              "result": {
                "$ref": "#/components/schemas/tunnel_tunnel_token"
              }
            },
            "type": "object"
          }
        ]
      },
      "tunnel_page_number": {
        "default": 1,
        "description": "Page number of paginated results.",
        "minimum": 1,
        "type": "number"
      },
      "dns-analytics_until": {
        "description": "End date and time of requesting data period in ISO 8601 format.",
        "format": "date-time",
        "type": "string"
      },
      "dns-settings_account_settings": {
        "properties": {
          "zone_defaults": {
            "$ref": "#/components/schemas/dns-settings_dns-settings-account"
          }
        },
        "type": "object"
      },
      "dns-settings_direction": {
        "default": "asc",
        "description": "Direction to order DNS views in.",
        "enum": [
          "asc",
          "desc"
        ],
        "type": "string"
      },
      "dns-records_type": {
        "description": "Record type.",
        "enum": [
          "A",
          "AAAA",
          "CAA",
          "CERT",
          "CNAME",
          "DNSKEY",
          "DS",
          "HTTPS",
          "LOC",
          "MX",
          "NAPTR",
          "NS",
          "OPENPGPKEY",
          "PTR",
          "SMIMEA",
          "SRV",
          "SSHFP",
          "SVCB",
          "TLSA",
          "TXT",
          "URI"
        ],
        "type": "string"
      },
      "secondary-dns_components-schemas-single_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/secondary-dns_api-response-single"
          },
          {
            "properties": {
              "result": {
                "$ref": "#/components/schemas/secondary-dns_acl"
              }
            },
            "type": "object"
          }
        ]
      },
      "dns-analytics_time_delta": {
        "description": "Unit of time to group data by.",
        "enum": [
          "all",
          "auto",
          "year",
          "quarter",
          "month",
          "week",
          "day",
          "hour",
          "dekaminute",
          "minute"
        ],
        "type": "string"
      },
      "dns-settings_order": {
        "default": "type",
        "description": "Field to order DNS views by.",
        "enum": [
          "name",
          "created_on",
          "modified_on"
        ],
        "type": "string"
      },
      "dns-records_dns_response_import_scan": {
        "allOf": [
          {
            "$ref": "#/components/schemas/dns-records_api-response-single"
          },
          {
            "properties": {
              "result": {
                "properties": {
                  "recs_added": {
                    "description": "Number of DNS records added.",
                    "type": "number"
                  },
                  "total_records_parsed": {
                    "description": "Total number of DNS records parsed.",
                    "type": "number"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "digital-experience-monitoring_api-response-common-failure": {
        "properties": {
          "errors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/digital-experience-monitoring_messages"
              }
            ],
            "minLength": 1
          },
          "messages": {
            "allOf": [
              {
                "$ref": "#/components/schemas/digital-experience-monitoring_messages"
              }
            ]
          },
          "result": {
            "enum": [
              null
            ],
            "nullable": true,
            "type": "object"
          },
          "success": {
            "description": "Whether the API call was successful.",
            "enum": [
              false
            ],
            "type": "boolean"
          }
        },
        "required": [
          "success",
          "errors",
          "messages",
          "result"
        ],
        "type": "object"
      },
      "dns-records_tag_match": {
        "default": "all",
        "description": "Whether to match all tag search requirements or at least one (any).",
        "enum": [
          "any",
          "all"
        ],
        "type": "string"
      },
      "secondary-dns_enable_transfer_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/secondary-dns_api-response-single"
          },
          {
            "properties": {
              "result": {
                "$ref": "#/components/schemas/secondary-dns_enable_transfer_result"
              }
            },
            "type": "object"
          }
        ]
      },
      "dns-analytics_api-response-common-failure": {
        "properties": {
          "errors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dns-analytics_messages"
              }
            ],
            "minLength": 1
          },
          "messages": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dns-analytics_messages"
              }
            ]
          },
          "result": {
            "enum": [
              null
            ],
            "nullable": true,
            "type": "object"
          },
          "success": {
            "description": "Whether the API call was successful.",
            "enum": [
              false
            ],
            "type": "boolean"
          }
        },
        "required": [
          "success",
          "errors",
          "messages",
          "result"
        ],
        "type": "object"
      },
      "dns-analytics_metrics": {
        "description": "A comma-separated list of metrics to query.",
        "type": "string"
      },
      "email_email_setting_name": {
        "description": "Domain of your zone.",
        "type": "string",
        "x-auditable": true
      },
      "dns-analytics_sort": {
        "description": "A comma-separated list of dimensions to sort by, where each dimension may be prefixed by -...",
        "type": "string"
      },
      "tunnel_existed_at": {
        "description": "If provided, include only resources that were created (and not deleted) before this time.",
        "format": "url-encoded-date-time",
        "type": "string"
      },
      "dnssec_delete_dnssec_response_single": {
        "allOf": [
          {
            "$ref": "#/components/schemas/dnssec_api-response-single"
          },
          {
            "properties": {
              "result": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "dns-settings_schemas-dns_response_single": {
        "allOf": [
          {
            "$ref": "#/components/schemas/dns-settings_api-response-single"
          },
          {
            "properties": {
              "result": {
                "$ref": "#/components/schemas/dns-settings_dns-settings-zone"
              }
            },
            "type": "object"
          }
        ]
      },
      "dns-records_page": {
        "default": 1,
        "description": "Page number of paginated results.",
        "minimum": 1,
        "type": "number"
      },
      "secondary-dns_id_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/secondary-dns_api-response-single"
          },
          {
            "properties": {
              "result": {
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/secondary-dns_identifier"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ]
      },
      "dnssec_dnssec_presigned": {
        "description": "If true, allows Cloudflare to transfer in a DNSSEC-signed zone\nincluding signatures from an...",
        "type": "boolean",
        "x-auditable": true
      },
      "secondary-dns_single_request_outgoing": {
        "properties": {
          "id": {
            "$ref": "#/components/schemas/secondary-dns_identifier"
          },
          "name": {
            "$ref": "#/components/schemas/secondary-dns_name"
          },
          "peers": {
            "$ref": "#/components/schemas/secondary-dns_peers"
          }
        },
        "required": [
          "id",
          "name",
          "peers"
        ],
        "type": "object"
      },
      "dns-firewall_dns_firewall_single_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/dns-firewall_api-response-single"
          },
          {
            "properties": {
              "result": {
                "$ref": "#/components/schemas/dns-firewall_dns-firewall-cluster-response"
              }
            },
            "type": "object"
          }
        ]
      },
      "dns-settings_dns-view-post": {
        "allOf": [
          {
            "$ref": "#/components/schemas/dns-settings_dns-view"
          }
        ],
        "type": "object"
      },
      "dns-firewall_api-response-single": {
        "allOf": [
          {
            "$ref": "#/components/schemas/dns-firewall_api-response-common"
          }
        ],
        "type": "object"
      },
      "intel_api-response-common-failure": {
        "properties": {
          "errors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/intel_messages"
              }
            ],
            "minLength": 1
          },
          "messages": {
            "allOf": [
              {
                "$ref": "#/components/schemas/intel_messages"
              }
            ]
          },
          "result": {
            "enum": [
              null
            ],
            "nullable": true,
            "type": "object"
          },
          "success": {
            "description": "Whether the API call was successful.",
            "type": "boolean"
          }
        },
        "required": [
          "success",
          "errors",
          "messages",
          "result"
        ],
        "type": "object"
      },
      "tunnel_tunnel_secret": {
        "description": "Sets the password required to run a locally-managed tunnel.",
        "type": "string",
        "x-sensitive": true
      },
      "secondary-dns_dns-secondary-secondary-zone": {
        "properties": {
          "auto_refresh_seconds": {
            "$ref": "#/components/schemas/secondary-dns_auto_refresh_seconds"
          },
          "id": {
            "$ref": "#/components/schemas/secondary-dns_identifier"
          },
          "name": {
            "$ref": "#/components/schemas/secondary-dns_name"
          },
          "peers": {
            "$ref": "#/components/schemas/secondary-dns_peers"
          }
        },
        "required": [
          "id",
          "name",
          "peers",
          "auto_refresh_seconds"
        ],
        "type": "object"
      },
      "dns-settings_dns_view_response_collection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/dns-settings_api-response-collection"
          },
          {
            "properties": {
              "result": {
                "items": {
                  "$ref": "#/components/schemas/dns-settings_dns-view-response"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "dns-settings_identifier": {
        "description": "Identifier.",
        "maxLength": 32,
        "type": "string",
        "x-auditable": true
      },
      "dns-settings_dns_view_response_single": {
        "allOf": [
          {
            "$ref": "#/components/schemas/dns-settings_api-response-single"
          },
          {
            "properties": {
              "result": {
                "$ref": "#/components/schemas/dns-settings_dns-view-response"
              }
            },
            "type": "object"
          }
        ]
      },
      "dns-records_dns_response_collection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/dns-records_api-response-collection"
          },
          {
            "properties": {
              "result": {
                "items": {
                  "$ref": "#/components/schemas/dns-records_dns-record-response"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ]
      },
      "email_api-response-single": {
        "allOf": [
          {
            "$ref": "#/components/schemas/email_api-response-common"
          }
        ],
        "type": "object"
      },
      "secondary-dns_schemas-force_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/secondary-dns_api-response-single"
          },
          {
            "properties": {
              "result": {
                "$ref": "#/components/schemas/secondary-dns_schemas-force_result"
              }
            },
            "type": "object"
          }
        ]
      },
      "digital-experience-monitoring_warp_events_response": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/digital-experience-monitoring_warp_toggle_change_event"
            },
            {
              "$ref": "#/components/schemas/digital-experience-monitoring_warp_config_change_event"
            }
          ]
        },
        "type": "array"
      },
      "dns-analytics_report": {
        "allOf": [
          {
            "$ref": "#/components/schemas/dns-analytics_result"
          },
          {
            "properties": {
              "data": {
                "items": {
                  "properties": {
                    "metrics": {
                      "description": "Array with one item per requested metric. Each item is a single value.",
                      "items": {
                        "description": "Nominal metric value.",
                        "type": "number"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "metrics"
                  ],
                  "type": "object"
                }
              }
            },
            "required": [
              "data"
            ],
            "type": "object"
          }
        ]
      },
      "dns-analytics_report_bytime": {
        "allOf": [
          {
            "$ref": "#/components/schemas/dns-analytics_result"
          },
          {
            "properties": {
              "data": {
                "items": {
                  "properties": {
                    "metrics": {
                      "description": "Array with one item per requested metric.",
                      "items": {
                        "description": "Nominal metric values, broken down by time interval.",
                        "items": {},
                        "properties": {
                          "items": {
                            "description": "Nominal metric value.",
                            "type": "number"
                          }
                        },
                        "type": "array"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "metrics"
                  ],
                  "type": "object"
                }
              },
              "query": {
                "properties": {
                  "time_delta": {
                    "$ref": "#/components/schemas/dns-analytics_time_delta"
                  }
                },
                "required": [
                  "time_delta"
                ],
                "type": "object"
              },
              "time_intervals": {
                "description": "Array of time intervals in the response data.",
                "items": {
                  "description": "Array with exactly two items, representing the start and end time (respectively) of this time...",
                  "items": {
                    "description": "Time value.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "type": "array"
                },
                "type": "array"
              }
            },
            "required": [
              "time_intervals",
              "query",
              "data"
            ],
            "type": "object"
          }
        ]
      },
      "email_email_routing_dns_query_response": {
        "allOf": [
          {
            "$ref": "#/components/schemas/email_api-response-collection"
          },
          {
            "properties": {
              "result": {
                "properties": {
                  "errors": {
                    "$ref": "#/components/schemas/email_email_routing_get_response_dns_errors"
                  },
                  "record": {
                    "items": {
                      "$ref": "#/components/schemas/email_dns_record"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "dns-records_search": {
        "description": "Allows searching in multiple properties of a DNS record simultaneously.",
        "type": "string"
      },
      "digital-experience-monitoring_api-response-collection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/digital-experience-monitoring_api-response-common"
          },
          {
            "properties": {
              "result_info": {
                "properties": {
                  "count": {
                    "description": "Total number of results for the requested service.",
                    "type": "number"
                  },
                  "page": {
                    "description": "Current page within paginated list of results.",
                    "type": "number"
                  },
                  "per_page": {
                    "description": "Number of results per page of results.",
                    "type": "number"
                  },
                  "total_count": {
                    "description": "Total results available without any search parameters.",
                    "type": "number"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ],
        "type": "object"
      },
      "dns-settings_api-response-common-failure": {
        "properties": {
          "errors": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dns-settings_messages"
              }
            ],
            "minLength": 1
          },
          "messages": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dns-settings_messages"
              }
            ]
          },
          "result": {
            "enum": [
              null
            ],
            "nullable": true,
            "type": "object"
          },
          "success": {
            "description": "Whether the API call was successful.",
            "enum": [
              false
            ],
            "type": "boolean"
          }
        },
        "required": [
          "success",
          "errors",
          "messages",
          "result"
        ],
        "type": "object"
      },
      "dns-records_api-response-single": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-records_dns-record-response": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-records_messages": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-firewall_dns-firewall-cluster": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-firewall_messages": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "intel_schemas-api-response-collection": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "intel_passive-dns-by-ip": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "tunnel_messages": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "secondary-dns_api-response-single": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "secondary-dns_auto_refresh_seconds": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "secondary-dns_time": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "secondary-dns_name": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "secondary-dns_peers": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "secondary-dns_soa_serial": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-records_dns-record-without-data": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-records_dns-record-with-data": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "secondary-dns_algo": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "secondary-dns_schemas-name": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "secondary-dns_secret": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "email_api-response-collection": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "email_dns_record": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "tunnel_api-response-collection": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "tunnel_cfd_tunnel": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "tunnel_warp_connector_tunnel": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-firewall_api-response-collection": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-firewall_dns-firewall-cluster-response": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "secondary-dns_api-response-collection": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-analytics_api-response-common": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "secondary-dns_ip": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "secondary-dns_ixfr_enable": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "secondary-dns_port": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "secondary-dns_tsig_id": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "tunnel_api-response-common": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-settings_api-response-single": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "secondary-dns_messages": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-settings_dns-view": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dnssec_api-response-single": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dnssec_dnssec": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "email_settings": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-records_dns-response-batch-object": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-firewall_dns-firewall-reverse-dns": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dnssec_messages": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-settings_dns-settings": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "secondary-dns_disable_transfer_result": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-records_dns-record-batch-delete": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-records_dns-record-batch-patch": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-records_dns-record-batch-post": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-records_dns-record-batch-put": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "secondary-dns_force_result": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-firewall_dns-firewall-reverse-dns-response": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "tunnel_tunnel_token": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-settings_dns-settings-account": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "digital-experience-monitoring_messages": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "secondary-dns_enable_transfer_result": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-analytics_messages": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-firewall_api-response-common": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "intel_messages": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-settings_api-response-collection": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-settings_dns-view-response": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-records_api-response-collection": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "email_api-response-common": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "secondary-dns_schemas-force_result": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "digital-experience-monitoring_warp_toggle_change_event": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "digital-experience-monitoring_warp_config_change_event": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-analytics_result": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "email_email_routing_get_response_dns_errors": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "digital-experience-monitoring_api-response-common": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      },
      "dns-settings_messages": {
        "type": "object",
        "properties": {},
        "description": "Auto-generated stub for missing schema reference"
      }
    },
    "securitySchemes": {
      "api_key": {
        "in": "header",
        "name": "X-Auth-Key",
        "type": "apiKey"
      },
      "user_service_key": {
        "in": "header",
        "name": "X-Auth-User-Service-Key",
        "type": "apiKey"
      },
      "api_email": {
        "in": "header",
        "name": "X-Auth-Email",
        "type": "apiKey"
      },
      "api_token": {
        "scheme": "bearer",
        "type": "http"
      }
    },
    "responses": {},
    "parameters": {},
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "links": {},
    "callbacks": {}
  }
}

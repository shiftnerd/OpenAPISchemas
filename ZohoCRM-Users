{
  "openapi": "3.0.0",
  "info": {
    "title": "users",
    "description": "No description provided.",
    "version": "v8.0"
  },
  "servers": [
    {
      "url": "https://zohoapis.com"
    }
  ],
  "paths": {
    "/crm/v8/users": {
      "get": {
        "operationId": "GetUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/type"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "204": {
            "description": "No description provided."
          },
          "400": {
            "$ref": "#/components/responses/RErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/RInternalErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "CreateUsers",
        "requestBody": {
          "$ref": "#/components/requestBodies/body"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/CreateSuccessResponse",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "parameters": []
      },
      "put": {
        "operationId": "UpdateUsers",
        "requestBody": {
          "$ref": "#/components/requestBodies/body"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessResponse",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "parameters": []
      }
    },
    "/crm/v8/users/{user}": {
      "get": {
        "operationId": "GetUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/user"
          },
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Auto-generated path parameter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "204": {
            "description": "No description provided."
          },
          "500": {
            "$ref": "#/components/responses/RInternalErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "UpdateUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/user"
          },
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Auto-generated path parameter"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/body"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessResponse",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "DeleteUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/user"
          },
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Auto-generated path parameter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessResponse",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/crm/v8/users/{user}/actions/associated_groups": {
      "get": {
        "operationId": "GetAssociatedGroups",
        "parameters": [
          {
            "$ref": "#/components/parameters/user"
          },
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Auto-generated path parameter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Associated_Groups_Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "204": {
            "description": "No description provided."
          },
          "400": {
            "$ref": "#/components/responses/RErrorResponse",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/crm/v8/users/actions/count": {
      "get": {
        "operationId": "UsersCount",
        "parameters": [
          {
            "$ref": "#/components/parameters/type"
          }
        ],
        "responses": {
          "200": {
            "description": "No description provided.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/InternalError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "iam-oauth2-schema": [
        "ZohoCRM.users.ALL"
      ]
    }
  ],
  "components": {
    "schemas": {
      "Minified_User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "id"
        ]
      },
      "profile": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "id"
        ]
      },
      "owner": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name",
          "id",
          "last_name",
          "first_name"
        ]
      },
      "role": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "id"
        ]
      },
      "customize_info": {
        "type": "object",
        "properties": {
          "notes_desc": {
            "type": "object",
            "nullable": true
          },
          "show_right_panel": {
            "type": "object",
            "nullable": true
          },
          "bc_view": {
            "type": "object",
            "nullable": true
          },
          "unpin_recent_item": {
            "type": "object",
            "nullable": true
          },
          "show_home": {
            "type": "boolean",
            "nullable": true
          },
          "show_detail_view": {
            "type": "boolean",
            "nullable": true
          }
        },
        "required": [
          "notes_desc",
          "show_right_panel",
          "bc_view",
          "unpin_recent_item",
          "show_home",
          "show_detail_view"
        ]
      },
      "tab": {
        "type": "object",
        "properties": {
          "font_color": {
            "type": "string",
            "enum": [
              "#FFFFFF"
            ],
            "nullable": true
          },
          "background": {
            "type": "string",
            "enum": [
              "#222222"
            ],
            "nullable": true
          }
        },
        "required": [
          "font_color",
          "background"
        ]
      },
      "theme": {
        "type": "object",
        "properties": {
          "normal_tab": {
            "$ref": "#/components/schemas/tab"
          },
          "selected_tab": {
            "$ref": "#/components/schemas/tab"
          },
          "new_background": {
            "type": "string",
            "nullable": true
          },
          "background": {
            "type": "string",
            "enum": [
              "#F3F0EB"
            ],
            "nullable": true
          },
          "screen": {
            "type": "string",
            "enum": [
              "fixed"
            ],
            "nullable": true
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "normal_tab",
          "selected_tab",
          "new_background",
          "background",
          "screen",
          "type"
        ]
      },
      "shift": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name",
          "id"
        ]
      },
      "users": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string"
          },
          "microsoft": {
            "type": "boolean"
          },
          "$shift_effective_from": {
            "type": "object",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "country_locale": {
            "type": "string"
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "created_time": {
            "type": "string",
            "format": "date-time"
          },
          "time_format": {
            "type": "string",
            "enum": [
              "HH:mm",
              "hh:mm a"
            ],
            "nullable": true
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "imap_status": {
            "type": "boolean"
          },
          "image_link": {
            "type": "string",
            "nullable": true
          },
          "ezuid": {
            "type": "string"
          },
          "profile": {
            "$ref": "#/components/schemas/profile"
          },
          "role": {
            "$ref": "#/components/schemas/role"
          },
          "created_by": {
            "$ref": "#/components/schemas/Minified_User"
          },
          "full_name": {
            "type": "string"
          },
          "zuid": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "dob": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "status": {
            "type": "string"
          },
          "customize_info": {
            "$ref": "#/components/schemas/customize_info"
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "signature": {
            "type": "string",
            "nullable": true
          },
          "sort_order_preference__s": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "date_format": {
            "type": "string",
            "enum": [
              "MMM d, yyyy"
            ],
            "nullable": true
          },
          "confirm": {
            "type": "boolean"
          },
          "decimal_separator": {
            "type": "string",
            "enum": [
              "Comma",
              "Period"
            ],
            "nullable": true
          },
          "number_separator": {
            "type": "string",
            "enum": [
              "Space"
            ],
            "nullable": true
          },
          "time_zone": {
            "type": "object",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "pattern": "[A-Za-z0-9]",
            "nullable": true,
            "maxLength": 50
          },
          "mobile": {
            "type": "string",
            "nullable": true
          },
          "$current_shift": {
            "$ref": "#/components/schemas/shift"
          },
          "Reporting_To": {
            "$ref": "#/components/schemas/Minified_User"
          },
          "Currency": {
            "type": "string",
            "nullable": true
          },
          "$next_shift": {
            "$ref": "#/components/schemas/shift"
          },
          "Modified_Time": {
            "type": "string",
            "format": "date-time"
          },
          "website": {
            "type": "string",
            "pattern": "[a-z0-9]{5}[.]com",
            "nullable": true
          },
          "status_reason__s": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "pattern": "[a-z0-9]{9}[@][a-z0-9]{5}[.]com"
          },
          "first_name": {
            "type": "string",
            "pattern": "[A-Za-z0-9]",
            "maxLength": 50
          },
          "sandboxDeveloper": {
            "type": "boolean"
          },
          "alias": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "Modified_By": {
            "$ref": "#/components/schemas/owner"
          },
          "Isonline": {
            "type": "boolean"
          },
          "locale": {
            "type": "string",
            "nullable": true
          },
          "name_format__s": {
            "type": "string",
            "enum": [
              "Salutation,First Name,Last Name",
              "Saluation,Last Name,First Name",
              "First Name,Last Name,Saluation"
            ],
            "nullable": true
          },
          "personal_account": {
            "type": "boolean"
          },
          "default_tab_group": {
            "type": "string"
          },
          "theme": {
            "$ref": "#/components/schemas/theme"
          },
          "ntc_notification_type": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "ntc_enabled": {
            "type": "boolean"
          },
          "rtl_enabled": {
            "type": "boolean"
          },
          "telephony_enabled": {
            "type": "boolean"
          },
          "sort_order_preference": {
            "type": "string"
          }
        }
      },
      "info": {
        "type": "object",
        "properties": {
          "per_page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "more_records": {
            "type": "boolean",
            "nullable": true
          }
        },
        "required": [
          "per_page",
          "count",
          "page",
          "more_records"
        ]
      },
      "wrapper": {
        "type": "object",
        "properties": {
          "users": {
            "items": {
              "$ref": "#/components/schemas/users"
            },
            "type": "array"
          }
        },
        "required": [
          "users"
        ]
      },
      "Response_Wrapper": {
        "type": "object",
        "properties": {
          "users": {
            "items": {
              "$ref": "#/components/schemas/users"
            },
            "type": "array"
          },
          "info": {
            "$ref": "#/components/schemas/info"
          }
        },
        "required": [
          "users",
          "info"
        ]
      },
      "Associated_Group": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_time": {
            "type": "string",
            "format": "date-time"
          },
          "modified_time": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "$ref": "#/components/schemas/Minified_User"
          },
          "modified_by": {
            "$ref": "#/components/schemas/Minified_User"
          }
        }
      },
      "Associated_Groups_Wrapper": {
        "type": "object",
        "properties": {
          "user_groups": {
            "items": {
              "$ref": "#/components/schemas/Associated_Group"
            },
            "type": "array"
          },
          "info": {
            "$ref": "#/components/schemas/info"
          }
        }
      },
      "details": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id"
        ]
      },
      "Success_Response": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "nullable": true
          },
          "details": {
            "$ref": "#/components/schemas/details"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "success"
            ],
            "nullable": true
          }
        },
        "required": [
          "code",
          "details",
          "message",
          "status"
        ]
      },
      "SuccessWrapper": {
        "type": "object",
        "properties": {
          "users": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Success_Response"
                }
              ]
            },
            "type": "array"
          }
        },
        "required": [
          "users"
        ]
      },
      "ErrorDetails": {
        "type": "object",
        "properties": {
          "api_name": {
            "type": "string"
          },
          "json_path": {
            "type": "string"
          }
        },
        "required": [
          "api_name",
          "json_path"
        ]
      },
      "ErrorDetails1": {
        "type": "object",
        "properties": {
          "api_name": {
            "type": "string"
          },
          "json_path": {
            "type": "string"
          }
        }
      },
      "ExpectedFieldDetails": {
        "type": "object",
        "properties": {
          "expected_fields": {
            "items": {
              "$ref": "#/components/schemas/ErrorDetails"
            },
            "type": "array"
          }
        },
        "required": [
          "expected_fields"
        ]
      },
      "MandatoryError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "MANDATORY_NOT_FOUND",
              "EXPECTED_FIELD_MISSING"
            ]
          },
          "details": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ErrorDetails1"
              },
              {
                "$ref": "#/components/schemas/ExpectedFieldDetails"
              }
            ]
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "error"
            ]
          }
        },
        "required": [
          "code",
          "details",
          "message",
          "status"
        ]
      },
      "MandatoryWrapper": {
        "type": "object",
        "properties": {
          "users": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/MandatoryError"
                }
              ]
            },
            "type": "array"
          }
        },
        "required": [
          "users"
        ]
      },
      "InvalidError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "INVALID_DATA"
            ]
          },
          "details": {
            "$ref": "#/components/schemas/ErrorDetails1"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "error"
            ]
          }
        },
        "required": [
          "code",
          "details",
          "message",
          "status"
        ]
      },
      "InvalidWrapper": {
        "type": "object",
        "properties": {
          "users": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/InvalidError"
                }
              ]
            },
            "type": "array"
          }
        },
        "required": [
          "users"
        ]
      },
      "DuplicateError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "DUPLICATE_DATA"
            ],
            "nullable": true
          },
          "details": {
            "$ref": "#/components/schemas/ErrorDetails"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "error"
            ],
            "nullable": true
          }
        },
        "required": [
          "code",
          "details",
          "message",
          "status"
        ]
      },
      "DuplicateWrapper": {
        "type": "object",
        "properties": {
          "users": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DuplicateError"
                }
              ]
            },
            "type": "array"
          }
        },
        "required": [
          "users"
        ]
      },
      "InvalidTypeDetais": {
        "type": "object",
        "properties": {
          "expected_data_type": {
            "type": "string"
          },
          "regex": {
            "type": "string"
          },
          "api_name": {
            "type": "string"
          },
          "json_path": {
            "type": "string"
          }
        },
        "required": [
          "expected_data_type",
          "regex",
          "api_name",
          "json_path"
        ]
      },
      "InvalidTypeError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "INVALID_DATA"
            ]
          },
          "details": {
            "$ref": "#/components/schemas/InvalidTypeDetais"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "error"
            ]
          }
        },
        "required": [
          "code",
          "details",
          "message",
          "status"
        ]
      },
      "InvalidTypeWrapper": {
        "type": "object",
        "properties": {
          "users": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/InvalidTypeError"
                }
              ]
            },
            "type": "array"
          }
        },
        "required": [
          "users"
        ]
      },
      "MappingDetails": {
        "type": "object",
        "properties": {
          "mapped_field": {
            "$ref": "#/components/schemas/ErrorDetails"
          },
          "api_name": {
            "type": "string"
          },
          "json_path": {
            "type": "string"
          }
        },
        "required": [
          "mapped_field",
          "api_name",
          "json_path"
        ]
      },
      "InvalidMappingError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "MAPPING_MISMATCH"
            ]
          },
          "details": {
            "$ref": "#/components/schemas/MappingDetails"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "error"
            ]
          }
        },
        "required": [
          "code",
          "details",
          "message",
          "status"
        ]
      },
      "InvalidMappingWrapper": {
        "type": "object",
        "properties": {
          "users": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/InvalidMappingError"
                }
              ]
            },
            "type": "array"
          }
        },
        "required": [
          "users"
        ]
      },
      "MaxLengthDetails": {
        "type": "object",
        "properties": {
          "maximum_length": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "api_name": {
            "type": "string"
          },
          "json_path": {
            "type": "string"
          }
        },
        "required": [
          "maximum_length",
          "api_name",
          "json_path"
        ]
      },
      "MaxLengthError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "INVALID_DATA"
            ],
            "nullable": true
          },
          "details": {
            "$ref": "#/components/schemas/MaxLengthDetails"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "error"
            ],
            "nullable": true
          }
        },
        "required": [
          "code",
          "details",
          "message",
          "status"
        ]
      },
      "MaxLengthWrapper": {
        "type": "object",
        "properties": {
          "users": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/MaxLengthError"
                }
              ]
            },
            "type": "array"
          }
        },
        "required": [
          "users"
        ]
      },
      "InvalidUrlDetails": {
        "type": "object",
        "properties": {
          "resource_path_index": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "resource_path_index"
        ]
      },
      "InvalidUrlError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "INVALID_DATA"
            ]
          },
          "details": {
            "$ref": "#/components/schemas/InvalidUrlDetails"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "error"
            ]
          }
        },
        "required": [
          "code",
          "details",
          "message",
          "status"
        ]
      },
      "InvalidParamDetails": {
        "type": "object",
        "properties": {
          "api_name": {
            "type": "string"
          }
        },
        "required": [
          "api_name"
        ]
      },
      "InvalidParamError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "PATTERN_NOT_MATCHED"
            ]
          },
          "message": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/InvalidParamDetails"
          },
          "status": {
            "type": "string",
            "enum": [
              "error"
            ]
          }
        },
        "required": [
          "code",
          "message",
          "details",
          "status"
        ]
      },
      "InternalError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "INTERNAL_SERVER_ERROR"
            ]
          },
          "details": {
            "type": "object"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "error"
            ]
          }
        },
        "required": [
          "code",
          "details",
          "message",
          "status"
        ]
      }
    },
    "responses": {
      "Users": {
        "description": "No description provided.",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Response_Wrapper"
                }
              ]
            }
          }
        }
      },
      "Associated_Groups_Response": {
        "description": "No description provided.",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Associated_Groups_Wrapper"
                }
              ]
            }
          }
        }
      },
      "CreateSuccessResponse": {
        "description": "No description provided.",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/SuccessWrapper"
                }
              ]
            }
          }
        }
      },
      "SuccessResponse": {
        "description": "No description provided.",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/SuccessWrapper"
                }
              ]
            }
          }
        }
      },
      "ErrorResponse": {
        "description": "No description provided.",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/InvalidUrlError"
                },
                {
                  "$ref": "#/components/schemas/InvalidTypeError"
                },
                {
                  "$ref": "#/components/schemas/MandatoryError"
                },
                {
                  "$ref": "#/components/schemas/InvalidError"
                },
                {
                  "$ref": "#/components/schemas/InvalidParamError"
                },
                {
                  "$ref": "#/components/schemas/InvalidTypeWrapper"
                },
                {
                  "$ref": "#/components/schemas/InvalidWrapper"
                },
                {
                  "$ref": "#/components/schemas/MandatoryWrapper"
                },
                {
                  "$ref": "#/components/schemas/MaxLengthWrapper"
                },
                {
                  "$ref": "#/components/schemas/DuplicateWrapper"
                },
                {
                  "$ref": "#/components/schemas/InvalidMappingWrapper"
                }
              ]
            }
          }
        }
      },
      "RErrorResponse": {
        "description": "No description provided.",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/InvalidUrlError"
                },
                {
                  "$ref": "#/components/schemas/InvalidTypeError"
                },
                {
                  "$ref": "#/components/schemas/MandatoryError"
                },
                {
                  "$ref": "#/components/schemas/InvalidError"
                },
                {
                  "$ref": "#/components/schemas/InvalidParamError"
                }
              ]
            }
          }
        }
      },
      "InternalErrorResponse": {
        "description": "No description provided.",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/InternalError"
                }
              ]
            }
          }
        }
      },
      "RInternalErrorResponse": {
        "description": "No description provided.",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/InternalError"
                }
              ]
            }
          }
        }
      }
    },
    "parameters": {
      "user": {
        "name": "user",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "type": {
        "name": "type",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "ActiveUsers",
            "CurrentUser",
            "ActiveConfirmedUsers",
            "DeactiveUsers",
            "NotConfirmedUsers",
            "ConfirmedUsers"
          ]
        }
      },
      "X-ZOHO-SERVICE": {
        "name": "X-ZOHO-SERVICE",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "crmmobile"
          ]
        }
      },
      "X-ZCSRF-TOKEN": {
        "name": "X-ZCSRF-TOKEN",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "If-Modified-Since": {
        "name": "If-Modified-Since",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "page": {
        "name": "page",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "per_page": {
        "name": "per_page",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "ids": {
        "name": "ids",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "include": {
        "name": "include",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "body": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/wrapper"
            }
          }
        },
        "required": true
      }
    },
    "headers": {},
"securitySchemes": {
  "iam-oauth2-schema": {
    "type": "oauth2",
    "flows": {
      "authorizationCode": {
        "authorizationUrl": "https://accounts.zoho.com/oauth/v2/auth",
        "tokenUrl": "https://accounts.zoho.com/oauth/v2/token",
        "scopes": {
          "ZohoCRM.modules.ALL": "Full access to all modules in Zoho CRM"
        }
      }
    }
  }
},
    "examples": {},
    "links": {},
    "callbacks": {}
  }
}
